	FUNCTION FC 834  : VOID
	TITLE =MAL1S034 Section control: LINE 1 SEC 34 UNLOAD KILN 
	//COPYRIGHT:    (C) 2009 BY  BUHLER AG
	//                           CH-9240 UZWIL  SWITZERLAND
	//
	//PRODUCT:      WinCoS_BIW01_09
	//
	//TITLE:        LINE 1 SEC 34 UNLOAD KILN 
	//                 Section control
	//
	//--------------------------------------------------------------------------------
	//
	//IDENT:        AUTHOR:             DEPT:                              DATE:
	//
	//P01_FC834.1.0 K.Renz              CSB41                              13.Jan.2010
	//              1st Release
	//
	//--------------------------------------------------------------------------------
	//
	//PURPOSE: 
	//
	//REFERENCES : GCSOSMAN
	//
	//--------------------------------------------------------------------------------
	//
	//
	AUTHOR  : KR      
	FAMILY  : USW
	VERSION : 9.9
	//0000 to 0999: Main Functions
	//              0 =Main Function Cylic
	//              1 =Main Function Coldstart/Newstart
	//              2 =Main Function Warm Start
	
	VAR_INPUT
	  InCode : INT ;	
	END_VAR
	
	VAR_TEMP
	tmpStartNext : BOOL ;	//Condition to Start next element
	tmpFlagFault : BOOL ;	//Flag mechanical fault
	tmpEnableFeed : BOOL ;	
	tmpStartScale : BOOL ;	
	tmpStartLiqScale : BOOL ; //Enable to Start Lipquid Scale	
	tmpSndBin: Int ;	
	tmpRcvBin: Int ;	
	tmpBool : BOOL ;	
	tmpByte : BYTE ;	
	tmpWord : WORD ;	
	tmpDWord : DWORD ;	
	tmpInt : INT ;	
	tmpRET : INT ;	
	tmpDInt : DINT ;	
	END_VAR
	
	BEGIN
	
	NETWORK
	TITLE = 
	//=================================================
	//=================================================
	//S T A R T   M A I N   F U N C T I O N
	//=================================================
	//=================================================
	      L InCode;
	      L 0;
	      <>I;
	      BEB; 
	      
	NETWORK
	TITLE =Main0_Command: Commands user to section
	      NOP   0; 
	//-Tick 1 second---
		U     M 9.5; 
		=     MAL1S034.ToSSW.InfPulseTimer;
	//-Hardware stop---
		U     DB050.DBX31.0 ; 
		=     MAL1S034.PCRead.Status.StaHWStop;
		U   MAL1S034.PCRead.Status.StaHWStop;
		U   MAL1S034.ToASW.InfDataReady;
		S     MAL1S034.ToSSW.Func.CmdImmediateStop;
	//-Online---
		U     M 009.1 ; 
		=     MAL1S034.PCRead.Status.StaOnline;
	NETWORK
	TITLE =ASW_UC: User commands to section
	NOP 0;
	//-Additional user commands---
	// 
	NETWORK
	TITLE =Main0_Dest: Destination
	NETWORK
	TITLE =Main0_Next: Ready for next batch
	
		ON    MAL1S034.ToASW.InfDataReady;
		=     MAL1S034.ToSSW.InfReadyForNewBatch;
	NETWORK
	TITLE =Main0_Control: Control section
	      NOP   0; 
	//-Process commands from PCS---
		AUF   "MAL1S034" ;
		CALL FC    60 (// Methode O_Section
		CODE                     := 7);
	//-Process commands from user---
		AUF   "MAL1S034" ;
		CALL FC    60 (// Methode Control
		CODE                     := 0);
	//-Process section step---
		AUF   "MAL1S034" ;
		CALL FC    60 (// Methode Step_execute
		CODE                     := 2);
		AUF   "MAL1S034" ;
		CALL FC    60 (// Methode Step_transition
		CODE                     := 3);
	//-Process section state---
		AUF   "MAL1S034" ;
		CALL FC    60 (// Methode State
		CODE                     := 4);
	
	NETWORK
	TITLE =Main0_Init: Init
		UN    MAL1S034.ToASW.Transition.ToWait;
		UN    MAL1S034.ToASW.CmdNewBatch;
		SPB   in00; 
	//-User initialization---
		AUF   "MAL1S034" ;
	// 
	//-Section function: Init ---
		AUF   "MAL1S034" ;
	      CALL FC   120 (
	           InCode                   := 2003);// Section function: Init
	// 
	//-Group interface---
	// 
	//-Initialise bin objects---
	      SET ;  
	      S     MAl1S034RCV36.PCRead.Status.StaRegistrated; 
	      R     MAl1S034RCV36.PCRead.Hsk.F_Result; 
	// 
	//-Emptying job---
	      U    MAL1S034.JobAc.StaBatch.StaEmptyingBatch; 
	      S     MAL1S034.PCRead.Status.StaLoaded; 
	      S     MAl1S034RCV36.PCRead.Status.StaLoaded; 
	// 
	//-Error Batch---
	// 
	//Initialize bin data
		AUF   "MAl1S034RCV36" ;
		CALL FC    66 (// Methode Init Data
		  CODE                     := 2);
	in00:	NOP   0;
	
	NETWORK
	TITLE =ASW_VB: Various functions before bin control
	      NOP   0; 
	// 
	//-Update staSameSndRcv in sender binlist---
	NETWORK
	TITLE =Main0_BinLevel: MAl1S034RCV36 : Level
	//-Process bin levels---
		L       L#50000;
		T       #tmpDInt;
		AUF   "MAl1S034RCV36";
		CALL FC    78 (// Methode Update Bin Level
		  Mode                     := 0,
		  Flowrate                 := #tmpDInt);
	NETWORK
	TITLE =Main0_BinCtrl: MAl1S034RCV36 Control
	      NOP   0; 
	//-Tick 1 second---
		U     MAL1S034.ToSSW.InfPulseTimer;
		S     MAl1S034RCV36.ToSSW.CmdPulseTimer;
	//-List not used---
		UN   MAL1S034.ToASW.InfDataReady;
		O     MAl1S034RCV36.PCRead.StatusRec.StaListNotUsed;
		=     MAl1S034RCV36.PCRead.Status.StaListNotUsed;
	//-Enable Override Level---
		U    MAl1S034RCV36.PCRead.StatusRec.StaOverrideLevel;
		=      MAl1S034RCV36.PCRead.Status.StaOverrideLevel;
	//-List loaded---
		U     MAL1S034.ToSSW.InfFeeding;
		S     MAl1S034RCV36.PCRead.Status.StaLoaded;
	//-Feeding---
		U    MAL1S034.ToSSW.InfFeeding;
		=      MAl1S034RCV36.PCRead.Status.StaFeeding;
	//-Release emptying time---
		U     MAL1S034.ToSSW.InfReleaseEmptyingTime;
		=     MAl1S034RCV36.ToSSW.InfReleaseEmptyingTime;
	//-Ready for select---
		U     MAL1S034.ToASW.Transition.ToActive;
		U     MAl1S034RCV36.PCRead.Status.StaSpecialBin; 
		O ;
		UN    MAl1S034RCV36.PCRead.Status.StaLoaded;
		U     MAL1S034.Gr.All.OutPrestarted;
		U     MAl1S034RCV36.ToASW.InfPreselect;
		O     MAL1S034.ToASW.Transition.ToWait;
		ON    MAl1S034RCV36.ToASW.InfActive;
		=     MAl1S034RCV36.ToSSW.CmdReadyForSelect;
	//-Ready for deselect---
		U     MAL1S034.ToASW.Transition.ToActive;
		U     MAl1S034RCV36.PCRead.Status.StaSpecialBin; 
		O ;
		UN    MAl1S034RCV36.PCRead.Status.StaLoaded;
		U     MAL1S034.Gr.All.OutPrestarted;
		U     MAl1S034RCV36.ToASW.InfDeselect;
		O     MAL1S034.ToASW.Transition.ToWait;
		O     MAl1S034RCV36.PCRead.Status.StaListNotUsed;
		=     MAl1S034RCV36.ToSSW.CmdReadyForDeselect;
	//-New value---
		U     MAl1S034RCV36.ToASW.CmdNewData;
		S     MAl1S034RCV36.ToSSW.CmdReadNewValue;
	//-Result---
		U     MAL1S034.PCRead.Step.StEmptied;
		UN     MAl1S034RCV36.PCRead.Status.StaListNotUsed;
		=     MAl1S034RCV36.ToSSW.CmdSendResult;
	//-Process commands from PCS---
		AUF   "MAl1S034RCV36";
		CALL FC    66 (// Methode O_BIN
		  CODE                     := 7);
	//-Process bin object---
		AUF   "MAl1S034RCV36";
		CALL FC    66 (// Methode Control
		  CODE                     := 0);
	NETWORK
	TITLE =Main0_GrNRS: Not Relevant for started / Fault
		NOP 0;
	NETWORK
	TITLE =Main0_GrSelection: Group selection
	// List of the used objects in the section
	// ==========================
	// G023G       GENERAL ELEMENTS KILN MALT TRANSFER
	// G281M       ELEVATOR 9002 AFTER KILN
	// G282M       FLAP BOX 9008
	// G283M       CULM BATCH BIN 9005
	// G306M       DMBG DISCHARGER KILN MALT TRANSFER
	// G307M       SCREW CONVEYOR 9007 KILN MALT TRANSFER
	// G308M       BELT CONVEYOR 9009 KILN MALT TRANSFER
	// G309M       ELEVATOR EXCISTING
	// G310M       PLC1 TO EXCISTING DEGERMINATION SYSTEM
	// G311M       CENTRAL ASPIRATION UNLOAD KILN
	// 
	      NOP   0; 
//-Condition for preselection---
		U     MAL1S034.ToASW.InfDataReady;
		SPB   GS01;
//-Deselect groups ---
		CALL FB     9 , "GCS7_GrCtrlDBTmp" (// GrCtr.Methode Deselect
		     Code  := 3,
		     Sec   := "MAL1S034".Gr);
		SPA   GS02; 
//-Select groups ---
	GS01:	NOP 0;
	//-Prepare for preselection ---
		CALL FB     9 , "GCS7_GrCtrlDBTmp" (// GrCtr.Methode Init Preselection
		     Code  := 1,
		     Sec   := "MAL1S034".Gr);
	// 
	// 
	//-Prestart used groups --
		U     M     50.0; 
		=     M     50.0; 
		
	//-Preselect used groups --
		U     M     50.0; 
		=     M     50.0; 
	       SET;
		S   MAL1S034.Gr.InPreselect[23];   //-->G023G GENERAL ELEMENTS KILN MALT TRANSFER
		S   MAL1S034.Gr.InPreselect[281];   //-->G281M ELEVATOR 9002 AFTER KILN
		S   MAL1S034.Gr.InPreselect[282];   //-->G282M FLAP BOX 9008
		S   MAL1S034.Gr.InPreselect[283];   //-->G283M CULM BATCH BIN 9005
		S   MAL1S034.Gr.InPreselect[306];   //-->G306M DMBG DISCHARGER KILN MALT TRANSFER
		S   MAL1S034.Gr.InPreselect[307];   //-->G307M SCREW CONVEYOR 9007 KILN MALT TRANSFER
		S   MAL1S034.Gr.InPreselect[308];   //-->G308M BELT CONVEYOR 9009 KILN MALT TRANSFER
		S   MAL1S034.Gr.InPreselect[309];   //-->G309M ELEVATOR EXCISTING
		S   MAL1S034.Gr.InPreselect[310];   //-->G310M PLC1 TO EXCISTING DEGERMINATION SYSTEM
		S   MAL1S034.Gr.InPreselect[311];   //-->G311M CENTRAL ASPIRATION UNLOAD KILN
	
	// 
	//-Set CmdNewJob ---
	     U     MAL1S034.Gr.InPreselect[281];
	     UN    #GCS7_GrCtrlDB.OutOccupied[281];
	     S       G281M.CmdNewJob;
	     U     MAL1S034.Gr.InPreselect[282];
	     UN    #GCS7_GrCtrlDB.OutOccupied[282];
	     S       G282M.CmdNewJob;
	     U     MAL1S034.Gr.InPreselect[283];
	     UN    #GCS7_GrCtrlDB.OutOccupied[283];
	     S       G283M.CmdNewJob;
	     U     MAL1S034.Gr.InPreselect[306];
	     UN    #GCS7_GrCtrlDB.OutOccupied[306];
	     S       G306M.CmdNewJob;
	     U     MAL1S034.Gr.InPreselect[307];
	     UN    #GCS7_GrCtrlDB.OutOccupied[307];
	     S       G307M.CmdNewJob;
	     U     MAL1S034.Gr.InPreselect[308];
	     UN    #GCS7_GrCtrlDB.OutOccupied[308];
	     S       G308M.CmdNewJob;
	     U     MAL1S034.Gr.InPreselect[309];
	     UN    #GCS7_GrCtrlDB.OutOccupied[309];
	     S       G309M.CmdNewJob;
	     U     MAL1S034.Gr.InPreselect[310];
	     UN    #GCS7_GrCtrlDB.OutOccupied[310];
	     S       G310M.CmdNewJob;
	     U     MAL1S034.Gr.InPreselect[311];
	     UN    #GCS7_GrCtrlDB.OutOccupied[311];
	     S       G311M.CmdNewJob;
	// 
	// 
	//-Test preselected groups ---
		CALL FB     9 , "GCS7_GrCtrlDBTmp" (// GrCtr.Methode Select
		     Code  := 2,
		     Sec   := "MAL1S034".Gr);
	// 
	//-Way conflict if not available---
		CLR; 
		S     MAL1S034.Gr.All.OutGrConflict; 
	// 
	//-Test occupied real and virtual groups--- 
	GS02:   NOP 0;
		U     MAL1S034.Gr.All.OutSelectionValid; 
		UN    MAL1S034.Gr.All.OutGrIsLocked;
		=     MAL1S034.Gr.All.InOutASWSelectionOK; 
	// 
	// 
	//----- Send data to selected groups =====
	GS3:	UN  MAL1S034.Gr.OutSelected[281]; //G281M
		SPB GS4;
		L     "MAL1".Para.ParLineNr;
		T     G281M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G281M.Gr.InCode;
	GS4:	UN  MAL1S034.Gr.OutSelected[282]; //G282M
		SPB GS5;
		L     "MAL1".Para.ParLineNr;
		T     G282M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G282M.Gr.InCode;
	GS5:	UN  MAL1S034.Gr.OutSelected[283]; //G283M
		SPB GS6;
		L     "MAL1".Para.ParLineNr;
		T     G283M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G283M.Gr.InCode;
	GS6:	UN  MAL1S034.Gr.OutSelected[306]; //G306M
		SPB GS7;
		L     "MAL1".Para.ParLineNr;
		T     G306M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G306M.Gr.InCode;
	GS7:	UN  MAL1S034.Gr.OutSelected[307]; //G307M
		SPB GS8;
		L     "MAL1".Para.ParLineNr;
		T     G307M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G307M.Gr.InCode;
	GS8:	UN  MAL1S034.Gr.OutSelected[308]; //G308M
		SPB GS9;
		L     "MAL1".Para.ParLineNr;
		T     G308M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G308M.Gr.InCode;
	GS9:	UN  MAL1S034.Gr.OutSelected[309]; //G309M
		SPB GS10;
		L     "MAL1".Para.ParLineNr;
		T     G309M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G309M.Gr.InCode;
	GS10:	UN  MAL1S034.Gr.OutSelected[310]; //G310M
		SPB GS11;
		L     "MAL1".Para.ParLineNr;
		T     G310M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G310M.Gr.InCode;
	GS11:	UN  MAL1S034.Gr.OutSelected[311]; //G311M
		SPB GS12;
		L     "MAL1".Para.ParLineNr;
		T     G311M.Gr.InLine;
		L   MAl1S034RCV36.ToASW.BinActual;
		T   G311M.Gr.InCode;
	GS12:	NOP 0;
	NETWORK
	TITLE =Main0_GrCmd: CMD section to Groups
		
		NOP   0; 
//-Way Adjust Time---
		O     MAL1S034.Gr.All.CmdNewSelection;
		O     MAL1S034.ToASW.CmdModify;
		O     MAl1S034RCV36.ToASW.CmdNewWay;
		S     MAL1S034.ToSSW.CmdNewWay;
		AUF   "MAL1S034" ;
		CALL FC    60 (// Methode Adjust Time
		CODE                     := 13);
//-Continue---
		U     MAL1S034.ToASW.Func.CmdStart;
		O     MAL1S034.ToASW.Func.CmdNextStep;
		S     MAL1S034.Gr.All.CmdContinue;
//-Fault reset---
		U     MAL1S034.ToASW.Func.CmdFaultReset;
		S     MAL1S034.Gr.All.CmdFaultReset;
//-Manual mode---
		U     MAL1S034.ToASW.Func.CmdAutomatic;
		S     MAL1S034.Gr.All.CmdManualOff;
		UN     MAL1S034.PCRead.Status.StaHand;
		S     MAL1S034.Gr.All.CmdManualOffRel;
//-Clear idling---
		U     MAL1S034.PCRead.Status.StaImmediateStopASW;
		S     MAL1S034.Gr.All.CmdClearIdling;
//-Start next---
		UN    MAL1S034.PCRead.Status.StaStep;
		O     MAL1S034.ToASW.Func.CmdNextStep;
		U(;
		L       MAL1S034.PCRead.OutWayAdjustTime;
		L     2;
		>I;
		O     MAL1S034.ToASW.InfWayAdjustTimeEnd;
		);
		UN    MAL1S034.Gr.All.CmdNewSelection;
		UN    MAL1S034.PCRead.Step.StWait;
		=     #tmpStartNext; //-->VarStartNext
//-Start next feed---
		U     MAL1S034.Gr.Wgr.OutStartedRel;
		ON    MAL1S034.ToASW.InfWayAdjustTimeEnd;
		UN    MAL1S034.PCRead.Status.StaFeedOffASW;
		UN    MAL1S034.PCRead.Status.StaImmediateStopASW;
		U     MAL1S034.Gr.Mgr.OutStartedRel;
		U     MAL1S034.PCRead.Step.StActive;
		=     MAL1S034.Gr.Feed.InEnable;
		=     #tmpEnableFeed;
		U     #tmpStartNext;
		U     MAL1S034.Gr.Wgr.OutStartedRel;
		U     MAL1S034.Gr.All.OutAutoStartOk;
		U     MAL1S034.PCRead.Status.StaAutostartSec;
		=     MAL1S034.Gr.Feed.CmdNext;
//-Start next machine group---
		UN    MAL1S034.PCRead.Status.StaImmediateStopASW;
		=     MAL1S034.Gr.Mgr.InEnable;
		U     #tmpStartNext;
		=     MAL1S034.Gr.Mgr.CmdNext;
//-Start next way group---
		UN    MAL1S034.PCRead.Status.StaImmediateStopASW;
		=     MAL1S034.Gr.Wgr.InEnable;
		UN    MAL1S034.PCRead.Status.StaStep;
		O     MAL1S034.ToASW.Func.CmdNextStep;
		=     MAL1S034.Gr.Wgr.CmdNext;
//-Start next general group---
		UN    MAL1S034.PCRead.Status.StaImmediateStopASW;
		=     MAL1S034.Gr.Ggr.InEnable;
		U     #tmpStartNext;
		=     MAL1S034.Gr.Ggr.CmdNext;
//-Update command state---
		CALL FB     9 , "GCS7_GrCtrlDBTmp" (// GrCtr.Methode UpdateCmdSt
		     Code  := 4,
		     Sec   := "MAL1S034".Gr);
	
	NETWORK
	TITLE =Main0_Status: Fault/Status
		
		NOP   0; 
//- Autostart Section---
		UN    MAL1S034.ToASW.Func.CmdStart;
		O     MAL1S034.Gr.All.OutAutoStartOk;
		=     MAL1S034.TimeoutAutostart.EN;
		CALL FC18 (
		   IN                       := MAL1S034.TimeoutAutostart.EN,
		   PT                       := 10,
		   Q                        := MAL1S034.TimeoutAutostart.Q,
		ET                       := MAL1S034.TimeoutAutostart.ET);
		U     MAL1S034.TimeoutAutostart.Q;
		UN     MAL1S034.Gr.All.OutAutoStartOk;
		R     MAL1S034.PCRead.Status.StaAutostartSec;
		U     MAL1S034.ToASW.Func.CmdStart;
		ON    MAL1S034.ToASW.InfDataReady;
		S     MAL1S034.PCRead.Status.StaAutostartSec;
//-Stopped---
		UN    MAL1S034.Gr.Mgr.InEnable;
		U     MAL1S034.Gr.All.OutStoppedRel;
		O     MAL1S034.Gr.All.OutStoppedAll;
		UN    MAL1S034.PCRead.Status.StaStep;
		O;
		U     MAL1S034.Gr.Mgr.OutStoppedRel;
		U     MAL1S034.PCRead.Status.StaStep;
		=     MAL1S034.ToSSW.InfStopped;
//-Started---
		U     MAL1S034.Gr.Mgr.OutStartedRel;
		=     MAL1S034.ToSSW.InfStarted;
//-Feeding---
		U     MAL1S034.Gr.Feed.InEnable; //Section without Feed groups
		ON    MAL1S034.Gr.Feed.OutStoppedAll;
		U     MAL1S034.Gr.Feed.OutStartedRel;
		=     MAL1S034.ToSSW.InfFeeding;
//-Autostart---
		U     MAL1S034.Gr.All.OutAutostartOkAll;
		U     MAL1S034.PCRead.Status.StaAutostartSec;
		=     MAL1S034.PCRead.Status.StaAutostart;
//-DPFault---
		U     MAL1S034.Gr.All.OutDPFault;
		O    MAl1S034RCV36.PCRead.Status.StaDPFault;
		=     MAL1S034.PCRead.Status.StaDPFault;
		S       MAL1S034.ToSSW.Func.CmdFeedOff;
//-Startwarning---
		U     MAL1S034.Gr.All.OutStartWarning;
		=     MAL1S034.PCRead.Status.StaStartwarning;
//-Way conflict---
		U     MAL1S034.Gr.All.OutGrConflict;
		=     MAL1S034.PCRead.Fault.EsWayConflict;
//-Warning---
		U     MAL1S034.Gr.All.OutWarning;
		=     MAL1S034.PCRead.Fault.EsWarning;
//-Fault---
		U     MAL1S034.Gr.All.OutFaultRel;
		FP      MAL1S034.PCRead.Fault.EsMech;
		S       MAL1S034.ToSSW.Func.CmdFeedOff;
//-Sender empty---
		CLR;
		=     MAL1S034.PCRead.Fault.EsEmpty; //-->Sec.EsEmpty
//-Receiver full---
		U(; 
		O     MAl1S034RCV36.PCRead.Fault.EsLevelFault;
		O     MAl1S034RCV36.PCRead.Fault.EsNoNextBin;
		UN     MAl1S034RCV36.PCRead.Status.StaListNotUsed;
		); 
		=     MAL1S034.PCRead.Fault.EsFull;
	
	NETWORK
	TITLE =Main0_StatusASW: Status from ASW
		NOP   0; 
//-Transfer off with automatic restart---
		O    MAl1S034RCV36.ToASW.InfPreselect;
		O    MAl1S034RCV36.ToASW.InfDeselect;
		O    MAl1S034RCV36.PCRead.Status.StaFeedOff;
		O(;
		UN    MAl1S034RCV36.ToASW.InfActive;
		UN    MAl1S034RCV36.PCRead.Status.StaListNotUsed;
		);
		O     MAL1S034.PCRead.Fault.EsFull;
		O     MAL1S034.PCRead.Fault.EsEmpty;
		O     MAL1S034.PCRead.Fault.EsMech;
		O     MAL1S034.PCRead.Fault.EsWayConflict;
		O     MAL1S034.Gr.All.OutDPFault;
		O     MAL1S034.PCRead.Status.StaTransferOff;
		=     MAL1S034.PCRead.Status.StaTransferOffASW; 
//-Feed off with automatic restart---
		U     MAL1S034.PCRead.Status.StaTransferOffASW; 
		O     MAL1S034.PCRead.Status.StaFeedOff;
		=     MAL1S034.PCRead.Status.StaFeedOffASW; 
//-Immediate stop with automatic restart---
		U     MAL1S034.PCRead.Status.StaImmediateStop;
		=     MAL1S034.PCRead.Status.StaImmediateStopASW; 
//-Emptying time--- 
		UN   MAL1S034.ToSSW.InfFeeding;
		U     MAL1S034.Gr.Feed.OutStoppedRel;
		U     MAL1S034.ToSSW.InfStarted;
		UN  MAL1S034.PCRead.Step.StPassive;
		UN  MAL1S034.PCRead.Step.StIdling;
		=     MAL1S034.ToSSW.InfReleaseEmptyingTime;
	NETWORK
	TITLE =Main0_Transition: Condition for Transition
	
		NOP 0;
//-Active---
		U   MAL1S034.Gr.All.InOutASWSelectionOK;
	U(; 
	U     MAl1S034RCV36.ToASW.InfActive;
	UN     MAl1S034RCV36.ToASW.InfPreselect;
	O     MAl1S034RCV36.PCRead.Status.StaListNotUsed;
	); 
		=     MAL1S034.ToSSW.CmdGotoActive;
//-Ready---
		UN   "MAL1S032".ToASW.InfSameBatchNextSec;
		UN   "MAL1S033".ToASW.InfSameBatchNextSec;
		UN   MAL1S034.ToASW.InfSameBatchPrevSec;
		=     MAL1S034.ToSSW.CmdGotoReady;
//-Emptying---
	        U    MAL1S034.PCRead.Step.StReady; 
		UN   MAL1S034.ToASW.InfSameBatchPrevSec;
		=     MAL1S034.ToSSW.CmdGotoEmptying;
//-Emptied---
		UN    MAL1S034.PCRead.Status.StaLoaded;
		=     MAL1S034.ToSSW.CmdGotoEmptied;
//-Result section---
		U( ;
		U  MAl1S034RCV36.PCRead.Status.StaRegistrated;
		O  MAl1S034RCV36.PCRead.Status.StaListNotUsed;
		) ;
		=     #tmpBool;                   //-> Bin objects are registrated
		U     #tmpBool;                    // Bin objects are registrated
		U  MAL1S034.PCRead.Step.StEmptied;
		=  MAL1S034.ToSSW.CmdSendResult;
//-Idling---
		U     #tmpBool;                    // Bin objects are registrated
		U    MAL1S034.JobAc.StaBatch.StaRegistrated;
		ON    MAL1S034.PCRead.Status.StaOnline;
		U     MAL1S034.PCRead.Step.StEmptied;
		=     MAL1S034.ToSSW.CmdGotoIdling;
//-Passive---
		U     MAL1S034.PCRead.Step.StIdling;
		U     MAL1S034.ToSSW.InfStopped;
		=     MAL1S034.ToSSW.CmdGotoPassive;
	NETWORK
	TITLE =Main0_Move: Move to next section
	NETWORK
	TITLE =ASW_AH:Alarm horns
	      UN    MAL1S034.ToASW.Func.CmdHornOn; 
	      SPB   AHJ1; 
	      CALL "SYS_Horn_Code" (
	           FcCode                   := 1, //Set Alarm
	           ParObjectType            := 4000,
	           ParObjectNo              := 0,
	           ParHornCode              := 98);
	AHJ1: UN    MAL1S034.ToASW.Func.CmdHornOff; 
	      SPB   AH00; 
	      CALL "SYS_Horn_Code" (
	           FcCode                   := 2, //Reset Alarm
	           ParObjectType            := 4000,
	           ParObjectNo              := 0,
	           ParHornCode              := 12);
	AH00: NOP   0; 
	NETWORK
	TITLE =ASW_FT: Feeding Time
		AUF   "MAL1S034" ;
	      CALL FC   120 (
	           InCode                 := 2004);// Section function: Feeding time
	
	NETWORK
	TITLE =ASW_OL: Override low level
	// 
		AUF   "MAL1S034" ;
	// 
	OL00: NOP   0; 
	NETWORK
	TITLE =ASW_VA: VA Various functions after section control
	// 
		AUF   "MAL1S034" ;
	// Copy bin number to section DB
	        L   MAL1S034.JobAc.BatchSndBin;
		L   MAL1S034.MAL1S001SND33.Ingr[1].Bin;
	        T   MAL1S034.JobAc.BatchSndBin;
		<>I;
		S   MAL1S034.ChangeBit.CBit1;
		// 
	        L   MAL1S034.JobAc.BatchRcvBin;
		L   MAL1S034.MAL1S001RCV34.Ingr[1].Bin;
	        T   MAL1S034.JobAc.BatchRcvBin;
		<>I;
		S   MAL1S034.ChangeBit.CBit1;
		// 
	        L   MAL1S034.JobAc.BatchRcvBin;
		L   MAl1S034RCV36.ToASW.BinActual;
	        T   MAL1S034.JobAc.BatchRcvBin;
		<>I;
		S   MAL1S034.ChangeBit.CBit1;
		// 
	
	NETWORK
	TITLE =ASW_EJ End of job
	NOP 0;
	// 
	//-Fluidlift monitoring---
	NETWORK
	TITLE =ASW_VE: VE New value event
	// 
	//-Group interface---
	      U    MAL1S034.ToASW.CmdModify;
	      S     G281M.CmdNewValue;
	      S     G282M.CmdNewValue;
	      S     G283M.CmdNewValue;
	      S     G306M.CmdNewValue;
	      S     G307M.CmdNewValue;
	      S     G308M.CmdNewValue;
	      S     G309M.CmdNewValue;
	      S     G310M.CmdNewValue;
	      S     G311M.CmdNewValue;
	
	
	NETWORK
	TITLE =ASW_NV: New value data
	NETWORK
	TITLE =ASW_WR: Weight receiver
	// 
	      U     MAL1S034.PCRead.Step.StActive; 
	      O     MAL1S034.PCRead.Step.StReady; 
	      O     MAL1S034.PCRead.Step.StEmptying; 
	      O     MAL1S034.PCRead.Step.StEmptied; 
	      UN M 50.0; // Put the actual job weights to receiver bin list
	      SPBN  WR09; 
	      L       0; 
	      T       MAl1S034RCV36.ToSSW.WeightTotal;
	// 
	WR09: NOP   0; 
	NETWORK
	TITLE =ASW_WJ: Weight job
	// 
	      U     MAL1S034.PCRead.Step.StActive; 
	      O     MAL1S034.PCRead.Step.StReady; 
	      O     MAL1S034.PCRead.Step.StEmptying; 
	      O     MAL1S034.PCRead.Step.StEmptied; 
	      SPBN   WJ08; 
	// 
	      L     MAL1S034.JobNom.JobWeight; //Target/Actual registration if no scale
	      T     MAL1S034.JobAc.JobWeight;
	// 
	WJ08: NOP 0;
	//-------------------------------------------- 
	//PW Prestop weight
	//-------------------------------------------- 
	WJ00: NOP   0; 
	NETWORK
	TITLE =ASW_SC: Section status text and colour
	// 
		AUF   "MAL1S034" ;
	      CALL FC   120 (
	           InCode                   := 2055);// Section function: WinCoS.SectionInfoCode
	// 
	
	NETWORK
	TITLE =Main0_End: Init flag
		SET;
		R     MAL1S034.Gr.All.CmdNewSelection;
		R     MAL1S034.ToASW.CmdNewBatch;
		R     MAL1S034.ToASW.CmdModify;
		R     MAl1S034RCV36.ToASW.CmdNewWay;
		R     MAl1S034RCV36.ToASW.CmdNewData;
	
	NETWORK
	TITLE =End of block
	
	      BE    ; 
	
	END_FUNCTION
