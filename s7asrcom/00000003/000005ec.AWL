	FUNCTION_BLOCK FB 391
	TITLE =G291M LIFTING DEVICE KILN 2
	//COPYRIGHT:    (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
	//
	//PRODUCT:      WinCoS_BIW01_09
	//
	//TITLE:        LIFTING DEVICE KILN 2
	//                Machine group control
	//                Maschinengruppensteuerung
	// 
	//--------------------------------------------------------------------------------
	// 
	//IDENT:        AUTHOR:             DEPT:                              DATE:
	// 
	//P01_FB391.1.0 K.Renz              CSB41                              13.Jan.2010
	//             1st Release
	// 
	//--------------------------------------------------------------------------------
	// 
	//PURPOSE: 
	// 
	//MANUAL : 
	// 
	//RESTRICTIONS: 
	// 
	//--------------------------------------------------------------------------------
	AUTHOR  : KR      
	FAMILY  : USW
	VERSION : 9.9
	
	
	VAR
	  Gr       : FB10;	//Standard interface to group
	  InOutValue1    : DINT; //Data for user
	  InOutValue2    : DINT; //Data for user
	  OutWayConflict : BOOL;	//Data for user
	  OutSelectionOk : BOOL;	//Data for user
	  CmdNewValue : BOOL;	//Data for user
	  CmdNewJob   : BOOL;	//Data for user
	  OutCodeOK   : BOOL;	//Data for user
	  InEndOfJob  : BOOL ;	//Data for user
	  staWayOk      : BOOL ;	//Data for user
	  EdgeStartRelease : BOOL ;	//Data for user
	  USW8  : BOOL;	//Data for user
	  USW9 : BOOL;	//Data for user
	  USW10: BOOL;	//Data for user
	  USW11: BOOL;	//Data for user
	  USW12: BOOL;	//Data for user
	  USW13: BOOL;	//Data for user
	  USW14: BOOL;	//Data for user
	  USW15: BOOL;	//Data for user
	     #A_3211_MXZ21_31MA : FB1021;   // LiftingDevice 
	END_VAR
	VAR_TEMP
	   tmpEnable		: BOOL;
	   tmpFlag  		: BOOL;
	   tmpCmdNext		: BOOL;
	   tmpLocal  		: BOOL;
	   tmpAspOk  		: BOOL;
	   tmpHWStop 		: BOOL;
	   tmpInstanzDBNo       : INT ;
	END_VAR
	BEGIN
	NETWORK
	TITLE =
	NETWORK
	TITLE =Read command from group control
	//Parameter
	      SET;
	      S   GCS7_GrCtrlDB.ParMGR[291];
	      R   GCS7_GrCtrlDB.ParWGR[291];
	      R   GCS7_GrCtrlDB.ParGGR[291];
	      R   GCS7_GrCtrlDB.ParFeed[291];
	      R   GCS7_GrCtrlDB.ParShare[291];
	      S   #Gr.Par.ParMgr;
	      R   #Gr.Par.ParWgr;
	      R   #Gr.Par.ParGgr;
	//Command
	      U   #GCS7_GrCtrlDB.OutEnable[291];
	      =   #Gr.InEnableGr;
	      U   #GCS7_GrCtrlDB.OutOccupied[291];
	      =   #Gr.InOccupied;
	      U   #GCS7_GrCtrlDB.CmdFaultReset[291];
	      R   #GCS7_GrCtrlDB.CmdFaultReset[291];
	      S   #Gr.CmdFaultReset;
	      U  #GCS7_GrCtrlDB.CmdNext[291];
	      R   #GCS7_GrCtrlDB.CmdNext[291];
	      S   #Gr.CmdNext;
	      U   #GCS7_GrCtrlDB.CmdManualOff[291];
	      O   #GCS7_GrCtrlDB.OutOccupied[291];
	      R   GCS7_GrCtrlDB.CmdManualOff[291];
	      S   #Gr.CmdManualOff;
	      U  GCS7_GrCtrlDB.CmdContinue[291];
	      R   GCS7_GrCtrlDB.CmdContinue[291];
	      S   #Gr.CmdContinue;
	//Init Line Number
	      U   GCS7_GrCtrlDB.ParShare[291];
	      SPBN WE00; 
	      L     0;
	      T     #Gr.InLine;
	WE00: NOP   0;
	NETWORK
	TITLE =Call Methode Control
	// 1. Handle Interface PCControl      
	// 2. Prepare mode --> ModePassive,ModeActive,ModeIdling      
	// 3. Reset global flags of the group
	      CALL #Gr (
	           FcCode                   := 1);
	NETWORK
	TITLE =Restart Idling Time
		L  #Gr.Par.ParIdling;
		L  2;
		>=I;
		SPB IdTm;
		T  #Gr.Par.ParIdling;
	IdTm:   NOP 0;
	      CLR; 
	      S    #Gr.CmdRestartIdling; 
	NETWORK
	TITLE =Prepare global flags
	NETWORK
	TITLE =Set Pattern (Target position)
	      U     #Gr.InManual;
	      SPB   ILO6;
	      L     "MAL1S033Par".Par.MachineValue.SOLLWERT_HUBZUG1_HOEHE;
	      L     "MAL1S033Par".Par.MachineValue.SOLLWERT_HUBZUG2_HOEHE;
	      -I;
	      SPPZ  H1H;
	      L     "MAL1S033Par".Par.MachineValue.SOLLWERT_HUBZUG2_HOEHE;
	      SPA   IPT;
	H1H:  L     "MAL1S033Par".Par.MachineValue.SOLLWERT_HUBZUG1_HOEHE;
	IPT:  T     #A_3211_MXZ21_31MA.Ma.InPositionTarget;
	      SPA   En06;
	ILO6: NOP   0;
	      L     "MAL1S033Par".Par.ParIntProcess.TarPos_ILO_LiftDev;
	      T     #A_3211_MXZ21_31MA.Ma.InPositionTarget;
	En06: NOP   0;
	//-Schief beladen---
	      L     0;
	      U     "MAL1S033Par".Par.FlagFunction_1.StepLoading;
	      SPBN  BLS0;
	      L       "MAL1S033Par".RecipeHeader.Loading.BankingLoadingScrew;
	BLS0: T     #A_3211_MXZ21_31MA.Ma.BankingLoadingScrew;
	NETWORK
	TITLE =Interlocking WayOk
	//
	NETWORK
	TITLE =Interlocking Autostart
		CLR;
		R   #Gr.OutAutostart;
	NETWORK
	TITLE =Interlocking Enable
	      U     #Gr.InEnableGr; 
	      =     #Gr.OutEnableEl; 
	      
	NETWORK
	TITLE =Interlocking Next
	      U     #Gr.CmdNext;
	      U     #Gr.OutAutostart;
	      UN    #Gr.OutNewWay;
	      =    #tmpCmdNext;
	      
	NETWORK
	TITLE =Interlocking Local / HWStop
	      U    DB050.DBX32.4;
	      =    #tmpHWStop;
	
	      U    #Gr.ModePassive;
	      O    #tmpHWStop;
	      =    #tmpLocal;
	 
	NETWORK
	TITLE ==A-3211-MXZ21/31MA : LIFTING DRIVE 
	NOP 0;
	//-InLocal---
	      U     #tmpLocal; 
	      =     #A_3211_MXZ21_31MA.Ma.InLocal; 
	//
	//-Interlocking---
	      U     #Gr.OutEnableEl;
	      =     #A_3211_MXZ21_31MA.Ma.InEnableUp;
	      U(    ;
	      U     "MAL1S033Par".Par.FlagFunction_1.StepLoading;
	//      U     "Gxxx".Mxxx.StStartedFwd;
	      )     ;
	      O(;
	      U     "MAL1S033Par".Par.FlagFunction_1.StepUnloading;
	//      U     "Gxxx".Mxxx.StStartedRev;
	      O;
	      U     "MAL1S033Par".Par.FlagFunction_1.StepUnloading;
	      U     "MAL1S033Par".Par.FlagFunction_1.FinishUnloading;
	//      U     "Gxxx".Mxxx.Ma.OutAdjusted;
	      )     ;
	      O(    ;
	      UN    "MAL1S033Par".Par.FlagFunction_1.StepLoading;
	      UN    "MAL1S033Par".Par.FlagFunction_1.StepUnloading;
	      )     ;
	      O     #Gr.InOutAutostartMan;       // ILO-mode
	      U     #Gr.OutEnableEl;
	      =     #A_3211_MXZ21_31MA.Ma.InEnableDown;
	// 
	      U     #tmpCmdNext;
	      S     #A_3211_MXZ21_31MA.Ma.CmdNext;
	// 
	      SET   ;
	      =     #A_3211_MXZ21_31MA.Ma.InInterlocked;
	// 
	// Hubzüge nur bis min Position wenn senken, wenn die Ausräumklappe geschlossen ist
	      U(    ;
	      U     #A_3211_MXZ21_31MA.Ma.OutHigherMinPos;
	//    O     "Gxxx".Mxxx.StStartedRev;
	      );
	      =     #A_3211_MXZ21_31MA.Ma.InEnableLowerMinPos;    // #Ma.InEnableLowerMinPos
	// 
	      =     #A_3211_MXZ21_31MA.Ma.InPowerOk;
	// 
	      U     #A_3211_MXZ21_31MA.Ma.InPowerOk;
	//      L     S5T#15S;                     // Zeit zum Initialisierung
	//      SE    T    391;
	//      U     T    391;
	      =     #A_3211_MXZ21_31MA.Ma.InPowerOkDelayDone;
	// 
	//-Counter calibration by startup---
	      U    M 50.0;
	      =     #A_3211_MXZ21_31MA.Ma.InCalibration;    // #Ma.InCalibration
	      U    M 50.0;
	      =     #A_3211_MXZ21_31MA.Ma.InCalibrationZero;    // #Ma.InCalibrationZero
	// 
	//-Unloading mode---
	      U     "MAL1S033".PCRead.Step.StEmptying;
	      U     "MAL1S033Par".Par.FlagFunction_1.StepUnloading;    // Step unloading
	      UN    "MAL1S033Par".Par.FlagFunction_1.FinishUnloading;
	      UN    "MAL1S033Par".Par.FlagFunction_0.ScrewAboveProductLayer;
	      UN    #Gr.InOutAutostartMan;
	      =     #A_3211_MXZ21_31MA.Ma.InUnloading;
	// 
	//=Values and commands of elements===
	//-=A-3211-BZS23---
	//      CLR
	//      S     #A_3211_MXZ21_31MA.A_3211_BZS23.CmdRunTimeOutTime
	//-=A-3211-BZS33---
	//      CLR
	//      S     #A_3211_MXZ21_31MA.A_3211_BZS33.CmdRunTimeOutTime
	//-=A-3211-QYS22---
	//      CLR
	//      S     #A_3211_MXZ21_31MA.A_3211_QYS22.CmdRunTimeOutTime
	//-=A-3211-QYS32---
	//      CLR
	//      S     #A_3211_MXZ21_31MA.A_3211_QYS32.CmdRunTimeOutTime
	//-=A-3211-MXZ21_SM---
	//      CLR
	//      S     #A_3211_MXZ21_31MA.A_3211_MXZ21_SM.CmdRunTimeOutTime
	//-=A-3211-MXZ31_SM---
	//      CLR
	//      S     #A_3211_MXZ21_31MA.A_3211_MXZ31_SM.CmdRunTimeOutTime
	//-=A-3211-MXZ21/31_BM---
	//      CLR
	//      S     #A_3211_MXZ21_31MA.A_3211_MXZ21_31_BM.CmdRunTimeOutTime
	// 
	//-Read inputs of elements---
	      U     E 1000.1; 
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ21.InpRunFwd; 
	      U     E 1000.2; 
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ21.InpRunRev; 
	      U   DB050.DBX32.4;
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ21.InHWStop;
	       U     PLC_DPInfo.Master[1].SlavesError[101];
	       =       #A_3211_MXZ21_31MA.A_3211_MXZ21.InDPFault;
	      U     E 1000.3; 
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ31.InpRunFwd; 
	      U     E 1000.4; 
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ31.InpRunRev; 
	      U   DB050.DBX32.4;
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ31.InHWStop;
	       U     PLC_DPInfo.Master[1].SlavesError[101];
	       =       #A_3211_MXZ21_31MA.A_3211_MXZ31.InDPFault;
	      U     E 1025.2; 
	      =     #A_3211_MXZ21_31MA.A_3211_BZS23.InpTrue; 
	      U   DB050.DBX32.4;
	      =     #A_3211_MXZ21_31MA.A_3211_BZS23.InHWStop;
	       U     PLC_DPInfo.Master[1].SlavesError[103];
	       =       #A_3211_MXZ21_31MA.A_3211_BZS23.InDPFault;
	      U     E 1025.6; 
	      =     #A_3211_MXZ21_31MA.A_3211_BZS33.InpTrue; 
	      U   DB050.DBX32.4;
	      =     #A_3211_MXZ21_31MA.A_3211_BZS33.InHWStop;
	       U     PLC_DPInfo.Master[1].SlavesError[103];
	       =       #A_3211_MXZ21_31MA.A_3211_BZS33.InDPFault;
	      U     E 1004.4; 
	      =     #A_3211_MXZ21_31MA.A_3211_QYS22.InpTrue; 
	      U     E 1004.5; 
	      =     #A_3211_MXZ21_31MA.A_3211_QYS32.InpTrue; 
	      U   DB050.DBX32.4;
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ21_SM.InHWStop;
	      U   DB050.DBX32.4;
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ31_SM.InHWStop;
	      U   DB050.DBX32.4;
	      =     #A_3211_MXZ21_31MA.A_3211_MXZ21_31_BM.InHWStop;
	// 
	//-Set Parameters---
	// 
	//-Call object control---
	      CALL  #A_3211_MXZ21_31MA;
	// 
	//-Write outputs---
	      U     #A_3211_MXZ21_31MA.A_3211_MXZ21.OutpRunFwd; 
	      =     A 1000.1; 
	      U     #A_3211_MXZ21_31MA.A_3211_MXZ21.OutpRunRev; 
	      =     A 1000.2; 
	      U     #A_3211_MXZ21_31MA.A_3211_MXZ31.OutpRunFwd; 
	      =     A 1000.3; 
	      U     #A_3211_MXZ21_31MA.A_3211_MXZ31.OutpRunRev; 
	      =     A 1000.4; 
	NETWORK
	TITLE =Test Fault
	      U     #A_3211_MXZ21_31MA.Ma.StFault;
	      =     #Gr.VarFault; 
	NETWORK
	TITLE =Test Warning
	      CLR;   
	      =     #Gr.OutWarning;
	NETWORK
	TITLE =Test Stopped
	      U(;
	      O     #A_3211_MXZ21_31MA.Ma.StStopped; 
	      O     #A_3211_MXZ21_31MA.Ma.StAdjusted; 
	      );
	      UN   #Gr.VarFault; 
	      =     #Gr.VarStopped; 
	NETWORK
	TITLE =Test Started
	      U     #A_3211_MXZ21_31MA.Ma.StAdjusted; 
	      UN  #Gr.VarStopped; 
	      UN  #Gr.VarFault; 
	      =     #Gr.VarStarted; 
	NETWORK
	TITLE =Enable Previous Group
	      U    #Gr.VarStarted;
	      =     #Gr.OutEnablePrevGr;
	NETWORK
	TITLE =Call Methode State
	//1. Make State of the group: This function use the signals:
	//        Gr.VarStopped, Gr.VarStarted, Gr.VarFault
	//2.Reset Commands to group: e.g.CmdFaultReset
	      CALL #Gr (
	           FcCode                   := 2);
	NETWORK
	TITLE =Init
	      SET; 
	      R    #CmdNewValue;
	      R    #CmdNewJob;
	NETWORK
	TITLE =Write data to group control
	      U   #Gr.StStopped;
	      =   GCS7_GrCtrlDB.InStopped[291];
	      U   #Gr.StStarted;
	      =   GCS7_GrCtrlDB.InStarted[291];
	      U   #Gr.StFault;
	      =   GCS7_GrCtrlDB.InFault[291];
	      U   #Gr.OutWarning;
	      =   GCS7_GrCtrlDB.InWarning[291];
	      U   #Gr.OutManual;
	      =   GCS7_GrCtrlDB.InManual[291];
	      U   #Gr.OutHWStop;
	      =   GCS7_GrCtrlDB.InHWStop[291];
	      U   #Gr.OutDPFault;
	      =   GCS7_GrCtrlDB.InDPFault[291];
	      U   #Gr.OutLoaded;
	      =   GCS7_GrCtrlDB.InLoaded[291];
	      U   #Gr.OutAutoStart;
	      =   GCS7_GrCtrlDB.InAutoStart[291];
	      U   #Gr.VarStartWarning;
	      =   GCS7_GrCtrlDB.InStartWarning[291];
	NETWORK
	TITLE =End of block
	
	BE
	
	END_FUNCTION_BLOCK
