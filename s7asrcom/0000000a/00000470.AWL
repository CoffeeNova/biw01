
FUNCTION_BLOCK "A_3955_MXZ01MA_Code"
TITLE =A_3955_MXZ01MA SCREW CONVEYOR DRIVE
//COPYRIGHT:     (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
//
//PRODUCT:       WinCoS_BIW01_09
//
//TITLE:         SCREW CONVEYOR DRIVE
// 
//--------------------------------------------------------------------------------
// 
//IDENT:         AUTHOR:             DEPT:                             DATE:
// 
//P01_FB1027.1.0 K.Renz              CSB41                             25.Mai.2010
//               1st Release
// 
//--------------------------------------------------------------------------------
// 
//PURPOSE: 
// 
//MANUAL : 
// 
//RESTRICTIONS: 
// 
//--------------------------------------------------------------------------------
AUTHOR : KR
FAMILY : USW
VERSION : 0.0


VAR
  Ma : "GCS7_M_FB50_Data";	// Machine
  A_3955_BFT09 : "GCS7_E_Level";	// Mon1: DigInpCont
  Mon2 : "GCS7_E_DigInput";	// Mon2: DigInpCont
  Mon3 : "GCS7_E_DigInput";	// spare
  A_3955_BSA11 : "GCS7_E_DigInput";	// Mon4: DigInpCont
  Mon5 : "GCS7_E_DigInput";	// spare
  Mon6 : "GCS7_E_DigInput";	// spare
  A_3955_MXZ01 : "GCS7_E_Motor";	// Motor: Motor
END_VAR
BEGIN
NETWORK
TITLE =Call SSW

      UC    "GCS7_M_Motor6Mon"; 
END_FUNCTION_BLOCK


FUNCTION_BLOCK "G307M_Code"
TITLE =G307M SCREW CONVEYOR 9007 KILN MALT TRANSFER
//COPYRIGHT:    (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
//
//PRODUCT:      WinCoS_BIW01_09
//
//TITLE:        SCREW CONVEYOR 9007 KILN MALT TRANSFER
//                Machine group control
//                Maschinengruppensteuerung
// 
//--------------------------------------------------------------------------------
// 
//IDENT:        AUTHOR:             DEPT:                              DATE:
// 
//P01_FB407.1.0 K.Renz              CSB41                              25.Mai.2010
//             1st Release
// 
//--------------------------------------------------------------------------------
// 
//PURPOSE: 
// 
//MANUAL : 
// 
//RESTRICTIONS: 
// 
//--------------------------------------------------------------------------------
AUTHOR : KR
FAMILY : USW
VERSION : 9.9


VAR
  Gr : "GCS7_GrpCtrlSub";	//Standard interface to group
  InOutValue1 : DINT ;	//Data for user
  InOutValue2 : DINT ;	//Data for user
  OutWayConflict : BOOL ;	//Data for user
  OutSelectionOk : BOOL ;	//Data for user
  CmdNewValue : BOOL ;	//Data for user
  CmdNewJob : BOOL ;	//Data for user
  OutCodeOK : BOOL ;	//Data for user
  InEndOfJob : BOOL ;	//Data for user
  staWayOk : BOOL ;	//Data for user
  EdgeStartRelease : BOOL ;	//Data for user
  USW8 : BOOL ;	//Data for user
  USW9 : BOOL ;	//Data for user
  USW10 : BOOL ;	//Data for user
  USW11 : BOOL ;	//Data for user
  USW12 : BOOL ;	//Data for user
  USW13 : BOOL ;	//Data for user
  USW14 : BOOL ;	//Data for user
  USW15 : BOOL ;	//Data for user
  A_3955_MXZ01MA : "A_3955_MXZ01MA_Code";	// Motor+6DI 
     #A_3946_MXZ01 : FB13;   // VLS 
END_VAR
VAR_TEMP
  tmpEnable : BOOL ;	
  tmpFlag : BOOL ;	
  tmpCmdNext : BOOL ;	
  tmpLocal : BOOL ;	
  tmpAspOk : BOOL ;	
  tmpHWStop : BOOL ;	
  tmpInstanzDBNo : INT ;	
END_VAR
BEGIN
NETWORK
TITLE =

NETWORK
TITLE =Read command from group control
//Parameter
      SET   ; 
      S     "GCS7_GrCtrlDB".ParMGR[307]; 
      R     "GCS7_GrCtrlDB".ParWGR[307]; 
      R     "GCS7_GrCtrlDB".ParGGR[307]; 
      R     "GCS7_GrCtrlDB".ParFeed[307]; 
      R     "GCS7_GrCtrlDB".ParShare[307]; 
      S     #Gr.Par.ParMgr; 
      R     #Gr.Par.ParWgr; 
      R     #Gr.Par.ParGgr; 
//Command
      U     "GCS7_GrCtrlDB".OutEnable[307]; 
      =     #Gr.InEnableGr; 
      U     "GCS7_GrCtrlDB".OutOccupied[307]; 
      =     #Gr.InOccupied; 
      U     "GCS7_GrCtrlDB".CmdFaultReset[307]; 
      R     "GCS7_GrCtrlDB".CmdFaultReset[307]; 
      S     #Gr.CmdFaultReset; 
      U     "GCS7_GrCtrlDB".CmdNext[307]; 
      R     "GCS7_GrCtrlDB".CmdNext[307]; 
      S     #Gr.CmdNext; 
      U     "GCS7_GrCtrlDB".CmdManualOff[307]; 
      O     "GCS7_GrCtrlDB".OutOccupied[307]; 
      R     "GCS7_GrCtrlDB".CmdManualOff[307]; 
      S     #Gr.CmdManualOff; 
      U     "GCS7_GrCtrlDB".CmdContinue[307]; 
      R     "GCS7_GrCtrlDB".CmdContinue[307]; 
      S     #Gr.CmdContinue; 
//Init Line Number
      U     "GCS7_GrCtrlDB".ParShare[307]; 
      SPBN  WE00; 
      L     0; 
      T     #Gr.InLine; 
WE00: NOP   0; 
NETWORK
TITLE =Call Methode Control
// 1. Handle Interface PCControl      
// 2. Prepare mode --> ModePassive,ModeActive,ModeIdling      
// 3. Reset global flags of the group
      CALL #Gr (
           FcCode                   := 1);
NETWORK
TITLE =Restart Idling Time

      L     #Gr.Par.ParIdling; 
      L     2; 
      >=I   ; 
      SPB   IdTm; 
      T     #Gr.Par.ParIdling; 
IdTm: NOP   0; 
      CLR   ; 
      S     #Gr.CmdRestartIdling; 
NETWORK
TITLE =Prepare global flags

NETWORK
TITLE =Set Pattern (Target position)

NETWORK
TITLE =Interlocking WayOk

NETWORK
TITLE =Interlocking Autostart

      UN    "G281M".Gr.OutAutostart; 
      ON    "G281M".Gr.OutAutostart; 
      ON    "G311M".Gr.OutAutostart; 
      R     #Gr.OutAutostart; 
NETWORK
TITLE =Interlocking Enable

      U     "G281M".Gr.OutEnablePrevGr; 
      U     "G281M".Gr.OutEnablePrevGr; 
      U     #Gr.InEnableGr; 
      =     #Gr.OutEnableEl; 

NETWORK
TITLE =Interlocking Next

      U     "G311M".Gr.OutEnablePrevGr; 
      U     #Gr.CmdNext; 
      U     #Gr.OutAutostart; 
      UN    #Gr.OutNewWay; 
      =     #tmpCmdNext; 

NETWORK
TITLE =Interlocking Local / HWStop

      U     "PLC_SystemDB".HardwareStop.General; 
      =     #tmpHWStop; 

      U     #Gr.ModePassive; 
      O     #tmpHWStop; 
      =     #tmpLocal; 

NETWORK
TITLE =Interlocking Start Warning

      NOP   0; 
//- Restart after fault --
      U     #Gr.CmdFaultReset; 
      U     #Gr.VarFault; 
      S     "SYS_StartWarningDB".Area[12].CmdResetStartWarning; 
//- Run Timer --
      AUF   "G307M"; 
      CALL "GCS7_StartWarning" , "SYS_StartWarningDB" (
           InModeHigher             := FALSE,
           InArea                   := 12,
           InEnable                 := #Gr.OutEnableEl,
           InLocal                  := #tmpLocal,
           InStarted                := #Gr.VarStarted,
           InCmdNext                := #tmpCmdNext,
           OutCmdNext               := #tmpCmdNext,
           OutStartwarning          := #Gr.VarStartwarning);
//- Store Startwarning done  --
//- Reset Autostart --
      U     "SYS_StartWarningDB".TmpArea.OutStartReleaseRunningL; 
      FN    #EdgeStartRelease; 
      U     #Gr.VarFault; 
      R     #Gr.OutAutostart; 
NETWORK
TITLE ==A-3955-MXZ01MA : SCREW CONVEYOR DRIVE

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      =     #A_3955_MXZ01MA.Ma.InLocal; 
//
//-Interlocking---

      U     #Gr.OutEnableEl; 
      =     #A_3955_MXZ01MA.Ma.InEnableFwd; 
//
      U     #tmpCmdNext; 
      S     #A_3955_MXZ01MA.Ma.CmdNext; 
//
      U     #Gr.OutSeqStop; 
      =     #A_3955_MXZ01MA.Ma.InSeqStop; 
// 
//=Values and commands of elements===
//-=A-3955-BFT09---
//      CLR
//      S     #A_3955_MXZ01MA.A_3955_BFT09.CmdRunTimeOutTime
//-=A-3955-BSA11---
//      CLR
//      S     #A_3955_MXZ01MA.A_3955_BSA11.CmdRunTimeOutTime
// 
//-Read inputs of elements---
      UN    "A_3955_BFT09_I1"; 
      =     #A_3955_MXZ01MA.A_3955_BFT09.InpCovered; 
      U     "PLC_SystemDB".GlobalFlags.UnloadingKilning; 
      =     #A_3955_MXZ01MA.A_3955_BFT09.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[115]; 
      =     #A_3955_MXZ01MA.A_3955_BFT09.InDPFault; 
      U     "A_3955_BSA11_I1"; 
      =     #A_3955_MXZ01MA.A_3955_BSA11.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.UnloadingKilning; 
      =     #A_3955_MXZ01MA.A_3955_BSA11.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[115]; 
      =     #A_3955_MXZ01MA.A_3955_BSA11.InDPFault; 
      U     "A_3955_MXZ01_I1"; 
      =     #A_3955_MXZ01MA.A_3955_MXZ01.InpRunFwd; 
      U     "PLC_SystemDB".GlobalFlags.UnloadingKilning; 
      =     #A_3955_MXZ01MA.A_3955_MXZ01.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[114]; 
      =     #A_3955_MXZ01MA.A_3955_MXZ01.InDPFault; 
      SET   ; 
      =     #A_3955_MXZ01MA.Mon2.InpTrue; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3955_MXZ01MA ;
// 
//-Write outputs---
      U     #A_3955_MXZ01MA.A_3955_MXZ01.OutpRunFwd; 
      =     "A_3955_MXZ01_O1"; 
NETWORK
TITLE ==A-3946-MXZ01 : FLAP BOX 3946 - TO ELEVATOR 3945/ 3930
NOP 0;
//-InLocal---
      U     #tmpLocal; 
      =     #A_3946_MXZ01.InLocal; 
//
//-Interlocking---
      U A_3955_MXZ01MA.Ma.StStartedFwd;
         =     #A_3946_MXZ01.InEnableHN; 
         NOT;
         =     #A_3946_MXZ01.InEnableLN; 
//
         SET;
         S     #A_3946_MXZ01.CmdNext; 
//
      U     #Gr.OutSeqStop; 
      =     #A_3946_MXZ01.InSeqStop; 
// 
//-Read inputs---
      U     E 1138.2; 
      =     #A_3946_MXZ01.InpLN;
      U     E 1138.3; 
      =     #A_3946_MXZ01.InpHN; 
      X     A 1132.4; 
      X     E 1132.4; 
      O;
      X     A 1132.6; 
      X     E 1132.5; 
      =     #A_3946_MXZ01.InpFaultDev; 
      U   DB050.DBX31.2;
      =     #A_3946_MXZ01.InHWStop;
// 
//-Set Parameters---
// 
//-Call object control---
      CALL  #A_3946_MXZ01;
// 
//-Write outputs---
      U     #A_3946_MXZ01.OutpLN; 
      =     A 1132.4; 
      U     #A_3946_MXZ01.OutpHN; 
      =     A 1132.6; 
NETWORK
TITLE =Test Fault

      U     #A_3955_MXZ01MA.Ma.StFault; 
      O     #A_3946_MXZ01.StFault;
      =     #Gr.VarFault; 
NETWORK
TITLE =Test Warning

      CLR   ; 
      =     #Gr.OutWarning; 
NETWORK
TITLE =Test Stopped

      U     #A_3955_MXZ01MA.Ma.StStopped; 
      UN    #Gr.VarFault; 
      =     #Gr.VarStopped; 
NETWORK
TITLE =Test Started

      U     #A_3955_MXZ01MA.Ma.StStartedFwd; 
      UN    #Gr.VarStopped; 
      UN    #Gr.VarFault; 
      =     #Gr.VarStarted; 
NETWORK
TITLE =Enable Previous Group

      U     #Gr.VarStarted; 
      =     #Gr.OutEnablePrevGr; 
NETWORK
TITLE =Call Methode State
//1. Make State of the group: This function use the signals:
//        Gr.VarStopped, Gr.VarStarted, Gr.VarFault
//2.Reset Commands to group: e.g.CmdFaultReset
      CALL #Gr (
           FcCode                   := 2);
NETWORK
TITLE =Init

      SET   ; 
      R     #CmdNewValue; 
      R     #CmdNewJob; 
NETWORK
TITLE =Write data to group control

      U     #Gr.StStopped; 
      =     "GCS7_GrCtrlDB".InStopped[307]; 
      U     #Gr.StStarted; 
      =     "GCS7_GrCtrlDB".InStarted[307]; 
      U     #Gr.StFault; 
      =     "GCS7_GrCtrlDB".InFault[307]; 
      U     #Gr.OutWarning; 
      =     "GCS7_GrCtrlDB".InWarning[307]; 
      U     #Gr.OutManual; 
      =     "GCS7_GrCtrlDB".InManual[307]; 
      U     #Gr.OutHWStop; 
      =     "GCS7_GrCtrlDB".InHWStop[307]; 
      U     #Gr.OutDPFault; 
      =     "GCS7_GrCtrlDB".InDPFault[307]; 
      U     #Gr.OutLoaded; 
      =     "GCS7_GrCtrlDB".InLoaded[307]; 
      U     #Gr.OutAutostart; 
      =     "GCS7_GrCtrlDB".InAutoStart[307]; 
      U     #Gr.VarStartwarning; 
      =     "GCS7_GrCtrlDB".InStartWarning[307]; 
NETWORK
TITLE =End of block

      BE    ; 
END_FUNCTION_BLOCK


DATA_BLOCK "G307M"
TITLE =DBG307M  SCREW CONVEYOR 9007 KILN MALT TRANSFER
//COPYRIGHT:    (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
//
//PRODUCT:      WinCoS_BIW01_09
//
//TITLE:        SCREW CONVEYOR 9007 KILN MALT TRANSFER
//                Machine group DB
//                Maschinengruppen-DB
//
//-------------------------------------------------------------------------
//
//IDENT:        AUTHOR:             DEPT:             DATE:
//
//P01_DB407.1.0 K.Renz              CSB41             25.Mai.2010
//              1st Release
//
//-------------------------------------------------------------------------
//
//PURPOSE: 
//
//MANUAL : 
//
//RESTRICTIONS: 
//
//-------------------------------------------------------------------------
AUTHOR : KR
FAMILY : USW
NAME : DBG307M
VERSION : 0.0

"G307M_Code"
BEGIN
   Gr.FcCode := 0; 
   Gr.Spare2 := 0; 
   Gr.Spare4 := 0; 
   Gr.Spare6 := 0; 
   Gr.OutEmptyingTime := 0; 
   Gr.ChangeBit.spare := B#16#0; 
   Gr.ChangeBit.CBit1 := FALSE; 
   Gr.ChangeBit.CBit2 := FALSE; 
   Gr.ChangeBit.CBit3 := FALSE; 
   Gr.ChangeBit.CBit4 := FALSE; 
   Gr.StCode := 0; 
   Gr.InEnableGr := FALSE; 
   Gr.CmdContinue := FALSE; 
   Gr.CmdRestartIdling := FALSE; 
   Gr.InReleaseEmptyingTime := FALSE; 
   Gr.InFeeding := FALSE; 
   Gr.InOutAutostartMan := FALSE; 
   Gr.InPreStart := FALSE; 
   Gr.CmdManualOff := FALSE; 
   Gr.CmdOff := FALSE; 
   Gr.CmdOn := FALSE; 
   Gr.CmdNext := FALSE; 
   Gr.CmdFaultReset := FALSE; 
   Gr.InOccupied := FALSE; 
   Gr.InManual := FALSE; 
   Gr.InLoadedSec := FALSE; 
   Gr.InSeqStop := FALSE; 
   Gr.ModePassive := FALSE; 
   Gr.ModeActive := FALSE; 
   Gr.ModeIdling := FALSE; 
   Gr.spare163 := FALSE; 
   Gr.spare164 := FALSE; 
   Gr.spare165 := FALSE; 
   Gr.spare166 := FALSE; 
   Gr.spare167 := FALSE; 
   Gr.StStopped := FALSE; 
   Gr.StStarting := FALSE; 
   Gr.StStarted := FALSE; 
   Gr.StStopping := FALSE; 
   Gr.StFault := FALSE; 
   Gr.OutLoaded := FALSE; 
   Gr.OutWarning := FALSE; 
   Gr.OutFeeding := FALSE; 
   Gr.OutEnableEl := FALSE; 
   Gr.OutEnable1 := FALSE; 
   Gr.OutHWStop := FALSE; 
   Gr.OutDPFault := FALSE; 
   Gr.OutAutostart := FALSE; 
   Gr.OutManual := FALSE; 
   Gr.OutHornOn := FALSE; 
   Gr.OutEnablePrevGr := FALSE; 
   Gr.VarStopped := FALSE; 
   Gr.VarStarted := FALSE; 
   Gr.VarFault := FALSE; 
   Gr.VarStartwarning := FALSE; 
   Gr.VarFlag1s := FALSE; 
   Gr.OutEmptyingTimeDone := FALSE; 
   Gr.OutNewWay := FALSE; 
   Gr.OutSeqStop := FALSE; 
   Gr.OutIdlingTime := 0; 
   Gr.InCodePreselect := 0; 
   Gr.InLine := 0; 
   Gr.InCode := 0; 
   Gr.OutCode := 0; 
   Gr.Par.ParObjectNo := 30700; 
   Gr.Par.ParMgr := TRUE; 
   Gr.Par.ParWgr := FALSE; 
   Gr.Par.ParGgr := FALSE; 
   Gr.Par.ParHornCode := 12; 
   Gr.Par.ParIdling := 2; 
   Gr.Par.ParEmptyingTime := 0; 
   Gr.Par.Para1_0 := FALSE; 
   Gr.Par.Para1_1 := FALSE; 
   Gr.Par.Para1_2 := FALSE; 
   Gr.Par.Para1_3 := FALSE; 
   Gr.Par.Para1_4 := FALSE; 
   Gr.Par.Para1_5 := FALSE; 
   Gr.Par.Para1_6 := FALSE; 
   Gr.Par.Para1_7 := FALSE; 
   Gr.Par.Para1_8 := FALSE; 
   Gr.Par.Para1_9 := FALSE; 
   Gr.Par.Para1_10 := FALSE; 
   Gr.Par.Para1_11 := FALSE; 
   Gr.Par.Para1_12 := FALSE; 
   Gr.Par.Para1_13 := FALSE; 
   Gr.Par.Para1_14 := FALSE; 
   Gr.Par.Para1_15 := FALSE; 
   Gr.Par.Para2 := 0; 
   Gr.Par.Para3 := 0; 
   Gr.Par.Para4 := 0; 
   Gr.Par.Para5 := 0; 
   InOutValue1 := L#0; 
   InOutValue2 := L#0; 
   OutWayConflict := FALSE; 
   OutSelectionOk := FALSE; 
   CmdNewValue := FALSE; 
   CmdNewJob := FALSE; 
   OutCodeOK := FALSE; 
   InEndOfJob := FALSE; 
   staWayOk := FALSE; 
   EdgeStartRelease := FALSE; 
   USW8 := FALSE; 
   USW9 := FALSE; 
   USW10 := FALSE; 
   USW11 := FALSE; 
   USW12 := FALSE; 
   USW13 := FALSE; 
   USW14 := FALSE; 
   USW15 := FALSE; 
   A_3955_MXZ01MA.Ma.StCode := 0; 
   A_3955_MXZ01MA.Ma.InEnableRev := FALSE; 
   A_3955_MXZ01MA.Ma.InEnableFwd := FALSE; 
   A_3955_MXZ01MA.Ma.InOverrideHLOutlet := FALSE; 
   A_3955_MXZ01MA.Ma.spare0203 := FALSE; 
   A_3955_MXZ01MA.Ma.OutEdgeFaultReset := FALSE; 
   A_3955_MXZ01MA.Ma.OutFaultResetFcttst := FALSE; 
   A_3955_MXZ01MA.Ma.InpControlEBM := FALSE; 
   A_3955_MXZ01MA.Ma.InpLocked := FALSE; 
   A_3955_MXZ01MA.Ma.CmdOff := FALSE; 
   A_3955_MXZ01MA.Ma.CmdOn := FALSE; 
   A_3955_MXZ01MA.Ma.CmdNext := FALSE; 
   A_3955_MXZ01MA.Ma.CmdFaultReset := FALSE; 
   A_3955_MXZ01MA.Ma.InLocal := FALSE; 
   A_3955_MXZ01MA.Ma.InManual := FALSE; 
   A_3955_MXZ01MA.Ma.CmdTestEBM := FALSE; 
   A_3955_MXZ01MA.Ma.InSeqStop := FALSE; 
   A_3955_MXZ01MA.Ma.OutWarning := FALSE; 
   A_3955_MXZ01MA.Ma.InfBMTopOk := FALSE; 
   A_3955_MXZ01MA.Ma.InfBMBottomOk := FALSE; 
   A_3955_MXZ01MA.Ma.InfSMOk := FALSE; 
   A_3955_MXZ01MA.Ma.OutpFcttst_BM_Top := FALSE; 
   A_3955_MXZ01MA.Ma.OutpFcttst_BM_Bottom := FALSE; 
   A_3955_MXZ01MA.Ma.OutpFcttst_SM := FALSE; 
   A_3955_MXZ01MA.Ma.OutpFaultReset := FALSE; 
   A_3955_MXZ01MA.Ma.StStopped := FALSE; 
   A_3955_MXZ01MA.Ma.StStarting := FALSE; 
   A_3955_MXZ01MA.Ma.StStartedFwd := FALSE; 
   A_3955_MXZ01MA.Ma.StStopping := FALSE; 
   A_3955_MXZ01MA.Ma.StFault := FALSE; 
   A_3955_MXZ01MA.Ma.StStartedRev := FALSE; 
   A_3955_MXZ01MA.Ma.StLocked := FALSE; 
   A_3955_MXZ01MA.Ma.OutTestTime := 0; 
   A_3955_MXZ01MA.Ma.Par.ParObjectNo := 30701; 
   A_3955_MXZ01MA.Ma.Par.ParWithMon1 := TRUE; 
   A_3955_MXZ01MA.Ma.Par.ParWithMon3 := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParWithMon4 := TRUE; 
   A_3955_MXZ01MA.Ma.Par.ParWithMon5 := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParWithMon6 := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParMon1IsHL := TRUE; 
   A_3955_MXZ01MA.Ma.Par.ParMon1IsLS := TRUE; 
   A_3955_MXZ01MA.Ma.Par.ParMon1StopByFault := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParMon2IsLS := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParMon3IsLS := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParMon4AsWarning := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParMon4StopByFault := TRUE; 
   A_3955_MXZ01MA.Ma.Par.ParMon4IsLS := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParEBM := FALSE; 
   A_3955_MXZ01MA.Ma.Par.ParMon4IsSM := TRUE; 
   A_3955_MXZ01MA.A_3955_BFT09.StCode := 0; 
   A_3955_MXZ01MA.A_3955_BFT09.InMonCovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InMonUncovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InPreAlarmCovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InPreAlarmUncovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InStopCoveredTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InStopUncoveredTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InpCovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InpFaultDev := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.CmdRstCoveredTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.CmdRstUncoveredTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.CmdRunTimeoutTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.CmdFaultReset := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InLocal := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.spare0305 := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InReport := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.OutTimeoutTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InHWStop := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.InDPFault := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.OutPreAlarmCovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.OutPreAlarmUncovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.OutFlagPos := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.OutFlagNeg := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.OutpFaultReset := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.OutCovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.StUncovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.StCtoCovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.StCovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.StCtoUncovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.StFault := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.OutAlarmNrLog := 0; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParObjectNo := 30702; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParMsgType := 7165; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParHornCode := 12; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParLogOff := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.spare0401 := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.Par2WorkingCond := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParFaultRetry := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParBinLevel := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParDelayChange := 20; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParDelayCovered := 10; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParDelayUncovered := 30; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParTimeoutCovered := 0; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.ParTimeoutUncovered := 0; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.OutMonTime := 0; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.OutTransitionTime := 0; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.OutMonCovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.OutMonUncovered := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.OutFlagFaultDev := FALSE; 
   A_3955_MXZ01MA.A_3955_BFT09.Par.OutDelayTime := 0; 
   A_3955_MXZ01MA.Mon2.StCode := 0; 
   A_3955_MXZ01MA.Mon2.InMonTrue := FALSE; 
   A_3955_MXZ01MA.Mon2.InMonFalse := FALSE; 
   A_3955_MXZ01MA.Mon2.InPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.Mon2.InPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.Mon2.InStopTrueTime := FALSE; 
   A_3955_MXZ01MA.Mon2.InStopFalseTime := FALSE; 
   A_3955_MXZ01MA.Mon2.InpTrue := FALSE; 
   A_3955_MXZ01MA.Mon2.InpFaultDev := FALSE; 
   A_3955_MXZ01MA.Mon2.CmdRstTrueTime := FALSE; 
   A_3955_MXZ01MA.Mon2.CmdRstFalseTime := FALSE; 
   A_3955_MXZ01MA.Mon2.CmdRunTimeoutTime := FALSE; 
   A_3955_MXZ01MA.Mon2.CmdFaultReset := FALSE; 
   A_3955_MXZ01MA.Mon2.InLocal := FALSE; 
   A_3955_MXZ01MA.Mon2.spare0305 := FALSE; 
   A_3955_MXZ01MA.Mon2.InReport := FALSE; 
   A_3955_MXZ01MA.Mon2.OutTimeoutTime := FALSE; 
   A_3955_MXZ01MA.Mon2.InHWStop := FALSE; 
   A_3955_MXZ01MA.Mon2.InDPFault := FALSE; 
   A_3955_MXZ01MA.Mon2.OutPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.Mon2.OutPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.Mon2.OutFlagPos := FALSE; 
   A_3955_MXZ01MA.Mon2.OutFlagNeg := FALSE; 
   A_3955_MXZ01MA.Mon2.OutpFaultReset := FALSE; 
   A_3955_MXZ01MA.Mon2.OutTrue := FALSE; 
   A_3955_MXZ01MA.Mon2.StFalse := FALSE; 
   A_3955_MXZ01MA.Mon2.StCtoTrue := FALSE; 
   A_3955_MXZ01MA.Mon2.StTrue := FALSE; 
   A_3955_MXZ01MA.Mon2.StCtoFalse := FALSE; 
   A_3955_MXZ01MA.Mon2.StFault := FALSE; 
   A_3955_MXZ01MA.Mon2.OutAlarmNrLog := 0; 
   A_3955_MXZ01MA.Mon2.Par.ParObjectNo := 0; 
   A_3955_MXZ01MA.Mon2.Par.ParMsgType := 0; 
   A_3955_MXZ01MA.Mon2.Par.ParHornCode := 0; 
   A_3955_MXZ01MA.Mon2.Par.ParLogOff := FALSE; 
   A_3955_MXZ01MA.Mon2.Par.spare0401 := FALSE; 
   A_3955_MXZ01MA.Mon2.Par.Par2WorkingCond := FALSE; 
   A_3955_MXZ01MA.Mon2.Par.ParFaultRetry := FALSE; 
   A_3955_MXZ01MA.Mon2.Par.ParBinLevel := FALSE; 
   A_3955_MXZ01MA.Mon2.Par.ParDelayChange := 0; 
   A_3955_MXZ01MA.Mon2.Par.ParDelayTrue := 0; 
   A_3955_MXZ01MA.Mon2.Par.ParDelayFalse := 0; 
   A_3955_MXZ01MA.Mon2.Par.ParTimeoutTrue := 0; 
   A_3955_MXZ01MA.Mon2.Par.ParTimeoutFalse := 0; 
   A_3955_MXZ01MA.Mon2.Par.OutMonTime := 0; 
   A_3955_MXZ01MA.Mon2.Par.OutTransitionTime := 0; 
   A_3955_MXZ01MA.Mon2.Par.OutMonTrue := FALSE; 
   A_3955_MXZ01MA.Mon2.Par.OutMonFalse := FALSE; 
   A_3955_MXZ01MA.Mon2.Par.OutFlagFaultDev := FALSE; 
   A_3955_MXZ01MA.Mon2.Par.OutDelayTime := 0; 
   A_3955_MXZ01MA.Mon3.StCode := 0; 
   A_3955_MXZ01MA.Mon3.InMonTrue := FALSE; 
   A_3955_MXZ01MA.Mon3.InMonFalse := FALSE; 
   A_3955_MXZ01MA.Mon3.InPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.Mon3.InPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.Mon3.InStopTrueTime := FALSE; 
   A_3955_MXZ01MA.Mon3.InStopFalseTime := FALSE; 
   A_3955_MXZ01MA.Mon3.InpTrue := FALSE; 
   A_3955_MXZ01MA.Mon3.InpFaultDev := FALSE; 
   A_3955_MXZ01MA.Mon3.CmdRstTrueTime := FALSE; 
   A_3955_MXZ01MA.Mon3.CmdRstFalseTime := FALSE; 
   A_3955_MXZ01MA.Mon3.CmdRunTimeoutTime := FALSE; 
   A_3955_MXZ01MA.Mon3.CmdFaultReset := FALSE; 
   A_3955_MXZ01MA.Mon3.InLocal := FALSE; 
   A_3955_MXZ01MA.Mon3.spare0305 := FALSE; 
   A_3955_MXZ01MA.Mon3.InReport := FALSE; 
   A_3955_MXZ01MA.Mon3.OutTimeoutTime := FALSE; 
   A_3955_MXZ01MA.Mon3.InHWStop := FALSE; 
   A_3955_MXZ01MA.Mon3.InDPFault := FALSE; 
   A_3955_MXZ01MA.Mon3.OutPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.Mon3.OutPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.Mon3.OutFlagPos := FALSE; 
   A_3955_MXZ01MA.Mon3.OutFlagNeg := FALSE; 
   A_3955_MXZ01MA.Mon3.OutpFaultReset := FALSE; 
   A_3955_MXZ01MA.Mon3.OutTrue := FALSE; 
   A_3955_MXZ01MA.Mon3.StFalse := FALSE; 
   A_3955_MXZ01MA.Mon3.StCtoTrue := FALSE; 
   A_3955_MXZ01MA.Mon3.StTrue := FALSE; 
   A_3955_MXZ01MA.Mon3.StCtoFalse := FALSE; 
   A_3955_MXZ01MA.Mon3.StFault := FALSE; 
   A_3955_MXZ01MA.Mon3.OutAlarmNrLog := 0; 
   A_3955_MXZ01MA.Mon3.Par.ParObjectNo := 0; 
   A_3955_MXZ01MA.Mon3.Par.ParMsgType := 0; 
   A_3955_MXZ01MA.Mon3.Par.ParHornCode := 0; 
   A_3955_MXZ01MA.Mon3.Par.ParLogOff := FALSE; 
   A_3955_MXZ01MA.Mon3.Par.spare0401 := FALSE; 
   A_3955_MXZ01MA.Mon3.Par.Par2WorkingCond := FALSE; 
   A_3955_MXZ01MA.Mon3.Par.ParFaultRetry := FALSE; 
   A_3955_MXZ01MA.Mon3.Par.ParBinLevel := FALSE; 
   A_3955_MXZ01MA.Mon3.Par.ParDelayChange := 0; 
   A_3955_MXZ01MA.Mon3.Par.ParDelayTrue := 0; 
   A_3955_MXZ01MA.Mon3.Par.ParDelayFalse := 0; 
   A_3955_MXZ01MA.Mon3.Par.ParTimeoutTrue := 0; 
   A_3955_MXZ01MA.Mon3.Par.ParTimeoutFalse := 0; 
   A_3955_MXZ01MA.Mon3.Par.OutMonTime := 0; 
   A_3955_MXZ01MA.Mon3.Par.OutTransitionTime := 0; 
   A_3955_MXZ01MA.Mon3.Par.OutMonTrue := FALSE; 
   A_3955_MXZ01MA.Mon3.Par.OutMonFalse := FALSE; 
   A_3955_MXZ01MA.Mon3.Par.OutFlagFaultDev := FALSE; 
   A_3955_MXZ01MA.Mon3.Par.OutDelayTime := 0; 
   A_3955_MXZ01MA.A_3955_BSA11.StCode := 0; 
   A_3955_MXZ01MA.A_3955_BSA11.InMonTrue := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InMonFalse := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InStopTrueTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InStopFalseTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InpTrue := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InpFaultDev := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.CmdRstTrueTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.CmdRstFalseTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.CmdRunTimeoutTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.CmdFaultReset := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InLocal := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.spare0305 := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InReport := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.OutTimeoutTime := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InHWStop := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.InDPFault := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.OutPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.OutPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.OutFlagPos := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.OutFlagNeg := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.OutpFaultReset := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.OutTrue := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.StFalse := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.StCtoTrue := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.StTrue := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.StCtoFalse := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.StFault := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.OutAlarmNrLog := 0; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParObjectNo := 30703; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParMsgType := 7135; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParHornCode := 12; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParLogOff := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.spare0401 := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.Par2WorkingCond := TRUE; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParFaultRetry := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParBinLevel := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParDelayChange := 0; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParDelayTrue := 10; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParDelayFalse := 0; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParTimeoutTrue := 50; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.ParTimeoutFalse := 0; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.OutMonTime := 0; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.OutTransitionTime := 0; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.OutMonTrue := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.OutMonFalse := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.OutFlagFaultDev := FALSE; 
   A_3955_MXZ01MA.A_3955_BSA11.Par.OutDelayTime := 0; 
   A_3955_MXZ01MA.Mon5.StCode := 0; 
   A_3955_MXZ01MA.Mon5.InMonTrue := FALSE; 
   A_3955_MXZ01MA.Mon5.InMonFalse := FALSE; 
   A_3955_MXZ01MA.Mon5.InPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.Mon5.InPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.Mon5.InStopTrueTime := FALSE; 
   A_3955_MXZ01MA.Mon5.InStopFalseTime := FALSE; 
   A_3955_MXZ01MA.Mon5.InpTrue := FALSE; 
   A_3955_MXZ01MA.Mon5.InpFaultDev := FALSE; 
   A_3955_MXZ01MA.Mon5.CmdRstTrueTime := FALSE; 
   A_3955_MXZ01MA.Mon5.CmdRstFalseTime := FALSE; 
   A_3955_MXZ01MA.Mon5.CmdRunTimeoutTime := FALSE; 
   A_3955_MXZ01MA.Mon5.CmdFaultReset := FALSE; 
   A_3955_MXZ01MA.Mon5.InLocal := FALSE; 
   A_3955_MXZ01MA.Mon5.spare0305 := FALSE; 
   A_3955_MXZ01MA.Mon5.InReport := FALSE; 
   A_3955_MXZ01MA.Mon5.OutTimeoutTime := FALSE; 
   A_3955_MXZ01MA.Mon5.InHWStop := FALSE; 
   A_3955_MXZ01MA.Mon5.InDPFault := FALSE; 
   A_3955_MXZ01MA.Mon5.OutPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.Mon5.OutPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.Mon5.OutFlagPos := FALSE; 
   A_3955_MXZ01MA.Mon5.OutFlagNeg := FALSE; 
   A_3955_MXZ01MA.Mon5.OutpFaultReset := FALSE; 
   A_3955_MXZ01MA.Mon5.OutTrue := FALSE; 
   A_3955_MXZ01MA.Mon5.StFalse := FALSE; 
   A_3955_MXZ01MA.Mon5.StCtoTrue := FALSE; 
   A_3955_MXZ01MA.Mon5.StTrue := FALSE; 
   A_3955_MXZ01MA.Mon5.StCtoFalse := FALSE; 
   A_3955_MXZ01MA.Mon5.StFault := FALSE; 
   A_3955_MXZ01MA.Mon5.OutAlarmNrLog := 0; 
   A_3955_MXZ01MA.Mon5.Par.ParObjectNo := 0; 
   A_3955_MXZ01MA.Mon5.Par.ParMsgType := 0; 
   A_3955_MXZ01MA.Mon5.Par.ParHornCode := 0; 
   A_3955_MXZ01MA.Mon5.Par.ParLogOff := FALSE; 
   A_3955_MXZ01MA.Mon5.Par.spare0401 := FALSE; 
   A_3955_MXZ01MA.Mon5.Par.Par2WorkingCond := FALSE; 
   A_3955_MXZ01MA.Mon5.Par.ParFaultRetry := FALSE; 
   A_3955_MXZ01MA.Mon5.Par.ParBinLevel := FALSE; 
   A_3955_MXZ01MA.Mon5.Par.ParDelayChange := 0; 
   A_3955_MXZ01MA.Mon5.Par.ParDelayTrue := 0; 
   A_3955_MXZ01MA.Mon5.Par.ParDelayFalse := 0; 
   A_3955_MXZ01MA.Mon5.Par.ParTimeoutTrue := 0; 
   A_3955_MXZ01MA.Mon5.Par.ParTimeoutFalse := 0; 
   A_3955_MXZ01MA.Mon5.Par.OutMonTime := 0; 
   A_3955_MXZ01MA.Mon5.Par.OutTransitionTime := 0; 
   A_3955_MXZ01MA.Mon5.Par.OutMonTrue := FALSE; 
   A_3955_MXZ01MA.Mon5.Par.OutMonFalse := FALSE; 
   A_3955_MXZ01MA.Mon5.Par.OutFlagFaultDev := FALSE; 
   A_3955_MXZ01MA.Mon5.Par.OutDelayTime := 0; 
   A_3955_MXZ01MA.Mon6.StCode := 0; 
   A_3955_MXZ01MA.Mon6.InMonTrue := FALSE; 
   A_3955_MXZ01MA.Mon6.InMonFalse := FALSE; 
   A_3955_MXZ01MA.Mon6.InPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.Mon6.InPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.Mon6.InStopTrueTime := FALSE; 
   A_3955_MXZ01MA.Mon6.InStopFalseTime := FALSE; 
   A_3955_MXZ01MA.Mon6.InpTrue := FALSE; 
   A_3955_MXZ01MA.Mon6.InpFaultDev := FALSE; 
   A_3955_MXZ01MA.Mon6.CmdRstTrueTime := FALSE; 
   A_3955_MXZ01MA.Mon6.CmdRstFalseTime := FALSE; 
   A_3955_MXZ01MA.Mon6.CmdRunTimeoutTime := FALSE; 
   A_3955_MXZ01MA.Mon6.CmdFaultReset := FALSE; 
   A_3955_MXZ01MA.Mon6.InLocal := FALSE; 
   A_3955_MXZ01MA.Mon6.spare0305 := FALSE; 
   A_3955_MXZ01MA.Mon6.InReport := FALSE; 
   A_3955_MXZ01MA.Mon6.OutTimeoutTime := FALSE; 
   A_3955_MXZ01MA.Mon6.InHWStop := FALSE; 
   A_3955_MXZ01MA.Mon6.InDPFault := FALSE; 
   A_3955_MXZ01MA.Mon6.OutPreAlarmTrue := FALSE; 
   A_3955_MXZ01MA.Mon6.OutPreAlarmFalse := FALSE; 
   A_3955_MXZ01MA.Mon6.OutFlagPos := FALSE; 
   A_3955_MXZ01MA.Mon6.OutFlagNeg := FALSE; 
   A_3955_MXZ01MA.Mon6.OutpFaultReset := FALSE; 
   A_3955_MXZ01MA.Mon6.OutTrue := FALSE; 
   A_3955_MXZ01MA.Mon6.StFalse := FALSE; 
   A_3955_MXZ01MA.Mon6.StCtoTrue := FALSE; 
   A_3955_MXZ01MA.Mon6.StTrue := FALSE; 
   A_3955_MXZ01MA.Mon6.StCtoFalse := FALSE; 
   A_3955_MXZ01MA.Mon6.StFault := FALSE; 
   A_3955_MXZ01MA.Mon6.OutAlarmNrLog := 0; 
   A_3955_MXZ01MA.Mon6.Par.ParObjectNo := 0; 
   A_3955_MXZ01MA.Mon6.Par.ParMsgType := 0; 
   A_3955_MXZ01MA.Mon6.Par.ParHornCode := 0; 
   A_3955_MXZ01MA.Mon6.Par.ParLogOff := FALSE; 
   A_3955_MXZ01MA.Mon6.Par.spare0401 := FALSE; 
   A_3955_MXZ01MA.Mon6.Par.Par2WorkingCond := FALSE; 
   A_3955_MXZ01MA.Mon6.Par.ParFaultRetry := FALSE; 
   A_3955_MXZ01MA.Mon6.Par.ParBinLevel := FALSE; 
   A_3955_MXZ01MA.Mon6.Par.ParDelayChange := 0; 
   A_3955_MXZ01MA.Mon6.Par.ParDelayTrue := 0; 
   A_3955_MXZ01MA.Mon6.Par.ParDelayFalse := 0; 
   A_3955_MXZ01MA.Mon6.Par.ParTimeoutTrue := 0; 
   A_3955_MXZ01MA.Mon6.Par.ParTimeoutFalse := 0; 
   A_3955_MXZ01MA.Mon6.Par.OutMonTime := 0; 
   A_3955_MXZ01MA.Mon6.Par.OutTransitionTime := 0; 
   A_3955_MXZ01MA.Mon6.Par.OutMonTrue := FALSE; 
   A_3955_MXZ01MA.Mon6.Par.OutMonFalse := FALSE; 
   A_3955_MXZ01MA.Mon6.Par.OutFlagFaultDev := FALSE; 
   A_3955_MXZ01MA.Mon6.Par.OutDelayTime := 0; 
   A_3955_MXZ01MA.A_3955_MXZ01.StCode := 0; 
   A_3955_MXZ01MA.A_3955_MXZ01.InEnableRev := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InEnableFwd := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InSlow := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InpRunSlow := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InpRunFast := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InpRunRev := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InpRunFwd := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InpFaultDev := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.CmdOff := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.CmdOn := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.CmdNext := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.CmdFaultReset := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InLocal := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InManual := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InReport := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InSeqStop := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InHWStop := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InDPFault := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.OutIdling := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.OutpRunSlow := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.OutpRunFast := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.OutpRunRev := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.OutpRunFwd := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.OutpFaultReset := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.StStopped := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.StStarting := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.StStartedFwd := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.StStopping := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.StFault := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.StStartedRev := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InOutManSlow := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.InOutManRev := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.OutAlarmNrLog := 0; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParObjectNo := 30704; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParMsgType := 7053; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParHornCode := 12; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParLogOff := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParManual := TRUE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParRestartDelay := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.Par2Speed := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParHeavyStartup := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.spare45 := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.spare46 := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.OutEdgeFaultReset := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.OutDelayFault := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.OutFlagFaultDev := FALSE; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParMonTime := 20; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParStartingTime := 20; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParStoppingTime := 0; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParIdlingTime := 0; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.ParDelayTime := 10; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.OutMonTime := 0; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.OutTransitionTime := 0; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.OutDelayTime := 0; 
   A_3955_MXZ01MA.A_3955_MXZ01.Par.InOutManPulseLen := 0; 
      #A_3946_MXZ01.Par.ParObjectNo                             :=30705;
      #A_3946_MXZ01.Par.ParMsgType                              :=7081;
      #A_3946_MXZ01.Par.ParHornCode                             :=1;
      #A_3946_MXZ01.Par.ParMonTime                              :=500;
      #A_3946_MXZ01.Par.ParPulseTimeHN                          :=50;
      #A_3946_MXZ01.Par.ParPulseTimeLN                          :=50;
      #A_3946_MXZ01.Par.ParIdlingTime                           :=0;
      #A_3946_MXZ01.Par.ParDelayTime                            :=10;
      #A_3946_MXZ01.Par.ParLogOff                               :=False;
      #A_3946_MXZ01.Par.ParManual                               :=True;
      #A_3946_MXZ01.Par.ParPulseValve                           :=True;
      #A_3946_MXZ01.Par.ParContValve                            :=False;
      #A_3946_MXZ01.Par.ParManualFlap                           :=False;
END_DATA_BLOCK

