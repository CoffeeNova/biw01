
FUNCTION_BLOCK "G273M_Code"
TITLE =G273M RECYCLING AIR LOUVER KILN 1
//COPYRIGHT:    (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
//
//PRODUCT:      WinCoS_BIW01_09
//
//TITLE:        RECYCLING AIR LOUVER KILN 1
//                Machine group control
//                Maschinengruppensteuerung
// 
//--------------------------------------------------------------------------------
// 
//IDENT:        AUTHOR:             DEPT:                              DATE:
// 
//P01_FB373.1.0 K.Renz              CSB41                              13.Jan.2010
//             1st Release
// 
//--------------------------------------------------------------------------------
// 
//PURPOSE: 
// 
//MANUAL : 
// 
//RESTRICTIONS: 
// 
//--------------------------------------------------------------------------------
AUTHOR : KR
FAMILY : USW
VERSION : 9.9


VAR
  Gr : "GCS7_GrpCtrlSub";	//Standard interface to group
  InOutValue1 : DINT ;	//Data for user
  InOutValue2 : DINT ;	//Data for user
  OutWayConflict : BOOL ;	//Data for user
  OutSelectionOk : BOOL ;	//Data for user
  CmdNewValue : BOOL ;	//Data for user
  CmdNewJob : BOOL ;	//Data for user
  OutCodeOK : BOOL ;	//Data for user
  InEndOfJob : BOOL ;	//Data for user
  staWayOk : BOOL ;	//Data for user
  EdgeStartRelease : BOOL ;	//Data for user
  USW8 : BOOL ;	//Data for user
  USW9 : BOOL ;	//Data for user
  USW10 : BOOL ;	//Data for user
  USW11 : BOOL ;	//Data for user
  USW12 : BOOL ;	//Data for user
  USW13 : BOOL ;	//Data for user
  USW14 : BOOL ;	//Data for user
  USW15 : BOOL ;	//Data for user
  A_3135_MXZ11I1 : "GCS7_E_DigInput";	// DigInpCont 
  A_3135_MXZ11I2 : "GCS7_E_DigInput";	// DigInpCont 
  A_3135_MXZ11 : "GCS7_E_ValveControl4Pos";	// VLS4Ctrl 
  A_3136_MXZ11I1 : "GCS7_E_DigInput";	// DigInpCont 
  A_3136_MXZ11I2 : "GCS7_E_DigInput";	// DigInpCont 
  A_3136_MXZ11 : "GCS7_E_ValveControl4Pos";	// VLS4Ctrl 
  spare316 : ARRAY  [316 .. 571 ] OF BYTE ;	
  A_3135_BZS14 : "GCS7_E_DigInput";	// DigInpCont 
  A_3135_BZS15 : "GCS7_E_DigInput";	// DigInpCont 
  A_3136_BZS14 : "GCS7_E_DigInput";	// DigInpCont 
//KR14012010#A_3136_BZS14 : FB14;   // DigInpCont 
     #A_3136_BZS15 : FB14;   // DigInpCont 
END_VAR
VAR_TEMP
  tmpEnable : BOOL ;	
  tmpFlag : BOOL ;	
  tmpCmdNext : BOOL ;	
  tmpLocal : BOOL ;	
  tmpAspOk : BOOL ;	
  tmpHWStop : BOOL ;	
  tmpInstanzDBNo : INT ;	
END_VAR
BEGIN
NETWORK
TITLE =



NETWORK
TITLE =Read command from group control
//Parameter
      SET   ; 
      S     "GCS7_GrCtrlDB".ParMGR[273]; 
      R     "GCS7_GrCtrlDB".ParWGR[273]; 
      R     "GCS7_GrCtrlDB".ParGGR[273]; 
      R     "GCS7_GrCtrlDB".ParFeed[273]; 
      R     "GCS7_GrCtrlDB".ParShare[273]; 
      S     #Gr.Par.ParMgr; 
      R     #Gr.Par.ParWgr; 
      R     #Gr.Par.ParGgr; 
//Command
      U     "GCS7_GrCtrlDB".OutEnable[273]; 
      =     #Gr.InEnableGr; 
      U     "GCS7_GrCtrlDB".OutOccupied[273]; 
      =     #Gr.InOccupied; 
      U     "GCS7_GrCtrlDB".CmdFaultReset[273]; 
      R     "GCS7_GrCtrlDB".CmdFaultReset[273]; 
      S     #Gr.CmdFaultReset; 
      U     "GCS7_GrCtrlDB".CmdNext[273]; 
      R     "GCS7_GrCtrlDB".CmdNext[273]; 
      S     #Gr.CmdNext; 

      U     "GCS7_GrCtrlDB".CmdManualOff[273]; 
      UN    #Gr.InManual; 
      S     #Gr.CmdManualOff; 
      U     "GCS7_GrCtrlDB".CmdManualOff[273]; 
      R     "GCS7_GrCtrlDB".CmdManualOff[273]; 

//      U     "GCS7_GrCtrlDB".CmdManualOff[273]
//      O     "GCS7_GrCtrlDB".OutOccupied[273]
//      R     "GCS7_GrCtrlDB".CmdManualOff[273]
//      S     #Gr.CmdManualOff

      U     "GCS7_GrCtrlDB".CmdContinue[273]; 
      R     "GCS7_GrCtrlDB".CmdContinue[273]; 
      S     #Gr.CmdContinue; 
//Init Line Number
      U     "GCS7_GrCtrlDB".ParShare[273]; 
      SPBN  WE00; 
      L     0; 
      T     #Gr.InLine; 
WE00: NOP   0; 

NETWORK
TITLE =Call Methode Control
// 1. Handle Interface PCControl      
// 2. Prepare mode --> ModePassive,ModeActive,ModeIdling      
// 3. Reset global flags of the group
      CALL #Gr (
           FcCode                   := 1);
NETWORK
TITLE =Restart Idling Time

      L     #Gr.Par.ParIdling; 
      L     2; 
      >=I   ; 
      SPB   IdTm; 
      T     #Gr.Par.ParIdling; 
IdTm: NOP   0; 
      U     #A_3135_MXZ11.StNoPosition; 
      U     #A_3136_MXZ11.StNoPosition; 
      UN    #Gr.InOccupied; 
      S     #Gr.CmdRestartIdling; 

NETWORK
TITLE =Prepare global flags

// Zwei-Hordenbetrieb
// Oeffnen der Recycle-Flap wenn die Temperatur vom Brenner 1 nicht ausreicht
      U     "MAL1S032Par".Par.FlagProcess.Abdarr_Betrieb_Aktiv; 
      U(    ; 
      L     "MAL1S032Par".StepAct.TemperaturBelowFloor; 
      L     50; // 5,0°C weniger als Sollwert
      -I    ; 
      L     10; 
      *I    ; 
      L     "G269M".A_3191_BTE01.OutValuePc; //  Temperature Below Kiln Floor
      >=I   ; 
      )     ; 
      S     "G273M".USW8; 

      U(    ; 
      L     "MAL1S032Par".StepAct.TemperaturBelowFloor; 
      L     50; // 5,0°C mehr als Sollwert
      +I    ; 
      L     10; 
      *I    ; 
      L     "G269M".A_3191_BTE01.OutValuePc; //  Temperature Below Kiln Floor
      <=I   ; 
      )     ; 
      ON    "MAL1S032Par".Par.FlagProcess.Abdarr_Betrieb_Aktiv; 
      R     "G273M".USW8; 

NETWORK
TITLE =Set Pattern (Target position)

      U     #Gr.InManual; 
      SPB   ILO6; 
      L     0; // 0.0%
      U     "MAL1S032Par".Par.FlagProcess.ProcessEnd; // kilning Process finished
      ON    "MAL1S032Par".Par.FlagProcess.ProcessActive; 
      U(    ; 
      U     "G271M".A_3125_MXZ01MA.Ma.StStopped; 
      U     "G271M".A_3126_MXZ01MA.Ma.StStopped; 
      )     ; 
      SPB   PE; 
// Zwei-Hordenbetrieb
      U     "MAL1S032Par".Par.FlagProcess.ProcessActive; 
      U     "MAL1S033Par".Par.FlagProcess.ProcessActive; 
      U     "MAL1S032Par".Par.FlagProcess.Abdarr_Betrieb_Aktiv; 
      SPBN  M001; 
      L     1000; // 100.0%
      T     #A_3135_MXZ11.InPositionMiddle; // setpoint element

      L     "MAL1S032Par".Par.ParIntProcess.PosRecycAirFlapBasic; // setpoint from recipe
      T     #A_3136_MXZ11.InPositionMiddle; // setpoint element

// Cooling active
      U     "MAL1S032Par".Par.FlagProcess.Cooling_Activ; // kilning cooling active
      SPBN  Rec2; 
      L     "MAL1S032Par".Par.ParIntProcess.PosRecycAirFlapBasic; // setpoint from recipe
      T     #A_3136_MXZ11.InPositionMiddle; // setpoint element
Rec2: NOP   0; 

      SPA   En06; 
M001: NOP   0; 

// Ein-Hordenbetrieb
      U     "MAL1S032Par".Par.FlagProcess.Cooling_Activ; // kilning cooling active
      UN    "MAL1S032Par".Par.FlagProcess.Abdarr_Betrieb_Aktiv; 
      SPBN  M002; 
      L     1000; // 100.0%
      L     "G272M".A_3150_MXZ11.InPositionMiddle; // LOUVER FRESH AIR 1
      -I    ; 
      SPA   PE; 
M002: NOP   0; 


      U     "MAL1S032Par".Par.FlagProcess.ProcessActive; 
      SPBN  M003; 
      L     "MAL1S032Par".Par.ParIntProcess.PosRecycAirFlapBasic; // setpoint from recipe
      T     #A_3135_MXZ11.InPositionMiddle; // setpoint element

// Bedingung fuer das Oeffnen der Recycling-Klappe 1
// Darre 2 im Abdarrbetrieb
      U     "MAL1S033Par".Par.FlagProcess.Abdarr_Betrieb_Aktiv; 
// Klappe offen halten, bis die Ventilatoren angehalten haben.
      O(    ; 
      U     "MAL1S033Par".Par.FlagProcess.ProcessEnd; 
      UN    "G271M".A_3125_MXZ01MA.Ma.StStopped; 
      UN    "G271M".A_3126_MXZ01MA.Ma.StStopped; 
      )     ; 
      SPBN  PE; 
      L     1000; 
      L     "MAL1S033Par".Par.ParIntProcess.PosRecycAirFlapBasic; // setpoint from recipe
      -I    ; 
      T     #A_3136_MXZ11.InPositionMiddle; // setpoint element

      U     "MAL1S033Par".Par.FlagProcess.Cooling_Activ; 
// Klappe offen halten, bis die Ventilatoren angehalten haben.
      U(    ; 
      U     "MAL1S033Par".Par.FlagProcess.ProcessEnd; 
      U     "G271M".A_3125_MXZ01MA.Ma.StStopped; 
      U     "G271M".A_3126_MXZ01MA.Ma.StStopped; 
      )     ; 
      SPBN  Coo2; 
// Die Gesamte Energie von Darre 2 zur Darre 1
      L     1000; // 100.0%
      T     #A_3136_MXZ11.InPositionMiddle; // setpoint element
Coo2: NOP   0; 

      L     0; // 0.0%
      T     #A_3135_MXZ11.InPositionMiddle; // setpoint element

      SPA   En06; 
PE:   NOP   0; 

      U     "G273M".A_3135_MXZ11.InManual; 
      SPB   Man1; 
      T     #A_3135_MXZ11.InPositionMiddle; // setpoint element
Man1: NOP   0; 

      U     "G273M".A_3136_MXZ11.InManual; 
      SPB   Man2; 
      T     #A_3136_MXZ11.InPositionMiddle; // setpoint element
Man2: NOP   0; 

M003: NOP   0; 
      SPA   En06; 
ILO6: NOP   0; 
      L     "MAL1S032Par".Par.ParIntProcess.TarPos_ILO_RecycAir; 
      L     10; // convert to 0.1%
      *I    ; 
      T     #A_3135_MXZ11.InPositionMiddle; // setpoint element
      T     #A_3136_MXZ11.InPositionMiddle; // setpoint element
En06: NOP   0; 


NETWORK
TITLE =Interlocking WayOk



NETWORK
TITLE =Interlocking Autostart

      CLR   ; 
      R     #Gr.OutAutostart; 
NETWORK
TITLE =Interlocking Enable

      U     #Gr.InEnableGr; 
      =     #Gr.OutEnableEl; 

NETWORK
TITLE =Interlocking Next

      U     #Gr.CmdNext; 
      U     #Gr.OutAutostart; 
      UN    #Gr.OutNewWay; 
      =     #tmpCmdNext; 

NETWORK
TITLE =Interlocking Local / HWStop

      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #tmpHWStop; 

      U     #Gr.ModePassive; 
      O     #tmpHWStop; 
      =     #tmpLocal; 

NETWORK
TITLE ==A-3135-MXZ11I1 : LOUVER RECYCLE AIR 1 CLOSING

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      SET   ; 
      =     #A_3135_MXZ11I1.InLocal; 
// 
//-Monitoring---
      U     #A_3135_MXZ11.OutpLN; // closing  
      =     #A_3135_MXZ11I1.InMonTrue; 
      CLR   ; 
      =     #A_3135_MXZ11I1.InMonFalse; 
// 
//-PreAlarm---
      CLR   ; 
      =     #A_3135_MXZ11I1.InPreAlarmTrue; 
      CLR   ; 
      =     #A_3135_MXZ11I1.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3135_MXZ11I1.CmdRunTimeOutTime
// 
//-Read inputs---
      U     "A_3135_MXZ11_I1"; 
      =     #A_3135_MXZ11I1.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3135_MXZ11I1.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3135_MXZ11I1.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3135_MXZ11I1 ;
// 
//-Write outputs---
NETWORK
TITLE ==A-3135-MXZ11I2 : LOUVER RECYCLE AIR 1 OPENING

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      SET   ; 
      =     #A_3135_MXZ11I2.InLocal; 
// 
//-Monitoring---
      U     #A_3135_MXZ11.OutpHN; // opening   
      =     #A_3135_MXZ11I2.InMonTrue; 
      CLR   ; 
      =     #A_3135_MXZ11I2.InMonFalse; 
// 
//-PreAlarm---
      CLR   ; 
      =     #A_3135_MXZ11I2.InPreAlarmTrue; 
      CLR   ; 
      =     #A_3135_MXZ11I2.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3135_MXZ11I2.CmdRunTimeOutTime
// 
//-Read inputs---
      U     "A_3135_MXZ11_I2"; 
      =     #A_3135_MXZ11I2.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3135_MXZ11I2.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3135_MXZ11I2.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3135_MXZ11I2 ;
// 
//-Write outputs---
NETWORK
TITLE ==A-3135-MXZ11 : LOUVER RECYCLE AIR 1

      NOP   0; 
//-InLocal---
      U(    ; 
      U     #tmpLocal; 
      O     ; 
      U     #Gr.InManual; 
      UN    #Gr.InOutAutostartMan; 
      )     ; 
      U     #A_3135_BZS14.StTrue; 
      =     #A_3135_MXZ11.InLocal; 

//-Interlocking---
      UN    #Gr.OutEnableEl; 
      =     #A_3135_MXZ11.InLN; 
      U     #Gr.OutEnableEl; 
      S     #A_3135_MXZ11.CmdMiddle1; 
      S     #A_3135_MXZ11.CmdMiddle2; 
      S     #A_3135_MXZ11.CmdHN; 
// 
//-Read inputs---
      U     "A_3135_BZS14_I1"; 
      =     #A_3135_MXZ11.InpLN; 
      CLR   ; 
      =     #A_3135_MXZ11.InpMiddle1; 
      U     "A_3135_BZS15_I1"; 
      =     #A_3135_MXZ11.InpHN; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3135_MXZ11.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3135_MXZ11.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3135_MXZ11 ;
// 
//-Write outputs---
      U     #A_3135_MXZ11.OutpLN; 
      =     "A_3135_MXZ11_O1"; 
      U     #A_3135_MXZ11.OutpHN; 
      =     "A_3135_MXZ11_O2"; 
NETWORK
TITLE ==A-3136-MXZ11I1 : LOUVER RECYCLE AIR 2 CLOSING

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      SET   ; 
      =     #A_3136_MXZ11I1.InLocal; 
// 
//-Monitoring---
      U     #A_3136_MXZ11.OutpLN; // closing  
      =     #A_3136_MXZ11I1.InMonTrue; 
      CLR   ; 
      =     #A_3136_MXZ11I1.InMonFalse; 
// 
//-PreAlarm---
      CLR   ; 
      =     #A_3136_MXZ11I1.InPreAlarmTrue; 
      CLR   ; 
      =     #A_3136_MXZ11I1.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3136_MXZ11I1.CmdRunTimeOutTime
// 
//-Read inputs---
      U     "A_3136_MXZ11_I1"; 
      =     #A_3136_MXZ11I1.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3136_MXZ11I1.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3136_MXZ11I1.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3136_MXZ11I1 ;
// 
//-Write outputs---
NETWORK
TITLE ==A-3136-MXZ11I2 : LOUVER RECYCLE AIR 2 OPENING

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      SET   ; 
      =     #A_3136_MXZ11I2.InLocal; 
// 
//-Monitoring---
      U     #A_3136_MXZ11.OutpHN; // opening
      =     #A_3136_MXZ11I2.InMonTrue; 
      CLR   ; 
      =     #A_3136_MXZ11I2.InMonFalse; 
// 
//-PreAlarm---
      CLR   ; 
      =     #A_3136_MXZ11I2.InPreAlarmTrue; 
      CLR   ; 
      =     #A_3136_MXZ11I2.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3136_MXZ11I2.CmdRunTimeOutTime
// 
//-Read inputs---
      U     "A_3136_MXZ11_I2"; 
      =     #A_3136_MXZ11I2.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3136_MXZ11I2.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3136_MXZ11I2.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3136_MXZ11I2 ;
// 
//-Write outputs---
NETWORK
TITLE ==A-3136-MXZ11 : LOUVER RECYCLE AIR 2

      NOP   0; 
//-InLocal---
      U(    ; 
      U     #tmpLocal; 
      O     ; 
      U     #Gr.InManual; 
      UN    #Gr.InOutAutostartMan; 
      )     ; 
      U     #A_3136_BZS14.StTrue; 
      =     #A_3136_MXZ11.InLocal; 
//
//-Interlocking---
      UN    #Gr.OutEnableEl; 
      =     #A_3136_MXZ11.InLN; 
      U     #Gr.OutEnableEl; 
      S     #A_3136_MXZ11.CmdMiddle1; 
      S     #A_3136_MXZ11.CmdMiddle2; 
      S     #A_3136_MXZ11.CmdHN; 
// 
//-Read inputs---
      U     "A_3136_BZS14_I1"; 
      =     #A_3136_MXZ11.InpLN; 
      CLR   ; 
      =     #A_3136_MXZ11.InpMiddle1; 
      U     "A_3136_BZS15_I1"; 
      =     #A_3136_MXZ11.InpHN; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3136_MXZ11.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3136_MXZ11.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3136_MXZ11 ;
// 
//-Write outputs---
      U     #A_3136_MXZ11.OutpLN; 
      =     "A_3136_MXZ11_O1"; 
      U     #A_3136_MXZ11.OutpHN; 
      =     "A_3136_MXZ11_O2"; 
NETWORK
TITLE ==A-3135-BZS14 : LOUVER RECYCLE AIR 1 CLOSED

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      =     #A_3135_BZS14.InLocal; 
// 
//-Monitoring---
      CLR   ; 
      =     #A_3135_BZS14.InMonTrue; 
      CLR   ; 
      =     #A_3135_BZS14.InMonFalse; 
// 
//-PreAlarm---
      CLR   ; 
      =     #A_3135_BZS14.InPreAlarmTrue; 
      CLR   ; 
      =     #A_3135_BZS14.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3135_BZS14.CmdRunTimeOutTime
// 
//-Read inputs---
      U     "A_3135_BZS14_I1"; 
      =     #A_3135_BZS14.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3135_BZS14.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3135_BZS14.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3135_BZS14 ;
// 
//-Write outputs---
NETWORK
TITLE ==A-3135-BZS15 : LOUVER RECYCLE AIR 1 OPENED

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      =     #A_3135_BZS15.InLocal; 
// 
//-Monitoring---
      CLR   ; 
      =     #A_3135_BZS15.InMonTrue; 
      CLR   ; 
      =     #A_3135_BZS15.InMonFalse; 
// 
//-PreAlarm---
      CLR   ; 
      =     #A_3135_BZS15.InPreAlarmTrue; 
      CLR   ; 
      =     #A_3135_BZS15.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3135_BZS15.CmdRunTimeOutTime
// 
//-Read inputs---
      U     "A_3135_BZS15_I1"; 
      =     #A_3135_BZS15.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3135_BZS15.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3135_BZS15.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3135_BZS15 ;
// 
//-Write outputs---
NETWORK
TITLE ==A-3136-BZS14 : LOUVER RECYCLE AIR 2 CLOSED

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      =     #A_3136_BZS14.InLocal; 
// 
//-Monitoring---
      CLR   ; 
      =     #A_3136_BZS14.InMonTrue; 
      CLR   ; 
      =     #A_3136_BZS14.InMonFalse; 
// 
//-PreAlarm---
      CLR   ; 
      =     #A_3136_BZS14.InPreAlarmTrue; 
      CLR   ; 
      =     #A_3136_BZS14.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3136_BZS14.CmdRunTimeOutTime
// 
//-Read inputs---
      U     "A_3136_BZS14_I1"; 
      =     #A_3136_BZS14.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_3136_BZS14.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[91]; 
      =     #A_3136_BZS14.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3136_BZS14 ;
// 
//-Write outputs---
NETWORK
TITLE ==A-3136-BZS15 : LOUVER RECYCLE AIR 2 OPENED
NOP 0;
//-InLocal---
      U     #tmpLocal; 
      =     #A_3136_BZS15.InLocal; 
// 
//-Monitoring---
      CLR;
      =      #A_3136_BZS15.InMonTrue; 
      CLR;
      =      #A_3136_BZS15.InMonFalse; 
// 
//-PreAlarm---
      CLR;
      =      #A_3136_BZS15.InPreAlarmTrue; 
      CLR;
      =      #A_3136_BZS15.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3136_BZS15.CmdRunTimeOutTime
// 
//-Read inputs---
      U     E 905.1; 
      =     #A_3136_BZS15.InpTrue; 
      U   DB050.DBX32.3;
      =     #A_3136_BZS15.InHWStop;
       U     PLC_DPInfo.Master[1].SlavesError[91];
       =       #A_3136_BZS15.InDPFault;
// 
//-Set Parameters---
// 
//-Call object control---
      CALL  #A_3136_BZS15;
// 
//-Write outputs---
NETWORK
TITLE =Test Fault

      U     #A_3135_MXZ11I1.StFault; 
      O     #A_3135_MXZ11I2.StFault; 
      O     #A_3135_MXZ11.StFault; 
      O     #A_3136_MXZ11I1.StFault; 
      O     #A_3136_MXZ11I2.StFault; 
      O     #A_3136_MXZ11.StFault; 
      O     #A_3135_BZS14.StFault; 
      O     #A_3135_BZS15.StFault; 
      O     #A_3136_BZS14.StFault; 
      O     #A_3136_BZS15.StFault;
      =     #Gr.VarFault; 
NETWORK
TITLE =Test Warning

      CLR   ; 
      =     #Gr.OutWarning; 
NETWORK
TITLE =Test Stopped

      U     #A_3135_MXZ11.StLN; 
      U     #A_3136_MXZ11.StLN; 
      UN    #Gr.InOccupied; 
      UN    #Gr.VarFault; 
      =     #Gr.VarStopped; 
NETWORK
TITLE =Test Started

      U     #Gr.InOccupied; 
      UN    #Gr.VarStopped; 
      UN    #Gr.VarFault; 
      =     #Gr.VarStarted; 

NETWORK
TITLE =Enable Previous Group

      U     #Gr.VarStarted; 
      =     #Gr.OutEnablePrevGr; 
NETWORK
TITLE =Call Methode State
//1. Make State of the group: This function use the signals:
//        Gr.VarStopped, Gr.VarStarted, Gr.VarFault
//2.Reset Commands to group: e.g.CmdFaultReset
      CALL #Gr (
           FcCode                   := 2);
NETWORK
TITLE =Init

      SET   ; 
      R     #CmdNewValue; 
      R     #CmdNewJob; 
NETWORK
TITLE =Write data to group control

      U     #Gr.StStopped; 
      =     "GCS7_GrCtrlDB".InStopped[273]; 
      U     #Gr.StStarted; 
      =     "GCS7_GrCtrlDB".InStarted[273]; 
      U     #Gr.StFault; 
      =     "GCS7_GrCtrlDB".InFault[273]; 
      U     #Gr.OutWarning; 
      =     "GCS7_GrCtrlDB".InWarning[273]; 
      U     #Gr.OutManual; 
      =     "GCS7_GrCtrlDB".InManual[273]; 
      U     #Gr.OutHWStop; 
      =     "GCS7_GrCtrlDB".InHWStop[273]; 
      U     #Gr.OutDPFault; 
      =     "GCS7_GrCtrlDB".InDPFault[273]; 
      U     #Gr.OutLoaded; 
      =     "GCS7_GrCtrlDB".InLoaded[273]; 
      U     #Gr.OutAutostart; 
      =     "GCS7_GrCtrlDB".InAutoStart[273]; 
      U     #Gr.VarStartwarning; 
      =     "GCS7_GrCtrlDB".InStartWarning[273]; 
NETWORK
TITLE =End of block

      BE    ; 

END_FUNCTION_BLOCK


DATA_BLOCK "G273M"
TITLE =DBG273M  RECYCLING AIR LOUVER KILN 1
//COPYRIGHT:    (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
//
//PRODUCT:      WinCoS_BIW01_09
//
//TITLE:        RECYCLING AIR LOUVER KILN 1
//                Machine group DB
//                Maschinengruppen-DB
//
//-------------------------------------------------------------------------
//
//IDENT:        AUTHOR:             DEPT:             DATE:
//
//P01_DB373.1.0 K.Renz              CSB41             05.Feb.2010
//              1st Release
//
//-------------------------------------------------------------------------
//
//PURPOSE: 
//
//MANUAL : 
//
//RESTRICTIONS: 
//
//-------------------------------------------------------------------------
AUTHOR : KR
FAMILY : USW
NAME : DBG273M
VERSION : 0.0

"G273M_Code"
BEGIN
   Gr.FcCode := 0; 
   Gr.Spare2 := 0; 
   Gr.Spare4 := 0; 
   Gr.Spare6 := 0; 
   Gr.OutEmptyingTime := 0; 
   Gr.ChangeBit.spare := B#16#0; 
   Gr.ChangeBit.CBit1 := FALSE; 
   Gr.ChangeBit.CBit2 := FALSE; 
   Gr.ChangeBit.CBit3 := FALSE; 
   Gr.ChangeBit.CBit4 := FALSE; 
   Gr.StCode := 0; 
   Gr.InEnableGr := FALSE; 
   Gr.CmdContinue := FALSE; 
   Gr.CmdRestartIdling := FALSE; 
   Gr.InReleaseEmptyingTime := FALSE; 
   Gr.InFeeding := FALSE; 
   Gr.InOutAutostartMan := FALSE; 
   Gr.InPreStart := FALSE; 
   Gr.CmdManualOff := FALSE; 
   Gr.CmdOff := FALSE; 
   Gr.CmdOn := FALSE; 
   Gr.CmdNext := FALSE; 
   Gr.CmdFaultReset := FALSE; 
   Gr.InOccupied := FALSE; 
   Gr.InManual := FALSE; 
   Gr.InLoadedSec := FALSE; 
   Gr.InSeqStop := FALSE; 
   Gr.ModePassive := FALSE; 
   Gr.ModeActive := FALSE; 
   Gr.ModeIdling := FALSE; 
   Gr.spare163 := FALSE; 
   Gr.spare164 := FALSE; 
   Gr.spare165 := FALSE; 
   Gr.spare166 := FALSE; 
   Gr.spare167 := FALSE; 
   Gr.StStopped := FALSE; 
   Gr.StStarting := FALSE; 
   Gr.StStarted := FALSE; 
   Gr.StStopping := FALSE; 
   Gr.StFault := FALSE; 
   Gr.OutLoaded := FALSE; 
   Gr.OutWarning := FALSE; 
   Gr.OutFeeding := FALSE; 
   Gr.OutEnableEl := FALSE; 
   Gr.OutEnable1 := FALSE; 
   Gr.OutHWStop := FALSE; 
   Gr.OutDPFault := FALSE; 
   Gr.OutAutostart := FALSE; 
   Gr.OutManual := FALSE; 
   Gr.OutHornOn := FALSE; 
   Gr.OutEnablePrevGr := FALSE; 
   Gr.VarStopped := FALSE; 
   Gr.VarStarted := FALSE; 
   Gr.VarFault := FALSE; 
   Gr.VarStartwarning := FALSE; 
   Gr.VarFlag1s := FALSE; 
   Gr.OutEmptyingTimeDone := FALSE; 
   Gr.OutNewWay := FALSE; 
   Gr.OutSeqStop := FALSE; 
   Gr.OutIdlingTime := 0; 
   Gr.InCodePreselect := 0; 
   Gr.InLine := 0; 
   Gr.InCode := 0; 
   Gr.OutCode := 0; 
   Gr.Par.ParObjectNo := 27300; 
   Gr.Par.ParMgr := TRUE; 
   Gr.Par.ParWgr := FALSE; 
   Gr.Par.ParGgr := FALSE; 
   Gr.Par.ParHornCode := 10; 
   Gr.Par.ParIdling := 2; 
   Gr.Par.ParEmptyingTime := 0; 
   Gr.Par.Para1_0 := FALSE; 
   Gr.Par.Para1_1 := FALSE; 
   Gr.Par.Para1_2 := FALSE; 
   Gr.Par.Para1_3 := FALSE; 
   Gr.Par.Para1_4 := FALSE; 
   Gr.Par.Para1_5 := FALSE; 
   Gr.Par.Para1_6 := FALSE; 
   Gr.Par.Para1_7 := FALSE; 
   Gr.Par.Para1_8 := FALSE; 
   Gr.Par.Para1_9 := FALSE; 
   Gr.Par.Para1_10 := FALSE; 
   Gr.Par.Para1_11 := FALSE; 
   Gr.Par.Para1_12 := FALSE; 
   Gr.Par.Para1_13 := FALSE; 
   Gr.Par.Para1_14 := FALSE; 
   Gr.Par.Para1_15 := FALSE; 
   Gr.Par.Para2 := 0; 
   Gr.Par.Para3 := 0; 
   Gr.Par.Para4 := 0; 
   Gr.Par.Para5 := 0; 
   InOutValue1 := L#0; 
   InOutValue2 := L#0; 
   OutWayConflict := FALSE; 
   OutSelectionOk := FALSE; 
   CmdNewValue := FALSE; 
   CmdNewJob := FALSE; 
   OutCodeOK := FALSE; 
   InEndOfJob := FALSE; 
   staWayOk := FALSE; 
   EdgeStartRelease := FALSE; 
   USW8 := FALSE; 
   USW9 := FALSE; 
   USW10 := FALSE; 
   USW11 := FALSE; 
   USW12 := FALSE; 
   USW13 := FALSE; 
   USW14 := FALSE; 
   USW15 := FALSE; 
   A_3135_MXZ11I1.StCode := 0; 
   A_3135_MXZ11I1.InMonTrue := FALSE; 
   A_3135_MXZ11I1.InMonFalse := FALSE; 
   A_3135_MXZ11I1.InPreAlarmTrue := FALSE; 
   A_3135_MXZ11I1.InPreAlarmFalse := FALSE; 
   A_3135_MXZ11I1.InStopTrueTime := FALSE; 
   A_3135_MXZ11I1.InStopFalseTime := FALSE; 
   A_3135_MXZ11I1.InpTrue := FALSE; 
   A_3135_MXZ11I1.InpFaultDev := FALSE; 
   A_3135_MXZ11I1.CmdRstTrueTime := FALSE; 
   A_3135_MXZ11I1.CmdRstFalseTime := FALSE; 
   A_3135_MXZ11I1.CmdRunTimeoutTime := FALSE; 
   A_3135_MXZ11I1.CmdFaultReset := FALSE; 
   A_3135_MXZ11I1.InLocal := FALSE; 
   A_3135_MXZ11I1.spare0305 := FALSE; 
   A_3135_MXZ11I1.InReport := FALSE; 
   A_3135_MXZ11I1.OutTimeoutTime := FALSE; 
   A_3135_MXZ11I1.InHWStop := FALSE; 
   A_3135_MXZ11I1.InDPFault := FALSE; 
   A_3135_MXZ11I1.OutPreAlarmTrue := FALSE; 
   A_3135_MXZ11I1.OutPreAlarmFalse := FALSE; 
   A_3135_MXZ11I1.OutFlagPos := FALSE; 
   A_3135_MXZ11I1.OutFlagNeg := FALSE; 
   A_3135_MXZ11I1.OutpFaultReset := FALSE; 
   A_3135_MXZ11I1.OutTrue := FALSE; 
   A_3135_MXZ11I1.StFalse := FALSE; 
   A_3135_MXZ11I1.StCtoTrue := FALSE; 
   A_3135_MXZ11I1.StTrue := FALSE; 
   A_3135_MXZ11I1.StCtoFalse := FALSE; 
   A_3135_MXZ11I1.StFault := FALSE; 
   A_3135_MXZ11I1.OutAlarmNrLog := 0; 
   A_3135_MXZ11I1.Par.ParObjectNo := 27301; 
   A_3135_MXZ11I1.Par.ParMsgType := 7135; 
   A_3135_MXZ11I1.Par.ParHornCode := 10; 
   A_3135_MXZ11I1.Par.ParLogOff := FALSE; 
   A_3135_MXZ11I1.Par.spare0401 := FALSE; 
   A_3135_MXZ11I1.Par.Par2WorkingCond := TRUE; 
   A_3135_MXZ11I1.Par.ParFaultRetry := FALSE; 
   A_3135_MXZ11I1.Par.ParBinLevel := FALSE; 
   A_3135_MXZ11I1.Par.ParDelayChange := 0; 
   A_3135_MXZ11I1.Par.ParDelayTrue := 10; 
   A_3135_MXZ11I1.Par.ParDelayFalse := 0; 
   A_3135_MXZ11I1.Par.ParTimeoutTrue := 50; 
   A_3135_MXZ11I1.Par.ParTimeoutFalse := 0; 
   A_3135_MXZ11I1.Par.OutMonTime := 0; 
   A_3135_MXZ11I1.Par.OutTransitionTime := 0; 
   A_3135_MXZ11I1.Par.OutMonTrue := FALSE; 
   A_3135_MXZ11I1.Par.OutMonFalse := FALSE; 
   A_3135_MXZ11I1.Par.OutFlagFaultDev := FALSE; 
   A_3135_MXZ11I1.Par.OutDelayTime := 0; 
   A_3135_MXZ11I2.StCode := 0; 
   A_3135_MXZ11I2.InMonTrue := FALSE; 
   A_3135_MXZ11I2.InMonFalse := FALSE; 
   A_3135_MXZ11I2.InPreAlarmTrue := FALSE; 
   A_3135_MXZ11I2.InPreAlarmFalse := FALSE; 
   A_3135_MXZ11I2.InStopTrueTime := FALSE; 
   A_3135_MXZ11I2.InStopFalseTime := FALSE; 
   A_3135_MXZ11I2.InpTrue := FALSE; 
   A_3135_MXZ11I2.InpFaultDev := FALSE; 
   A_3135_MXZ11I2.CmdRstTrueTime := FALSE; 
   A_3135_MXZ11I2.CmdRstFalseTime := FALSE; 
   A_3135_MXZ11I2.CmdRunTimeoutTime := FALSE; 
   A_3135_MXZ11I2.CmdFaultReset := FALSE; 
   A_3135_MXZ11I2.InLocal := FALSE; 
   A_3135_MXZ11I2.spare0305 := FALSE; 
   A_3135_MXZ11I2.InReport := FALSE; 
   A_3135_MXZ11I2.OutTimeoutTime := FALSE; 
   A_3135_MXZ11I2.InHWStop := FALSE; 
   A_3135_MXZ11I2.InDPFault := FALSE; 
   A_3135_MXZ11I2.OutPreAlarmTrue := FALSE; 
   A_3135_MXZ11I2.OutPreAlarmFalse := FALSE; 
   A_3135_MXZ11I2.OutFlagPos := FALSE; 
   A_3135_MXZ11I2.OutFlagNeg := FALSE; 
   A_3135_MXZ11I2.OutpFaultReset := FALSE; 
   A_3135_MXZ11I2.OutTrue := FALSE; 
   A_3135_MXZ11I2.StFalse := FALSE; 
   A_3135_MXZ11I2.StCtoTrue := FALSE; 
   A_3135_MXZ11I2.StTrue := FALSE; 
   A_3135_MXZ11I2.StCtoFalse := FALSE; 
   A_3135_MXZ11I2.StFault := FALSE; 
   A_3135_MXZ11I2.OutAlarmNrLog := 0; 
   A_3135_MXZ11I2.Par.ParObjectNo := 27302; 
   A_3135_MXZ11I2.Par.ParMsgType := 7135; 
   A_3135_MXZ11I2.Par.ParHornCode := 10; 
   A_3135_MXZ11I2.Par.ParLogOff := FALSE; 
   A_3135_MXZ11I2.Par.spare0401 := FALSE; 
   A_3135_MXZ11I2.Par.Par2WorkingCond := TRUE; 
   A_3135_MXZ11I2.Par.ParFaultRetry := FALSE; 
   A_3135_MXZ11I2.Par.ParBinLevel := FALSE; 
   A_3135_MXZ11I2.Par.ParDelayChange := 0; 
   A_3135_MXZ11I2.Par.ParDelayTrue := 10; 
   A_3135_MXZ11I2.Par.ParDelayFalse := 0; 
   A_3135_MXZ11I2.Par.ParTimeoutTrue := 50; 
   A_3135_MXZ11I2.Par.ParTimeoutFalse := 0; 
   A_3135_MXZ11I2.Par.OutMonTime := 0; 
   A_3135_MXZ11I2.Par.OutTransitionTime := 0; 
   A_3135_MXZ11I2.Par.OutMonTrue := FALSE; 
   A_3135_MXZ11I2.Par.OutMonFalse := FALSE; 
   A_3135_MXZ11I2.Par.OutFlagFaultDev := FALSE; 
   A_3135_MXZ11I2.Par.OutDelayTime := 0; 
   A_3135_MXZ11.StCode := 0; 
   A_3135_MXZ11.InLN := FALSE; 
   A_3135_MXZ11.CmdMiddle1 := FALSE; 
   A_3135_MXZ11.CmdMiddle2 := FALSE; 
   A_3135_MXZ11.CmdHN := FALSE; 
   A_3135_MXZ11.InpLN := FALSE; 
   A_3135_MXZ11.InpMiddle1 := FALSE; 
   A_3135_MXZ11.InpMiddle2 := FALSE; 
   A_3135_MXZ11.InpHN := FALSE; 
   A_3135_MXZ11.CmdLNMan := FALSE; 
   A_3135_MXZ11.CmdPrevPos := FALSE; 
   A_3135_MXZ11.CmdNextPos := FALSE; 
   A_3135_MXZ11.CmdFaultReset := FALSE; 
   A_3135_MXZ11.InLocal := FALSE; 
   A_3135_MXZ11.InManual := FALSE; 
   A_3135_MXZ11.InReport := FALSE; 
   A_3135_MXZ11.InpFaultAI := FALSE; 
   A_3135_MXZ11.InHWStop := FALSE; 
   A_3135_MXZ11.InDPFault := FALSE; 
   A_3135_MXZ11.OutWarning := FALSE; 
   A_3135_MXZ11.OutpLN2 := FALSE; 
   A_3135_MXZ11.OutpHN2 := FALSE; 
   A_3135_MXZ11.OutpHold := FALSE; 
   A_3135_MXZ11.OutpLN := FALSE; 
   A_3135_MXZ11.OutpHN := FALSE; 
   A_3135_MXZ11.StLN := FALSE; 
   A_3135_MXZ11.StCtoHN := FALSE; 
   A_3135_MXZ11.StHN := FALSE; 
   A_3135_MXZ11.StCtoLN := FALSE; 
   A_3135_MXZ11.StFault := FALSE; 
   A_3135_MXZ11.StNoPosition := FALSE; 
   A_3135_MXZ11.StMiddle1 := FALSE; 
   A_3135_MXZ11.StMiddle2 := FALSE; 
   A_3135_MXZ11.InpPosition := 0; 
   A_3135_MXZ11.InPositionMiddle := 0; 
   A_3135_MXZ11.OutPosition := 0; 
   A_3135_MXZ11.InpPulse := FALSE; 
   A_3135_MXZ11.spare12 := 0; 
   A_3135_MXZ11.OutAlarmNrLog := 0; 
   A_3135_MXZ11.Par.ParObjectNo := 27303; 
   A_3135_MXZ11.Par.ParMsgType := 7265; 
   A_3135_MXZ11.Par.ParHornCode := 10; 
   A_3135_MXZ11.Par.ParLogOff := FALSE; 
   A_3135_MXZ11.Par.ParManual := TRUE; 
   A_3135_MXZ11.Par.ParNoLSLN := FALSE; 
   A_3135_MXZ11.Par.ParNoLSMiddle2 := FALSE; 
   A_3135_MXZ11.Par.ParContinuousHN := FALSE; 
   A_3135_MXZ11.Par.ParNoReAdjust := FALSE; 
   A_3135_MXZ11.Par.ParDFZK := FALSE; 
   A_3135_MXZ11.Par.ParAnalog := FALSE; 
   A_3135_MXZ11.Par.ParWago := FALSE; 
   A_3135_MXZ11.Par.ParAngle := FALSE; 
   A_3135_MXZ11.Par.ParTimeControl := TRUE; 
   A_3135_MXZ11.Par.ParLinak := FALSE; 
   A_3135_MXZ11.Par.ParNoLSHN := FALSE; 
   A_3135_MXZ11.Par.ParTransTime := 2400; 
   A_3135_MXZ11.Par.ParWarningTime := 600; 
   A_3135_MXZ11.Par.ParPulseLN := 5; 
   A_3135_MXZ11.Par.ParPulseMiddle := 0; 
   A_3135_MXZ11.Par.ParPulseHN := 5; 
   A_3135_MXZ11.Par.ParUnitsByMaxDigit := 0; 
   A_3135_MXZ11.Par.ParUnitsByZeroDigit := 0; 
   A_3135_MXZ11.Par.ParPositionTolerance := 20; 
   A_3135_MXZ11.Par.ParPositionOpen := 980; 
   A_3135_MXZ11.Par.ParPositionClosed := 0; 
   A_3135_MXZ11.Par.spare28 := 0; 
   A_3135_MXZ11.Par.OutDelayTime := 0; 
   A_3135_MXZ11.Par.OutPosTarget := 0; 
   A_3135_MXZ11.Par.OutCntReAdjust := 0; 
   A_3135_MXZ11.Par.OutWarningTime := 0; 
   A_3135_MXZ11.Par.tmpInPosition := 0; 
   A_3135_MXZ11.Par.tmpOutpLN := FALSE; 
   A_3135_MXZ11.Par.tmpOutpHN := FALSE; 
   A_3135_MXZ11.Par.OutReAdjust := FALSE; 
   A_3135_MXZ11.Par.OutPulseIsOn := FALSE; 
   A_3136_MXZ11I1.StCode := 0; 
   A_3136_MXZ11I1.InMonTrue := FALSE; 
   A_3136_MXZ11I1.InMonFalse := FALSE; 
   A_3136_MXZ11I1.InPreAlarmTrue := FALSE; 
   A_3136_MXZ11I1.InPreAlarmFalse := FALSE; 
   A_3136_MXZ11I1.InStopTrueTime := FALSE; 
   A_3136_MXZ11I1.InStopFalseTime := FALSE; 
   A_3136_MXZ11I1.InpTrue := FALSE; 
   A_3136_MXZ11I1.InpFaultDev := FALSE; 
   A_3136_MXZ11I1.CmdRstTrueTime := FALSE; 
   A_3136_MXZ11I1.CmdRstFalseTime := FALSE; 
   A_3136_MXZ11I1.CmdRunTimeoutTime := FALSE; 
   A_3136_MXZ11I1.CmdFaultReset := FALSE; 
   A_3136_MXZ11I1.InLocal := FALSE; 
   A_3136_MXZ11I1.spare0305 := FALSE; 
   A_3136_MXZ11I1.InReport := FALSE; 
   A_3136_MXZ11I1.OutTimeoutTime := FALSE; 
   A_3136_MXZ11I1.InHWStop := FALSE; 
   A_3136_MXZ11I1.InDPFault := FALSE; 
   A_3136_MXZ11I1.OutPreAlarmTrue := FALSE; 
   A_3136_MXZ11I1.OutPreAlarmFalse := FALSE; 
   A_3136_MXZ11I1.OutFlagPos := FALSE; 
   A_3136_MXZ11I1.OutFlagNeg := FALSE; 
   A_3136_MXZ11I1.OutpFaultReset := FALSE; 
   A_3136_MXZ11I1.OutTrue := FALSE; 
   A_3136_MXZ11I1.StFalse := FALSE; 
   A_3136_MXZ11I1.StCtoTrue := FALSE; 
   A_3136_MXZ11I1.StTrue := FALSE; 
   A_3136_MXZ11I1.StCtoFalse := FALSE; 
   A_3136_MXZ11I1.StFault := FALSE; 
   A_3136_MXZ11I1.OutAlarmNrLog := 0; 
   A_3136_MXZ11I1.Par.ParObjectNo := 27304; 
   A_3136_MXZ11I1.Par.ParMsgType := 7135; 
   A_3136_MXZ11I1.Par.ParHornCode := 10; 
   A_3136_MXZ11I1.Par.ParLogOff := FALSE; 
   A_3136_MXZ11I1.Par.spare0401 := FALSE; 
   A_3136_MXZ11I1.Par.Par2WorkingCond := TRUE; 
   A_3136_MXZ11I1.Par.ParFaultRetry := FALSE; 
   A_3136_MXZ11I1.Par.ParBinLevel := FALSE; 
   A_3136_MXZ11I1.Par.ParDelayChange := 0; 
   A_3136_MXZ11I1.Par.ParDelayTrue := 10; 
   A_3136_MXZ11I1.Par.ParDelayFalse := 0; 
   A_3136_MXZ11I1.Par.ParTimeoutTrue := 50; 
   A_3136_MXZ11I1.Par.ParTimeoutFalse := 0; 
   A_3136_MXZ11I1.Par.OutMonTime := 0; 
   A_3136_MXZ11I1.Par.OutTransitionTime := 0; 
   A_3136_MXZ11I1.Par.OutMonTrue := FALSE; 
   A_3136_MXZ11I1.Par.OutMonFalse := FALSE; 
   A_3136_MXZ11I1.Par.OutFlagFaultDev := FALSE; 
   A_3136_MXZ11I1.Par.OutDelayTime := 0; 
   A_3136_MXZ11I2.StCode := 0; 
   A_3136_MXZ11I2.InMonTrue := FALSE; 
   A_3136_MXZ11I2.InMonFalse := FALSE; 
   A_3136_MXZ11I2.InPreAlarmTrue := FALSE; 
   A_3136_MXZ11I2.InPreAlarmFalse := FALSE; 
   A_3136_MXZ11I2.InStopTrueTime := FALSE; 
   A_3136_MXZ11I2.InStopFalseTime := FALSE; 
   A_3136_MXZ11I2.InpTrue := FALSE; 
   A_3136_MXZ11I2.InpFaultDev := FALSE; 
   A_3136_MXZ11I2.CmdRstTrueTime := FALSE; 
   A_3136_MXZ11I2.CmdRstFalseTime := FALSE; 
   A_3136_MXZ11I2.CmdRunTimeoutTime := FALSE; 
   A_3136_MXZ11I2.CmdFaultReset := FALSE; 
   A_3136_MXZ11I2.InLocal := FALSE; 
   A_3136_MXZ11I2.spare0305 := FALSE; 
   A_3136_MXZ11I2.InReport := FALSE; 
   A_3136_MXZ11I2.OutTimeoutTime := FALSE; 
   A_3136_MXZ11I2.InHWStop := FALSE; 
   A_3136_MXZ11I2.InDPFault := FALSE; 
   A_3136_MXZ11I2.OutPreAlarmTrue := FALSE; 
   A_3136_MXZ11I2.OutPreAlarmFalse := FALSE; 
   A_3136_MXZ11I2.OutFlagPos := FALSE; 
   A_3136_MXZ11I2.OutFlagNeg := FALSE; 
   A_3136_MXZ11I2.OutpFaultReset := FALSE; 
   A_3136_MXZ11I2.OutTrue := FALSE; 
   A_3136_MXZ11I2.StFalse := FALSE; 
   A_3136_MXZ11I2.StCtoTrue := FALSE; 
   A_3136_MXZ11I2.StTrue := FALSE; 
   A_3136_MXZ11I2.StCtoFalse := FALSE; 
   A_3136_MXZ11I2.StFault := FALSE; 
   A_3136_MXZ11I2.OutAlarmNrLog := 0; 
   A_3136_MXZ11I2.Par.ParObjectNo := 27305; 
   A_3136_MXZ11I2.Par.ParMsgType := 7135; 
   A_3136_MXZ11I2.Par.ParHornCode := 10; 
   A_3136_MXZ11I2.Par.ParLogOff := FALSE; 
   A_3136_MXZ11I2.Par.spare0401 := FALSE; 
   A_3136_MXZ11I2.Par.Par2WorkingCond := TRUE; 
   A_3136_MXZ11I2.Par.ParFaultRetry := FALSE; 
   A_3136_MXZ11I2.Par.ParBinLevel := FALSE; 
   A_3136_MXZ11I2.Par.ParDelayChange := 0; 
   A_3136_MXZ11I2.Par.ParDelayTrue := 10; 
   A_3136_MXZ11I2.Par.ParDelayFalse := 0; 
   A_3136_MXZ11I2.Par.ParTimeoutTrue := 50; 
   A_3136_MXZ11I2.Par.ParTimeoutFalse := 0; 
   A_3136_MXZ11I2.Par.OutMonTime := 0; 
   A_3136_MXZ11I2.Par.OutTransitionTime := 0; 
   A_3136_MXZ11I2.Par.OutMonTrue := FALSE; 
   A_3136_MXZ11I2.Par.OutMonFalse := FALSE; 
   A_3136_MXZ11I2.Par.OutFlagFaultDev := FALSE; 
   A_3136_MXZ11I2.Par.OutDelayTime := 0; 
   A_3136_MXZ11.StCode := 0; 
   A_3136_MXZ11.InLN := FALSE; 
   A_3136_MXZ11.CmdMiddle1 := FALSE; 
   A_3136_MXZ11.CmdMiddle2 := FALSE; 
   A_3136_MXZ11.CmdHN := FALSE; 
   A_3136_MXZ11.InpLN := FALSE; 
   A_3136_MXZ11.InpMiddle1 := FALSE; 
   A_3136_MXZ11.InpMiddle2 := FALSE; 
   A_3136_MXZ11.InpHN := FALSE; 
   A_3136_MXZ11.CmdLNMan := FALSE; 
   A_3136_MXZ11.CmdPrevPos := FALSE; 
   A_3136_MXZ11.CmdNextPos := FALSE; 
   A_3136_MXZ11.CmdFaultReset := FALSE; 
   A_3136_MXZ11.InLocal := FALSE; 
   A_3136_MXZ11.InManual := FALSE; 
   A_3136_MXZ11.InReport := FALSE; 
   A_3136_MXZ11.InpFaultAI := FALSE; 
   A_3136_MXZ11.InHWStop := FALSE; 
   A_3136_MXZ11.InDPFault := FALSE; 
   A_3136_MXZ11.OutWarning := FALSE; 
   A_3136_MXZ11.OutpLN2 := FALSE; 
   A_3136_MXZ11.OutpHN2 := FALSE; 
   A_3136_MXZ11.OutpHold := FALSE; 
   A_3136_MXZ11.OutpLN := FALSE; 
   A_3136_MXZ11.OutpHN := FALSE; 
   A_3136_MXZ11.StLN := FALSE; 
   A_3136_MXZ11.StCtoHN := FALSE; 
   A_3136_MXZ11.StHN := FALSE; 
   A_3136_MXZ11.StCtoLN := FALSE; 
   A_3136_MXZ11.StFault := FALSE; 
   A_3136_MXZ11.StNoPosition := FALSE; 
   A_3136_MXZ11.StMiddle1 := FALSE; 
   A_3136_MXZ11.StMiddle2 := FALSE; 
   A_3136_MXZ11.InpPosition := 0; 
   A_3136_MXZ11.InPositionMiddle := 0; 
   A_3136_MXZ11.OutPosition := 0; 
   A_3136_MXZ11.InpPulse := FALSE; 
   A_3136_MXZ11.spare12 := 0; 
   A_3136_MXZ11.OutAlarmNrLog := 0; 
   A_3136_MXZ11.Par.ParObjectNo := 27306; 
   A_3136_MXZ11.Par.ParMsgType := 7265; 
   A_3136_MXZ11.Par.ParHornCode := 10; 
   A_3136_MXZ11.Par.ParLogOff := FALSE; 
   A_3136_MXZ11.Par.ParManual := TRUE; 
   A_3136_MXZ11.Par.ParNoLSLN := FALSE; 
   A_3136_MXZ11.Par.ParNoLSMiddle2 := FALSE; 
   A_3136_MXZ11.Par.ParContinuousHN := FALSE; 
   A_3136_MXZ11.Par.ParNoReAdjust := FALSE; 
   A_3136_MXZ11.Par.ParDFZK := FALSE; 
   A_3136_MXZ11.Par.ParAnalog := FALSE; 
   A_3136_MXZ11.Par.ParWago := FALSE; 
   A_3136_MXZ11.Par.ParAngle := FALSE; 
   A_3136_MXZ11.Par.ParTimeControl := TRUE; 
   A_3136_MXZ11.Par.ParLinak := FALSE; 
   A_3136_MXZ11.Par.ParNoLSHN := FALSE; 
   A_3136_MXZ11.Par.ParTransTime := 2400; 
   A_3136_MXZ11.Par.ParWarningTime := 600; 
   A_3136_MXZ11.Par.ParPulseLN := 5; 
   A_3136_MXZ11.Par.ParPulseMiddle := 0; 
   A_3136_MXZ11.Par.ParPulseHN := 5; 
   A_3136_MXZ11.Par.ParUnitsByMaxDigit := 0; 
   A_3136_MXZ11.Par.ParUnitsByZeroDigit := 0; 
   A_3136_MXZ11.Par.ParPositionTolerance := 20; 
   A_3136_MXZ11.Par.ParPositionOpen := 980; 
   A_3136_MXZ11.Par.ParPositionClosed := 0; 
   A_3136_MXZ11.Par.spare28 := 0; 
   A_3136_MXZ11.Par.OutDelayTime := 0; 
   A_3136_MXZ11.Par.OutPosTarget := 0; 
   A_3136_MXZ11.Par.OutCntReAdjust := 0; 
   A_3136_MXZ11.Par.OutWarningTime := 0; 
   A_3136_MXZ11.Par.tmpInPosition := 0; 
   A_3136_MXZ11.Par.tmpOutpLN := FALSE; 
   A_3136_MXZ11.Par.tmpOutpHN := FALSE; 
   A_3136_MXZ11.Par.OutReAdjust := FALSE; 
   A_3136_MXZ11.Par.OutPulseIsOn := FALSE; 
   spare316[316] := B#16#0; 
   spare316[317] := B#16#0; 
   spare316[318] := B#16#0; 
   spare316[319] := B#16#0; 
   spare316[320] := B#16#0; 
   spare316[321] := B#16#0; 
   spare316[322] := B#16#0; 
   spare316[323] := B#16#0; 
   spare316[324] := B#16#0; 
   spare316[325] := B#16#0; 
   spare316[326] := B#16#0; 
   spare316[327] := B#16#0; 
   spare316[328] := B#16#0; 
   spare316[329] := B#16#0; 
   spare316[330] := B#16#0; 
   spare316[331] := B#16#0; 
   spare316[332] := B#16#0; 
   spare316[333] := B#16#0; 
   spare316[334] := B#16#0; 
   spare316[335] := B#16#0; 
   spare316[336] := B#16#0; 
   spare316[337] := B#16#0; 
   spare316[338] := B#16#0; 
   spare316[339] := B#16#0; 
   spare316[340] := B#16#0; 
   spare316[341] := B#16#0; 
   spare316[342] := B#16#0; 
   spare316[343] := B#16#0; 
   spare316[344] := B#16#0; 
   spare316[345] := B#16#0; 
   spare316[346] := B#16#0; 
   spare316[347] := B#16#0; 
   spare316[348] := B#16#0; 
   spare316[349] := B#16#0; 
   spare316[350] := B#16#0; 
   spare316[351] := B#16#0; 
   spare316[352] := B#16#0; 
   spare316[353] := B#16#0; 
   spare316[354] := B#16#0; 
   spare316[355] := B#16#0; 
   spare316[356] := B#16#0; 
   spare316[357] := B#16#0; 
   spare316[358] := B#16#0; 
   spare316[359] := B#16#0; 
   spare316[360] := B#16#0; 
   spare316[361] := B#16#0; 
   spare316[362] := B#16#0; 
   spare316[363] := B#16#0; 
   spare316[364] := B#16#0; 
   spare316[365] := B#16#0; 
   spare316[366] := B#16#0; 
   spare316[367] := B#16#0; 
   spare316[368] := B#16#0; 
   spare316[369] := B#16#0; 
   spare316[370] := B#16#0; 
   spare316[371] := B#16#0; 
   spare316[372] := B#16#0; 
   spare316[373] := B#16#0; 
   spare316[374] := B#16#0; 
   spare316[375] := B#16#0; 
   spare316[376] := B#16#0; 
   spare316[377] := B#16#0; 
   spare316[378] := B#16#0; 
   spare316[379] := B#16#0; 
   spare316[380] := B#16#0; 
   spare316[381] := B#16#0; 
   spare316[382] := B#16#0; 
   spare316[383] := B#16#0; 
   spare316[384] := B#16#0; 
   spare316[385] := B#16#0; 
   spare316[386] := B#16#0; 
   spare316[387] := B#16#0; 
   spare316[388] := B#16#0; 
   spare316[389] := B#16#0; 
   spare316[390] := B#16#0; 
   spare316[391] := B#16#0; 
   spare316[392] := B#16#0; 
   spare316[393] := B#16#0; 
   spare316[394] := B#16#0; 
   spare316[395] := B#16#0; 
   spare316[396] := B#16#0; 
   spare316[397] := B#16#0; 
   spare316[398] := B#16#0; 
   spare316[399] := B#16#0; 
   spare316[400] := B#16#0; 
   spare316[401] := B#16#0; 
   spare316[402] := B#16#0; 
   spare316[403] := B#16#0; 
   spare316[404] := B#16#0; 
   spare316[405] := B#16#0; 
   spare316[406] := B#16#0; 
   spare316[407] := B#16#0; 
   spare316[408] := B#16#0; 
   spare316[409] := B#16#0; 
   spare316[410] := B#16#0; 
   spare316[411] := B#16#0; 
   spare316[412] := B#16#0; 
   spare316[413] := B#16#0; 
   spare316[414] := B#16#0; 
   spare316[415] := B#16#0; 
   spare316[416] := B#16#0; 
   spare316[417] := B#16#0; 
   spare316[418] := B#16#0; 
   spare316[419] := B#16#0; 
   spare316[420] := B#16#0; 
   spare316[421] := B#16#0; 
   spare316[422] := B#16#0; 
   spare316[423] := B#16#0; 
   spare316[424] := B#16#0; 
   spare316[425] := B#16#0; 
   spare316[426] := B#16#0; 
   spare316[427] := B#16#0; 
   spare316[428] := B#16#0; 
   spare316[429] := B#16#0; 
   spare316[430] := B#16#0; 
   spare316[431] := B#16#0; 
   spare316[432] := B#16#0; 
   spare316[433] := B#16#0; 
   spare316[434] := B#16#0; 
   spare316[435] := B#16#0; 
   spare316[436] := B#16#0; 
   spare316[437] := B#16#0; 
   spare316[438] := B#16#0; 
   spare316[439] := B#16#0; 
   spare316[440] := B#16#0; 
   spare316[441] := B#16#0; 
   spare316[442] := B#16#0; 
   spare316[443] := B#16#0; 
   spare316[444] := B#16#0; 
   spare316[445] := B#16#0; 
   spare316[446] := B#16#0; 
   spare316[447] := B#16#0; 
   spare316[448] := B#16#0; 
   spare316[449] := B#16#0; 
   spare316[450] := B#16#0; 
   spare316[451] := B#16#0; 
   spare316[452] := B#16#0; 
   spare316[453] := B#16#0; 
   spare316[454] := B#16#0; 
   spare316[455] := B#16#0; 
   spare316[456] := B#16#0; 
   spare316[457] := B#16#0; 
   spare316[458] := B#16#0; 
   spare316[459] := B#16#0; 
   spare316[460] := B#16#0; 
   spare316[461] := B#16#0; 
   spare316[462] := B#16#0; 
   spare316[463] := B#16#0; 
   spare316[464] := B#16#0; 
   spare316[465] := B#16#0; 
   spare316[466] := B#16#0; 
   spare316[467] := B#16#0; 
   spare316[468] := B#16#0; 
   spare316[469] := B#16#0; 
   spare316[470] := B#16#0; 
   spare316[471] := B#16#0; 
   spare316[472] := B#16#0; 
   spare316[473] := B#16#0; 
   spare316[474] := B#16#0; 
   spare316[475] := B#16#0; 
   spare316[476] := B#16#0; 
   spare316[477] := B#16#0; 
   spare316[478] := B#16#0; 
   spare316[479] := B#16#0; 
   spare316[480] := B#16#0; 
   spare316[481] := B#16#0; 
   spare316[482] := B#16#0; 
   spare316[483] := B#16#0; 
   spare316[484] := B#16#0; 
   spare316[485] := B#16#0; 
   spare316[486] := B#16#0; 
   spare316[487] := B#16#0; 
   spare316[488] := B#16#0; 
   spare316[489] := B#16#0; 
   spare316[490] := B#16#0; 
   spare316[491] := B#16#0; 
   spare316[492] := B#16#0; 
   spare316[493] := B#16#0; 
   spare316[494] := B#16#0; 
   spare316[495] := B#16#0; 
   spare316[496] := B#16#0; 
   spare316[497] := B#16#0; 
   spare316[498] := B#16#0; 
   spare316[499] := B#16#0; 
   spare316[500] := B#16#0; 
   spare316[501] := B#16#0; 
   spare316[502] := B#16#0; 
   spare316[503] := B#16#0; 
   spare316[504] := B#16#0; 
   spare316[505] := B#16#0; 
   spare316[506] := B#16#0; 
   spare316[507] := B#16#0; 
   spare316[508] := B#16#0; 
   spare316[509] := B#16#0; 
   spare316[510] := B#16#0; 
   spare316[511] := B#16#0; 
   spare316[512] := B#16#0; 
   spare316[513] := B#16#0; 
   spare316[514] := B#16#0; 
   spare316[515] := B#16#0; 
   spare316[516] := B#16#0; 
   spare316[517] := B#16#0; 
   spare316[518] := B#16#0; 
   spare316[519] := B#16#0; 
   spare316[520] := B#16#0; 
   spare316[521] := B#16#0; 
   spare316[522] := B#16#0; 
   spare316[523] := B#16#0; 
   spare316[524] := B#16#0; 
   spare316[525] := B#16#0; 
   spare316[526] := B#16#0; 
   spare316[527] := B#16#0; 
   spare316[528] := B#16#0; 
   spare316[529] := B#16#0; 
   spare316[530] := B#16#0; 
   spare316[531] := B#16#0; 
   spare316[532] := B#16#0; 
   spare316[533] := B#16#0; 
   spare316[534] := B#16#0; 
   spare316[535] := B#16#0; 
   spare316[536] := B#16#0; 
   spare316[537] := B#16#0; 
   spare316[538] := B#16#0; 
   spare316[539] := B#16#0; 
   spare316[540] := B#16#0; 
   spare316[541] := B#16#0; 
   spare316[542] := B#16#0; 
   spare316[543] := B#16#0; 
   spare316[544] := B#16#0; 
   spare316[545] := B#16#0; 
   spare316[546] := B#16#0; 
   spare316[547] := B#16#0; 
   spare316[548] := B#16#0; 
   spare316[549] := B#16#0; 
   spare316[550] := B#16#0; 
   spare316[551] := B#16#0; 
   spare316[552] := B#16#0; 
   spare316[553] := B#16#0; 
   spare316[554] := B#16#0; 
   spare316[555] := B#16#0; 
   spare316[556] := B#16#0; 
   spare316[557] := B#16#0; 
   spare316[558] := B#16#0; 
   spare316[559] := B#16#0; 
   spare316[560] := B#16#0; 
   spare316[561] := B#16#0; 
   spare316[562] := B#16#0; 
   spare316[563] := B#16#0; 
   spare316[564] := B#16#0; 
   spare316[565] := B#16#0; 
   spare316[566] := B#16#0; 
   spare316[567] := B#16#0; 
   spare316[568] := B#16#0; 
   spare316[569] := B#16#0; 
   spare316[570] := B#16#0; 
   spare316[571] := B#16#0; 
   A_3135_BZS14.StCode := 0; 
   A_3135_BZS14.InMonTrue := FALSE; 
   A_3135_BZS14.InMonFalse := FALSE; 
   A_3135_BZS14.InPreAlarmTrue := FALSE; 
   A_3135_BZS14.InPreAlarmFalse := FALSE; 
   A_3135_BZS14.InStopTrueTime := FALSE; 
   A_3135_BZS14.InStopFalseTime := FALSE; 
   A_3135_BZS14.InpTrue := FALSE; 
   A_3135_BZS14.InpFaultDev := FALSE; 
   A_3135_BZS14.CmdRstTrueTime := FALSE; 
   A_3135_BZS14.CmdRstFalseTime := FALSE; 
   A_3135_BZS14.CmdRunTimeoutTime := FALSE; 
   A_3135_BZS14.CmdFaultReset := FALSE; 
   A_3135_BZS14.InLocal := FALSE; 
   A_3135_BZS14.spare0305 := FALSE; 
   A_3135_BZS14.InReport := FALSE; 
   A_3135_BZS14.OutTimeoutTime := FALSE; 
   A_3135_BZS14.InHWStop := FALSE; 
   A_3135_BZS14.InDPFault := FALSE; 
   A_3135_BZS14.OutPreAlarmTrue := FALSE; 
   A_3135_BZS14.OutPreAlarmFalse := FALSE; 
   A_3135_BZS14.OutFlagPos := FALSE; 
   A_3135_BZS14.OutFlagNeg := FALSE; 
   A_3135_BZS14.OutpFaultReset := FALSE; 
   A_3135_BZS14.OutTrue := FALSE; 
   A_3135_BZS14.StFalse := FALSE; 
   A_3135_BZS14.StCtoTrue := FALSE; 
   A_3135_BZS14.StTrue := FALSE; 
   A_3135_BZS14.StCtoFalse := FALSE; 
   A_3135_BZS14.StFault := FALSE; 
   A_3135_BZS14.OutAlarmNrLog := 0; 
   A_3135_BZS14.Par.ParObjectNo := 27313; 
   A_3135_BZS14.Par.ParMsgType := 7163; 
   A_3135_BZS14.Par.ParHornCode := 10; 
   A_3135_BZS14.Par.ParLogOff := FALSE; 
   A_3135_BZS14.Par.spare0401 := FALSE; 
   A_3135_BZS14.Par.Par2WorkingCond := FALSE; 
   A_3135_BZS14.Par.ParFaultRetry := FALSE; 
   A_3135_BZS14.Par.ParBinLevel := FALSE; 
   A_3135_BZS14.Par.ParDelayChange := 20; 
   A_3135_BZS14.Par.ParDelayTrue := 10; 
   A_3135_BZS14.Par.ParDelayFalse := 0; 
   A_3135_BZS14.Par.ParTimeoutTrue := 0; 
   A_3135_BZS14.Par.ParTimeoutFalse := 0; 
   A_3135_BZS14.Par.OutMonTime := 0; 
   A_3135_BZS14.Par.OutTransitionTime := 0; 
   A_3135_BZS14.Par.OutMonTrue := FALSE; 
   A_3135_BZS14.Par.OutMonFalse := FALSE; 
   A_3135_BZS14.Par.OutFlagFaultDev := FALSE; 
   A_3135_BZS14.Par.OutDelayTime := 0; 
   A_3135_BZS15.StCode := 0; 
   A_3135_BZS15.InMonTrue := FALSE; 
   A_3135_BZS15.InMonFalse := FALSE; 
   A_3135_BZS15.InPreAlarmTrue := FALSE; 
   A_3135_BZS15.InPreAlarmFalse := FALSE; 
   A_3135_BZS15.InStopTrueTime := FALSE; 
   A_3135_BZS15.InStopFalseTime := FALSE; 
   A_3135_BZS15.InpTrue := FALSE; 
   A_3135_BZS15.InpFaultDev := FALSE; 
   A_3135_BZS15.CmdRstTrueTime := FALSE; 
   A_3135_BZS15.CmdRstFalseTime := FALSE; 
   A_3135_BZS15.CmdRunTimeoutTime := FALSE; 
   A_3135_BZS15.CmdFaultReset := FALSE; 
   A_3135_BZS15.InLocal := FALSE; 
   A_3135_BZS15.spare0305 := FALSE; 
   A_3135_BZS15.InReport := FALSE; 
   A_3135_BZS15.OutTimeoutTime := FALSE; 
   A_3135_BZS15.InHWStop := FALSE; 
   A_3135_BZS15.InDPFault := FALSE; 
   A_3135_BZS15.OutPreAlarmTrue := FALSE; 
   A_3135_BZS15.OutPreAlarmFalse := FALSE; 
   A_3135_BZS15.OutFlagPos := FALSE; 
   A_3135_BZS15.OutFlagNeg := FALSE; 
   A_3135_BZS15.OutpFaultReset := FALSE; 
   A_3135_BZS15.OutTrue := FALSE; 
   A_3135_BZS15.StFalse := FALSE; 
   A_3135_BZS15.StCtoTrue := FALSE; 
   A_3135_BZS15.StTrue := FALSE; 
   A_3135_BZS15.StCtoFalse := FALSE; 
   A_3135_BZS15.StFault := FALSE; 
   A_3135_BZS15.OutAlarmNrLog := 0; 
   A_3135_BZS15.Par.ParObjectNo := 27314; 
   A_3135_BZS15.Par.ParMsgType := 7163; 
   A_3135_BZS15.Par.ParHornCode := 10; 
   A_3135_BZS15.Par.ParLogOff := FALSE; 
   A_3135_BZS15.Par.spare0401 := FALSE; 
   A_3135_BZS15.Par.Par2WorkingCond := FALSE; 
   A_3135_BZS15.Par.ParFaultRetry := FALSE; 
   A_3135_BZS15.Par.ParBinLevel := FALSE; 
   A_3135_BZS15.Par.ParDelayChange := 20; 
   A_3135_BZS15.Par.ParDelayTrue := 10; 
   A_3135_BZS15.Par.ParDelayFalse := 0; 
   A_3135_BZS15.Par.ParTimeoutTrue := 0; 
   A_3135_BZS15.Par.ParTimeoutFalse := 0; 
   A_3135_BZS15.Par.OutMonTime := 0; 
   A_3135_BZS15.Par.OutTransitionTime := 0; 
   A_3135_BZS15.Par.OutMonTrue := FALSE; 
   A_3135_BZS15.Par.OutMonFalse := FALSE; 
   A_3135_BZS15.Par.OutFlagFaultDev := FALSE; 
   A_3135_BZS15.Par.OutDelayTime := 0; 
   A_3136_BZS14.StCode := 0; 
   A_3136_BZS14.InMonTrue := FALSE; 
   A_3136_BZS14.InMonFalse := FALSE; 
   A_3136_BZS14.InPreAlarmTrue := FALSE; 
   A_3136_BZS14.InPreAlarmFalse := FALSE; 
   A_3136_BZS14.InStopTrueTime := FALSE; 
   A_3136_BZS14.InStopFalseTime := FALSE; 
   A_3136_BZS14.InpTrue := FALSE; 
   A_3136_BZS14.InpFaultDev := FALSE; 
   A_3136_BZS14.CmdRstTrueTime := FALSE; 
   A_3136_BZS14.CmdRstFalseTime := FALSE; 
   A_3136_BZS14.CmdRunTimeoutTime := FALSE; 
   A_3136_BZS14.CmdFaultReset := FALSE; 
   A_3136_BZS14.InLocal := FALSE; 
   A_3136_BZS14.spare0305 := FALSE; 
   A_3136_BZS14.InReport := FALSE; 
   A_3136_BZS14.OutTimeoutTime := FALSE; 
   A_3136_BZS14.InHWStop := FALSE; 
   A_3136_BZS14.InDPFault := FALSE; 
   A_3136_BZS14.OutPreAlarmTrue := FALSE; 
   A_3136_BZS14.OutPreAlarmFalse := FALSE; 
   A_3136_BZS14.OutFlagPos := FALSE; 
   A_3136_BZS14.OutFlagNeg := FALSE; 
   A_3136_BZS14.OutpFaultReset := FALSE; 
   A_3136_BZS14.OutTrue := FALSE; 
   A_3136_BZS14.StFalse := FALSE; 
   A_3136_BZS14.StCtoTrue := FALSE; 
   A_3136_BZS14.StTrue := FALSE; 
   A_3136_BZS14.StCtoFalse := FALSE; 
   A_3136_BZS14.StFault := FALSE; 
   A_3136_BZS14.OutAlarmNrLog := 0; 
   A_3136_BZS14.Par.ParObjectNo := 27316; 
   A_3136_BZS14.Par.ParMsgType := 7163; 
   A_3136_BZS14.Par.ParHornCode := 10; 
   A_3136_BZS14.Par.ParLogOff := FALSE; 
   A_3136_BZS14.Par.spare0401 := FALSE; 
   A_3136_BZS14.Par.Par2WorkingCond := FALSE; 
   A_3136_BZS14.Par.ParFaultRetry := FALSE; 
   A_3136_BZS14.Par.ParBinLevel := FALSE; 
   A_3136_BZS14.Par.ParDelayChange := 20; 
   A_3136_BZS14.Par.ParDelayTrue := 10; 
   A_3136_BZS14.Par.ParDelayFalse := 0; 
   A_3136_BZS14.Par.ParTimeoutTrue := 0; 
   A_3136_BZS14.Par.ParTimeoutFalse := 0; 
   A_3136_BZS14.Par.OutMonTime := 0; 
   A_3136_BZS14.Par.OutTransitionTime := 0; 
   A_3136_BZS14.Par.OutMonTrue := FALSE; 
   A_3136_BZS14.Par.OutMonFalse := FALSE; 
   A_3136_BZS14.Par.OutFlagFaultDev := FALSE; 
   A_3136_BZS14.Par.OutDelayTime := 0; 
      #A_3136_BZS15.Par.ParObjectNo                             :=27316;
      #A_3136_BZS15.Par.ParMsgType                              :=7163;
      #A_3136_BZS15.Par.ParHornCode                             :=10;
      #A_3136_BZS15.Par.ParDelayChange                          :=20;
      #A_3136_BZS15.Par.ParDelayTrue                            :=10;
      #A_3136_BZS15.Par.ParDelayFalse                           :=0;
      #A_3136_BZS15.Par.ParTimeoutTrue                          :=0;
      #A_3136_BZS15.Par.ParTimeoutFalse                         :=0;
      #A_3136_BZS15.Par.ParLogOff                               :=False;
      #A_3136_BZS15.Par.Par2WorkingCond                         :=False;
      #A_3136_BZS15.Par.ParFaultRetry                           :=False;
      #A_3136_BZS15.Par.ParBinLevel                             :=False;
END_DATA_BLOCK

