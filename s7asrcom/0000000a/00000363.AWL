
FUNCTION_BLOCK "A_2926_MXZ0MA_Code"
TITLE =A_2926_MXZ0MA BELT CONVEYOR 7200
//COPYRIGHT:     (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
//
//PRODUCT:       WinCoS_BIW01_09
//
//TITLE:         BELT CONVEYOR 7200
// 
//--------------------------------------------------------------------------------
// 
//IDENT:         AUTHOR:             DEPT:                             DATE:
// 
//P01_FB1011.1.0 K.Renz              CSB41                             08.Mrz.2010
//               1st Release
// 
//--------------------------------------------------------------------------------
// 
//PURPOSE: 
// 
//MANUAL : 
// 
//RESTRICTIONS: 
// 
//--------------------------------------------------------------------------------
AUTHOR : KR
FAMILY : USW
VERSION : 0.0


VAR
  Ma : "GCS7_M_FB50_Data";	// Machine
  A_2926_BFT07 : "GCS7_E_Level";	// Mon1: DigInpCont
  A_2926_SHE20 : "GCS7_E_DigInput";	// Mon2: DigInpCont
  Mon3 : "GCS7_E_DigInput";	// spare
  A_2926_BSA13 : "GCS7_E_DigInput";	// Mon4: DigInpCont
  A_2926_BZS14_15 : "GCS7_E_DigInput";	// Mon5: DigInpCont
  A_2926_BZS16_17 : "GCS7_E_DigInput";	// Mon6: DigInpCont
  A_2926_MXZ01 : "GCS7_E_Motor";	// Motor: Motor
END_VAR
BEGIN
NETWORK
TITLE =Call SSW

      UC    "GCS7_M_Motor6Mon"; 
END_FUNCTION_BLOCK


FUNCTION_BLOCK "G261M_Code"
TITLE =G261M BELT CONVEYOR 7200 KILN
//COPYRIGHT:    (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
//
//PRODUCT:      WinCoS_BIW01_09
//
//TITLE:        BELT CONVEYOR 7200 KILN
//                Machine group control
//                Maschinengruppensteuerung
// 
//--------------------------------------------------------------------------------
// 
//IDENT:        AUTHOR:             DEPT:                              DATE:
// 
//P01_FB361.1.0 K.Renz              CSB41                              08.Mrz.2010
//             1st Release
// 
//--------------------------------------------------------------------------------
// 
//PURPOSE: 
// 
//MANUAL : 
// 
//RESTRICTIONS: 
// 
//--------------------------------------------------------------------------------
AUTHOR : KR
FAMILY : USW
VERSION : 9.9


VAR
  Gr : "GCS7_GrpCtrlSub";	//Standard interface to group
  InOutValue1 : DINT ;	//Data for user
  InOutValue2 : DINT ;	//Data for user
  OutWayConflict : BOOL ;	//Data for user
  OutSelectionOk : BOOL ;	//Data for user
  CmdNewValue : BOOL ;	//Data for user
  CmdNewJob : BOOL ;	//Data for user
  OutCodeOK : BOOL ;	//Data for user
  InEndOfJob : BOOL ;	//Data for user
  staWayOk : BOOL ;	//Data for user
  EdgeStartRelease : BOOL ;	//Data for user
  USW8 : BOOL ;	//Data for user
  USW9 : BOOL ;	//Data for user
  USW10 : BOOL ;	//Data for user
  USW11 : BOOL ;	//Data for user
  USW12 : BOOL ;	//Data for user
  USW13 : BOOL ;	//Data for user
  USW14 : BOOL ;	//Data for user
  USW15 : BOOL ;	//Data for user
  A_2926_MXZ0MA : "A_2926_MXZ0MA_Code";	// Motor+6DI 
  A_3101_KILN0 : "GCS7_E_DigInput";	// DigInpCont 
     #A_2926_QXV31 : FB13;   // VLS 
END_VAR
VAR_TEMP
  tmpEnable : BOOL ;	
  tmpFlag : BOOL ;	
  tmpCmdNext : BOOL ;	
  tmpLocal : BOOL ;	
  tmpAspOk : BOOL ;	
  tmpHWStop : BOOL ;	
  tmpInstanzDBNo : INT ;	
END_VAR
BEGIN
NETWORK
TITLE =



NETWORK
TITLE =Read command from group control
//Parameter
      SET   ; 
      S     "GCS7_GrCtrlDB".ParMGR[261]; 
      R     "GCS7_GrCtrlDB".ParWGR[261]; 
      R     "GCS7_GrCtrlDB".ParGGR[261]; 
      R     "GCS7_GrCtrlDB".ParFeed[261]; 
      R     "GCS7_GrCtrlDB".ParShare[261]; 
      S     #Gr.Par.ParMgr; 
      R     #Gr.Par.ParWgr; 
      R     #Gr.Par.ParGgr; 
//Command
      U     "GCS7_GrCtrlDB".OutEnable[261]; 
      =     #Gr.InEnableGr; 
      U     "GCS7_GrCtrlDB".OutOccupied[261]; 
      =     #Gr.InOccupied; 
      U     "GCS7_GrCtrlDB".CmdFaultReset[261]; 
      R     "GCS7_GrCtrlDB".CmdFaultReset[261]; 
      S     #Gr.CmdFaultReset; 
      U     "GCS7_GrCtrlDB".CmdNext[261]; 
      R     "GCS7_GrCtrlDB".CmdNext[261]; 
      S     #Gr.CmdNext; 

      U     "GCS7_GrCtrlDB".CmdManualOff[261]; 
      UN    "MAL1S032".PCRead.Status.StaHand; 
      UN    "MAL1S033".PCRead.Status.StaHand; 
      UN    #Gr.InManual; 
      S     #Gr.CmdManualOff; 
      U     "GCS7_GrCtrlDB".CmdManualOff[261]; 
      R     "GCS7_GrCtrlDB".CmdManualOff[261]; 

//      U     "GCS7_GrCtrlDB".CmdManualOff[261]
//      O     "GCS7_GrCtrlDB".OutOccupied[261]
//      R     "GCS7_GrCtrlDB".CmdManualOff[261]
//      S     #Gr.CmdManualOff

      U     "GCS7_GrCtrlDB".CmdContinue[261]; 
      R     "GCS7_GrCtrlDB".CmdContinue[261]; 
      S     #Gr.CmdContinue; 
//Init Line Number
      U     "GCS7_GrCtrlDB".ParShare[261]; 
      SPBN  WE00; 
      L     0; 
      T     #Gr.InLine; 
WE00: NOP   0; 
NETWORK
TITLE =Call Methode Control
// 1. Handle Interface PCControl      
// 2. Prepare mode --> ModePassive,ModeActive,ModeIdling      
// 3. Reset global flags of the group
      CALL #Gr (
           FcCode                   := 1);
NETWORK
TITLE =Restart Idling Time

      L     #Gr.Par.ParIdling; 
      L     2; 
      >=I   ; 
      SPB   IdTm; 
      T     #Gr.Par.ParIdling; 
IdTm: NOP   0; 
      UN    "G284M".Gr.ModePassive; 
      S     #Gr.CmdRestartIdling; 
NETWORK
TITLE =Prepare global flags



NETWORK
TITLE =Set Pattern (Target position)



NETWORK
TITLE =Interlocking WayOk



NETWORK
TITLE =Interlocking Autostart

      CLR   ; 
      R     #Gr.OutAutostart; 
NETWORK
TITLE =Interlocking Enable

      U     "G262M".Gr.OutEnablePrevGr; 
//KR10022010--->Wenn beladen Dummy Darre angewählt
      O(    ; 
      L     831; // Next Section: MAL1S031
      L     "MAL1S017".SecNom.HEADER.Kilning_vessel_1; // Target in recipe
      ==I   ; 
      )     ; 
//<---
//====>BRT190310
      O(    ; 
      L     831; // Next Section: MAL1S031
      L     "MAL1S018".SecNom.HEADER.Kilning_vessel_1; // Target in recipe
      ==I   ; 
      )     ; 
      O(    ; 
      L     831; // Next Section: MAL1S031
      L     "MAL1S019".SecNom.HEADER.Kilning_vessel_1; // Target in recipe
      ==I   ; 
      )     ; 
      O(    ; 
      L     831; // Next Section: MAL1S031
      L     "MAL1S020".SecNom.HEADER.Kilning_vessel_1; // Target in recipe
      ==I   ; 
      )     ; 
      O(    ; 
      L     831; // Next Section: MAL1S031
      L     "MAL1S021".SecNom.HEADER.Kilning_vessel_1; // Target in recipe
      ==I   ; 
      )     ; 
      O(    ; 
      L     831; // Next Section: MAL1S031
      L     "MAL1S022".SecNom.HEADER.Kilning_vessel_1; // Target in recipe
      ==I   ; 
      )     ; 
      O(    ; 
      L     831; // Next Section: MAL1S031
      L     "MAL1S023".SecNom.HEADER.Kilning_vessel_1; // Target in recipe
      ==I   ; 
      )     ; 
      O(    ; 
      L     831; // Next Section: MAL1S031
      L     "MAL1S024".SecNom.HEADER.Kilning_vessel_1; // Target in recipe
      ==I   ; 
      )     ; 
//<====BRT190310
      U     #Gr.InEnableGr; 
      =     #Gr.OutEnableEl; 

NETWORK
TITLE =Interlocking Next

      U     #Gr.CmdNext; 
      U     #Gr.OutAutostart; 
      UN    #Gr.OutNewWay; 
      =     #tmpCmdNext; 

NETWORK
TITLE =Interlocking Local / HWStop

      U     "PLC_SystemDB".HardwareStop.General; 
      =     #tmpHWStop; 

      U     #Gr.ModePassive; 
      O     #tmpHWStop; 
      =     #tmpLocal; 

NETWORK
TITLE =Interlocking Start Warning

      NOP   0; 
//- Restart after fault --
      U     #Gr.CmdFaultReset; 
      U     #Gr.VarFault; 
      S     "SYS_StartWarningDB".Area[10].CmdResetStartWarning; 
//- Run Timer --
      AUF   "G261M"; 
      CALL "GCS7_StartWarning" , "SYS_StartWarningDB" (
           InModeHigher             := FALSE,
           InArea                   := 10,
           InEnable                 := #Gr.OutEnableEl,
           InLocal                  := #tmpLocal,
           InStarted                := #Gr.VarStarted,
           InCmdNext                := #tmpCmdNext,
           OutCmdNext               := #tmpCmdNext,
           OutStartwarning          := #Gr.VarStartwarning);
//- Store Startwarning done  --
//- Reset Autostart --
      U     "SYS_StartWarningDB".TmpArea.OutStartReleaseRunningL; 
      FN    #EdgeStartRelease; 
      U     #Gr.VarFault; 
      R     #Gr.OutAutostart; 
NETWORK
TITLE ==A-2926-MXZ0MA : BELT CONVEYOR 7200

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      =     #A_2926_MXZ0MA.Ma.InLocal; 
//
//-Interlocking---

      U     #Gr.OutEnableEl; 
      =     #A_2926_MXZ0MA.Ma.InEnableFwd; 
//
      U     #tmpCmdNext; 
      S     #A_2926_MXZ0MA.Ma.CmdNext; 
//
      U     #Gr.OutSeqStop; 
      =     #A_2926_MXZ0MA.Ma.InSeqStop; 
// 
//=Values and commands of elements===
//-=A-2926-BFT07---
//      CLR
//      S     #A_2926_MXZ0MA.A_2926_BFT07.CmdRunTimeOutTime
//-=A-2926-SHE20---
//      CLR
//      S     #A_2926_MXZ0MA.A_2926_SHE20.CmdRunTimeOutTime
//-=A-2926-BSA13---
//      CLR
//      S     #A_2926_MXZ0MA.A_2926_BSA13.CmdRunTimeOutTime
//-=A-2926-BZS14/15---
//      CLR
//      S     #A_2926_MXZ0MA.A_2926_BZS14_15.CmdRunTimeOutTime
//-=A-2926-BZS16/17---
//      CLR
//      S     #A_2926_MXZ0MA.A_2926_BZS16_17.CmdRunTimeOutTime
// 
//-Read inputs of elements---
      UN    "A_2926_BFT07_I1"; 
      =     #A_2926_MXZ0MA.A_2926_BFT07.InpCovered; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_2926_MXZ0MA.A_2926_BFT07.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[113]; 
      =     #A_2926_MXZ0MA.A_2926_BFT07.InDPFault; 
//BRT080310      U     "A_2926_SHE20_I1"
      UN    "A_2926_SHE20_I1"; 
      =     #A_2926_MXZ0MA.A_2926_SHE20.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_2926_MXZ0MA.A_2926_SHE20.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[112]; 
      =     #A_2926_MXZ0MA.A_2926_SHE20.InDPFault; 
      U     "A_2926_BSA13_I1"; 
      =     #A_2926_MXZ0MA.A_2926_BSA13.InpTrue; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_2926_MXZ0MA.A_2926_BSA13.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[113]; 
      =     #A_2926_MXZ0MA.A_2926_BSA13.InDPFault; 
      U     "A_2926_BZS14_15_I1"; 
      =     #A_2926_MXZ0MA.A_2926_BZS14_15.InpTrue; 
      U     "PLC_SystemDB".HardwareStop.General; 
      =     #A_2926_MXZ0MA.A_2926_BZS14_15.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[113]; 
      =     #A_2926_MXZ0MA.A_2926_BZS14_15.InDPFault; 
      U     "A_2926_BZS16_17_I1"; 
      =     #A_2926_MXZ0MA.A_2926_BZS16_17.InpTrue; 
      U     "PLC_SystemDB".HardwareStop.General; 
      =     #A_2926_MXZ0MA.A_2926_BZS16_17.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[113]; 
      =     #A_2926_MXZ0MA.A_2926_BZS16_17.InDPFault; 
      U     "A_2926_MXZ01_I1"; 
      =     #A_2926_MXZ0MA.A_2926_MXZ01.InpRunFwd; 
      U     "PLC_SystemDB".GlobalFlags.Kilning_1; 
      =     #A_2926_MXZ0MA.A_2926_MXZ01.InHWStop; 
      U     "PLC_DPInfo".Master[1].SlavesError[112]; 
      =     #A_2926_MXZ0MA.A_2926_MXZ01.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_2926_MXZ0MA ;
// 
//-Write outputs---
      U     #A_2926_MXZ0MA.A_2926_MXZ01.OutpRunFwd; 
      =     "A_2926_MXZ01_O1"; 
NETWORK
TITLE ==A-3101-KILN0 : SIGNAL ALTE DARRE INFEEDING

      NOP   0; 
//-InLocal---
      U     #tmpLocal; 
      =     #A_3101_KILN0.InLocal; 
// 
//-Monitoring---
      CLR   ; 
      =     #A_3101_KILN0.InMonTrue; 
      CLR   ; 
      =     #A_3101_KILN0.InMonFalse; 
// 
//-PreAlarm---
      CLR   ; 
      =     #A_3101_KILN0.InPreAlarmTrue; 
      CLR   ; 
      =     #A_3101_KILN0.InPreAlarmFalse; 
// 
//-Additional commands---
//      CLR
//      S     #A_3101_KILN0.CmdRunTimeOutTime
// 
//-Read inputs---
      U     "A_3101_KILN0_I1"; 
      =     #A_3101_KILN0.InpTrue; 
      U     "PLC_DPInfo".Master[1].SlavesError[112]; 
      =     #A_3101_KILN0.InDPFault; 
// 
//-Set Parameters---
// 
//-Call object control---
      CALL #A_3101_KILN0 ;
// 
//-Write outputs---
NETWORK
TITLE ==A-2926-QXV31 : BALL VALVE SPRAY WATER OPEN
NOP 0;
//-InLocal---
      U     #tmpLocal; 
      =     #A_2926_QXV31.InLocal; 
//
//-Interlocking---
      U A_2926_MXZ0MA.Ma.StStartedFwd;
         =     #A_2926_QXV31.InEnableHN; 
         NOT;
         =     #A_2926_QXV31.InEnableLN; 
//
         SET;
         S     #A_2926_QXV31.CmdNext; 
//
      U     #Gr.OutSeqStop; 
      =     #A_2926_QXV31.InSeqStop; 
// 
//-Read inputs---
      UN   #A_2926_QXV31.OutpHN; 
      =     #A_2926_QXV31.InpLN; 
      U   #A_2926_QXV31.OutpHN; 
      =     #A_2926_QXV31.InpHN;
      U   DB050.DBX32.3;
      =     #A_2926_QXV31.InHWStop;
       U     PLC_DPInfo.Master[1].SlavesError[113];
       =       #A_2926_QXV31.InDPFault;
// 
//-Set Parameters---
// 
//-Call object control---
      CALL  #A_2926_QXV31;
// 
//-Write outputs---
      UN     #A_2926_QXV31.OutpHN; 
      =     A 1124.5; 
NETWORK
TITLE =Test Fault

      U     #A_2926_MXZ0MA.Ma.StFault; 
      O     #A_3101_KILN0.StFault; 
      O     #A_2926_QXV31.StFault;
      =     #Gr.VarFault; 
NETWORK
TITLE =Test Warning

      CLR   ; 
      =     #Gr.OutWarning; 
NETWORK
TITLE =Test Stopped
//BRT080310      U     #A_2926_MXZ0MA.Ma.StStopped
//BRT080310      UN    #Gr.VarFault
      UN    #Gr.VarStarted; 
      =     #Gr.VarStopped; 
NETWORK
TITLE =Test Started

      U     #A_2926_MXZ0MA.Ma.StStartedFwd; 
//BRT080310      UN    #Gr.VarStopped
      U     #A_2926_QXV31.StHN; 
      UN    #Gr.VarFault; 
      =     #Gr.VarStarted; 
NETWORK
TITLE =Enable Previous Group

      U     #Gr.VarStarted; 
      =     #Gr.OutEnablePrevGr; 
NETWORK
TITLE =Call Methode State
//1. Make State of the group: This function use the signals:
//        Gr.VarStopped, Gr.VarStarted, Gr.VarFault
//2.Reset Commands to group: e.g.CmdFaultReset
      CALL #Gr (
           FcCode                   := 2);
NETWORK
TITLE =Init

      SET   ; 
      R     #CmdNewValue; 
      R     #CmdNewJob; 
NETWORK
TITLE =Write data to group control

      U     #Gr.StStopped; 
      =     "GCS7_GrCtrlDB".InStopped[261]; 
      U     #Gr.StStarted; 
      =     "GCS7_GrCtrlDB".InStarted[261]; 
      U     #Gr.StFault; 
      =     "GCS7_GrCtrlDB".InFault[261]; 
      U     #Gr.OutWarning; 
      =     "GCS7_GrCtrlDB".InWarning[261]; 
      U     #Gr.OutManual; 
      =     "GCS7_GrCtrlDB".InManual[261]; 
      U     #Gr.OutHWStop; 
      =     "GCS7_GrCtrlDB".InHWStop[261]; 
      U     #Gr.OutDPFault; 
      =     "GCS7_GrCtrlDB".InDPFault[261]; 
      U     #Gr.OutLoaded; 
      =     "GCS7_GrCtrlDB".InLoaded[261]; 
      U     #Gr.OutAutostart; 
      =     "GCS7_GrCtrlDB".InAutoStart[261]; 
      U     #Gr.VarStartwarning; 
      =     "GCS7_GrCtrlDB".InStartWarning[261]; 
NETWORK
TITLE =End of block

      BE    ; 

END_FUNCTION_BLOCK


DATA_BLOCK "G261M"
TITLE =DBG261M  BELT CONVEYOR 7200 KILN
//COPYRIGHT:    (C) 2009  BUHLER AG, CH-9240 UZWIL, SWITZERLAND
//
//PRODUCT:      WinCoS_BIW01_09
//
//TITLE:        BELT CONVEYOR 7200 KILN
//                Machine group DB
//                Maschinengruppen-DB
//
//-------------------------------------------------------------------------
//
//IDENT:        AUTHOR:             DEPT:             DATE:
//
//P01_DB361.1.0 K.Renz              CSB41             08.Mrz.2010
//              1st Release
//
//-------------------------------------------------------------------------
//
//PURPOSE: 
//
//MANUAL : 
//
//RESTRICTIONS: 
//
//-------------------------------------------------------------------------
AUTHOR : KR
FAMILY : USW
NAME : DBG261M
VERSION : 0.0

"G261M_Code"
BEGIN
   Gr.FcCode := 0; 
   Gr.Spare2 := 0; 
   Gr.Spare4 := 0; 
   Gr.Spare6 := 0; 
   Gr.OutEmptyingTime := 0; 
   Gr.ChangeBit.spare := B#16#0; 
   Gr.ChangeBit.CBit1 := FALSE; 
   Gr.ChangeBit.CBit2 := FALSE; 
   Gr.ChangeBit.CBit3 := FALSE; 
   Gr.ChangeBit.CBit4 := FALSE; 
   Gr.StCode := 0; 
   Gr.InEnableGr := FALSE; 
   Gr.CmdContinue := FALSE; 
   Gr.CmdRestartIdling := FALSE; 
   Gr.InReleaseEmptyingTime := FALSE; 
   Gr.InFeeding := FALSE; 
   Gr.InOutAutostartMan := FALSE; 
   Gr.InPreStart := FALSE; 
   Gr.CmdManualOff := FALSE; 
   Gr.CmdOff := FALSE; 
   Gr.CmdOn := FALSE; 
   Gr.CmdNext := FALSE; 
   Gr.CmdFaultReset := FALSE; 
   Gr.InOccupied := FALSE; 
   Gr.InManual := FALSE; 
   Gr.InLoadedSec := FALSE; 
   Gr.InSeqStop := FALSE; 
   Gr.ModePassive := FALSE; 
   Gr.ModeActive := FALSE; 
   Gr.ModeIdling := FALSE; 
   Gr.spare163 := FALSE; 
   Gr.spare164 := FALSE; 
   Gr.spare165 := FALSE; 
   Gr.spare166 := FALSE; 
   Gr.spare167 := FALSE; 
   Gr.StStopped := FALSE; 
   Gr.StStarting := FALSE; 
   Gr.StStarted := FALSE; 
   Gr.StStopping := FALSE; 
   Gr.StFault := FALSE; 
   Gr.OutLoaded := FALSE; 
   Gr.OutWarning := FALSE; 
   Gr.OutFeeding := FALSE; 
   Gr.OutEnableEl := FALSE; 
   Gr.OutEnable1 := FALSE; 
   Gr.OutHWStop := FALSE; 
   Gr.OutDPFault := FALSE; 
   Gr.OutAutostart := FALSE; 
   Gr.OutManual := FALSE; 
   Gr.OutHornOn := FALSE; 
   Gr.OutEnablePrevGr := FALSE; 
   Gr.VarStopped := FALSE; 
   Gr.VarStarted := FALSE; 
   Gr.VarFault := FALSE; 
   Gr.VarStartwarning := FALSE; 
   Gr.VarFlag1s := FALSE; 
   Gr.OutEmptyingTimeDone := FALSE; 
   Gr.OutNewWay := FALSE; 
   Gr.OutSeqStop := FALSE; 
   Gr.OutIdlingTime := 0; 
   Gr.InCodePreselect := 0; 
   Gr.InLine := 0; 
   Gr.InCode := 0; 
   Gr.OutCode := 0; 
   Gr.Par.ParObjectNo := 26100; 
   Gr.Par.ParMgr := TRUE; 
   Gr.Par.ParWgr := FALSE; 
   Gr.Par.ParGgr := FALSE; 
   Gr.Par.ParHornCode := 10; 
   Gr.Par.ParIdling := 2; 
   Gr.Par.ParEmptyingTime := 0; 
   Gr.Par.Para1_0 := FALSE; 
   Gr.Par.Para1_1 := FALSE; 
   Gr.Par.Para1_2 := FALSE; 
   Gr.Par.Para1_3 := FALSE; 
   Gr.Par.Para1_4 := FALSE; 
   Gr.Par.Para1_5 := FALSE; 
   Gr.Par.Para1_6 := FALSE; 
   Gr.Par.Para1_7 := FALSE; 
   Gr.Par.Para1_8 := FALSE; 
   Gr.Par.Para1_9 := FALSE; 
   Gr.Par.Para1_10 := FALSE; 
   Gr.Par.Para1_11 := FALSE; 
   Gr.Par.Para1_12 := FALSE; 
   Gr.Par.Para1_13 := FALSE; 
   Gr.Par.Para1_14 := FALSE; 
   Gr.Par.Para1_15 := FALSE; 
   Gr.Par.Para2 := 0; 
   Gr.Par.Para3 := 0; 
   Gr.Par.Para4 := 0; 
   Gr.Par.Para5 := 0; 
   InOutValue1 := L#0; 
   InOutValue2 := L#0; 
   OutWayConflict := FALSE; 
   OutSelectionOk := FALSE; 
   CmdNewValue := FALSE; 
   CmdNewJob := FALSE; 
   OutCodeOK := FALSE; 
   InEndOfJob := FALSE; 
   staWayOk := FALSE; 
   EdgeStartRelease := FALSE; 
   USW8 := FALSE; 
   USW9 := FALSE; 
   USW10 := FALSE; 
   USW11 := FALSE; 
   USW12 := FALSE; 
   USW13 := FALSE; 
   USW14 := FALSE; 
   USW15 := FALSE; 
   A_2926_MXZ0MA.Ma.StCode := 0; 
   A_2926_MXZ0MA.Ma.InEnableRev := FALSE; 
   A_2926_MXZ0MA.Ma.InEnableFwd := FALSE; 
   A_2926_MXZ0MA.Ma.InOverrideHLOutlet := FALSE; 
   A_2926_MXZ0MA.Ma.spare0203 := FALSE; 
   A_2926_MXZ0MA.Ma.OutEdgeFaultReset := FALSE; 
   A_2926_MXZ0MA.Ma.OutFaultResetFcttst := FALSE; 
   A_2926_MXZ0MA.Ma.InpControlEBM := FALSE; 
   A_2926_MXZ0MA.Ma.InpLocked := FALSE; 
   A_2926_MXZ0MA.Ma.CmdOff := FALSE; 
   A_2926_MXZ0MA.Ma.CmdOn := FALSE; 
   A_2926_MXZ0MA.Ma.CmdNext := FALSE; 
   A_2926_MXZ0MA.Ma.CmdFaultReset := FALSE; 
   A_2926_MXZ0MA.Ma.InLocal := FALSE; 
   A_2926_MXZ0MA.Ma.InManual := FALSE; 
   A_2926_MXZ0MA.Ma.CmdTestEBM := FALSE; 
   A_2926_MXZ0MA.Ma.InSeqStop := FALSE; 
   A_2926_MXZ0MA.Ma.OutWarning := FALSE; 
   A_2926_MXZ0MA.Ma.InfBMTopOk := FALSE; 
   A_2926_MXZ0MA.Ma.InfBMBottomOk := FALSE; 
   A_2926_MXZ0MA.Ma.InfSMOk := FALSE; 
   A_2926_MXZ0MA.Ma.OutpFcttst_BM_Top := FALSE; 
   A_2926_MXZ0MA.Ma.OutpFcttst_BM_Bottom := FALSE; 
   A_2926_MXZ0MA.Ma.OutpFcttst_SM := FALSE; 
   A_2926_MXZ0MA.Ma.OutpFaultReset := FALSE; 
   A_2926_MXZ0MA.Ma.StStopped := FALSE; 
   A_2926_MXZ0MA.Ma.StStarting := FALSE; 
   A_2926_MXZ0MA.Ma.StStartedFwd := FALSE; 
   A_2926_MXZ0MA.Ma.StStopping := FALSE; 
   A_2926_MXZ0MA.Ma.StFault := FALSE; 
   A_2926_MXZ0MA.Ma.StStartedRev := FALSE; 
   A_2926_MXZ0MA.Ma.StLocked := FALSE; 
   A_2926_MXZ0MA.Ma.OutTestTime := 0; 
   A_2926_MXZ0MA.Ma.Par.ParObjectNo := 26101; 
   A_2926_MXZ0MA.Ma.Par.ParWithMon1 := TRUE; 
   A_2926_MXZ0MA.Ma.Par.ParWithMon3 := FALSE; 
   A_2926_MXZ0MA.Ma.Par.ParWithMon4 := TRUE; 
   A_2926_MXZ0MA.Ma.Par.ParWithMon5 := TRUE; 
   A_2926_MXZ0MA.Ma.Par.ParWithMon6 := TRUE; 
   A_2926_MXZ0MA.Ma.Par.ParMon1IsHL := TRUE; 
   A_2926_MXZ0MA.Ma.Par.ParMon1IsLS := FALSE; 
   A_2926_MXZ0MA.Ma.Par.ParMon1StopByFault := TRUE; 
   A_2926_MXZ0MA.Ma.Par.ParMon2IsLS := TRUE; 
   A_2926_MXZ0MA.Ma.Par.ParMon3IsLS := FALSE; 
   A_2926_MXZ0MA.Ma.Par.ParMon4AsWarning := FALSE; 
   A_2926_MXZ0MA.Ma.Par.ParMon4StopByFault := TRUE; 
   A_2926_MXZ0MA.Ma.Par.ParMon4IsLS := FALSE; 
   A_2926_MXZ0MA.Ma.Par.ParEBM := FALSE; 
   A_2926_MXZ0MA.Ma.Par.ParMon4IsSM := TRUE; 
   A_2926_MXZ0MA.A_2926_BFT07.StCode := 0; 
   A_2926_MXZ0MA.A_2926_BFT07.InMonCovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InMonUncovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InPreAlarmCovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InPreAlarmUncovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InStopCoveredTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InStopUncoveredTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InpCovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InpFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.CmdRstCoveredTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.CmdRstUncoveredTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.CmdRunTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.CmdFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InLocal := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.spare0305 := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InReport := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.OutTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InHWStop := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.InDPFault := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.OutPreAlarmCovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.OutPreAlarmUncovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.OutFlagPos := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.OutFlagNeg := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.OutpFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.OutCovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.StUncovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.StCtoCovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.StCovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.StCtoUncovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.StFault := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.OutAlarmNrLog := 0; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParObjectNo := 26107; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParMsgType := 7165; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParHornCode := 0; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParLogOff := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.spare0401 := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.Par2WorkingCond := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParFaultRetry := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParBinLevel := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParDelayChange := 20; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParDelayCovered := 10; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParDelayUncovered := 30; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParTimeoutCovered := 0; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.ParTimeoutUncovered := 0; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.OutMonTime := 0; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.OutTransitionTime := 0; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.OutMonCovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.OutMonUncovered := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.OutFlagFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_BFT07.Par.OutDelayTime := 0; 
   A_2926_MXZ0MA.A_2926_SHE20.StCode := 0; 
   A_2926_MXZ0MA.A_2926_SHE20.InMonTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InMonFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InStopTrueTime := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InStopFalseTime := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InpTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InpFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.CmdRstTrueTime := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.CmdRstFalseTime := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.CmdRunTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.CmdFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InLocal := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.spare0305 := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InReport := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.OutTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InHWStop := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.InDPFault := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.OutPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.OutPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.OutFlagPos := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.OutFlagNeg := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.OutpFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.OutTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.StFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.StCtoTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.StTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.StCtoFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.StFault := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.OutAlarmNrLog := 0; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParObjectNo := 26104; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParMsgType := 7135; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParHornCode := 10; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParLogOff := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.spare0401 := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.Par2WorkingCond := TRUE; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParFaultRetry := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParBinLevel := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParDelayChange := 0; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParDelayTrue := 10; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParDelayFalse := 0; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParTimeoutTrue := 50; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.ParTimeoutFalse := 0; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.OutMonTime := 0; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.OutTransitionTime := 0; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.OutMonTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.OutMonFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.OutFlagFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_SHE20.Par.OutDelayTime := 0; 
   A_2926_MXZ0MA.Mon3.StCode := 0; 
   A_2926_MXZ0MA.Mon3.InMonTrue := FALSE; 
   A_2926_MXZ0MA.Mon3.InMonFalse := FALSE; 
   A_2926_MXZ0MA.Mon3.InPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.Mon3.InPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.Mon3.InStopTrueTime := FALSE; 
   A_2926_MXZ0MA.Mon3.InStopFalseTime := FALSE; 
   A_2926_MXZ0MA.Mon3.InpTrue := FALSE; 
   A_2926_MXZ0MA.Mon3.InpFaultDev := FALSE; 
   A_2926_MXZ0MA.Mon3.CmdRstTrueTime := FALSE; 
   A_2926_MXZ0MA.Mon3.CmdRstFalseTime := FALSE; 
   A_2926_MXZ0MA.Mon3.CmdRunTimeoutTime := FALSE; 
   A_2926_MXZ0MA.Mon3.CmdFaultReset := FALSE; 
   A_2926_MXZ0MA.Mon3.InLocal := FALSE; 
   A_2926_MXZ0MA.Mon3.spare0305 := FALSE; 
   A_2926_MXZ0MA.Mon3.InReport := FALSE; 
   A_2926_MXZ0MA.Mon3.OutTimeoutTime := FALSE; 
   A_2926_MXZ0MA.Mon3.InHWStop := FALSE; 
   A_2926_MXZ0MA.Mon3.InDPFault := FALSE; 
   A_2926_MXZ0MA.Mon3.OutPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.Mon3.OutPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.Mon3.OutFlagPos := FALSE; 
   A_2926_MXZ0MA.Mon3.OutFlagNeg := FALSE; 
   A_2926_MXZ0MA.Mon3.OutpFaultReset := FALSE; 
   A_2926_MXZ0MA.Mon3.OutTrue := FALSE; 
   A_2926_MXZ0MA.Mon3.StFalse := FALSE; 
   A_2926_MXZ0MA.Mon3.StCtoTrue := FALSE; 
   A_2926_MXZ0MA.Mon3.StTrue := FALSE; 
   A_2926_MXZ0MA.Mon3.StCtoFalse := FALSE; 
   A_2926_MXZ0MA.Mon3.StFault := FALSE; 
   A_2926_MXZ0MA.Mon3.OutAlarmNrLog := 0; 
   A_2926_MXZ0MA.Mon3.Par.ParObjectNo := 0; 
   A_2926_MXZ0MA.Mon3.Par.ParMsgType := 0; 
   A_2926_MXZ0MA.Mon3.Par.ParHornCode := 0; 
   A_2926_MXZ0MA.Mon3.Par.ParLogOff := FALSE; 
   A_2926_MXZ0MA.Mon3.Par.spare0401 := FALSE; 
   A_2926_MXZ0MA.Mon3.Par.Par2WorkingCond := FALSE; 
   A_2926_MXZ0MA.Mon3.Par.ParFaultRetry := FALSE; 
   A_2926_MXZ0MA.Mon3.Par.ParBinLevel := FALSE; 
   A_2926_MXZ0MA.Mon3.Par.ParDelayChange := 0; 
   A_2926_MXZ0MA.Mon3.Par.ParDelayTrue := 0; 
   A_2926_MXZ0MA.Mon3.Par.ParDelayFalse := 0; 
   A_2926_MXZ0MA.Mon3.Par.ParTimeoutTrue := 0; 
   A_2926_MXZ0MA.Mon3.Par.ParTimeoutFalse := 0; 
   A_2926_MXZ0MA.Mon3.Par.OutMonTime := 0; 
   A_2926_MXZ0MA.Mon3.Par.OutTransitionTime := 0; 
   A_2926_MXZ0MA.Mon3.Par.OutMonTrue := FALSE; 
   A_2926_MXZ0MA.Mon3.Par.OutMonFalse := FALSE; 
   A_2926_MXZ0MA.Mon3.Par.OutFlagFaultDev := FALSE; 
   A_2926_MXZ0MA.Mon3.Par.OutDelayTime := 0; 
   A_2926_MXZ0MA.A_2926_BSA13.StCode := 0; 
   A_2926_MXZ0MA.A_2926_BSA13.InMonTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InMonFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InStopTrueTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InStopFalseTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InpTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InpFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.CmdRstTrueTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.CmdRstFalseTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.CmdRunTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.CmdFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InLocal := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.spare0305 := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InReport := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.OutTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InHWStop := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.InDPFault := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.OutPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.OutPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.OutFlagPos := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.OutFlagNeg := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.OutpFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.OutTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.StFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.StCtoTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.StTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.StCtoFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.StFault := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.OutAlarmNrLog := 0; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParObjectNo := 26103; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParMsgType := 7135; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParHornCode := 10; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParLogOff := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.spare0401 := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.Par2WorkingCond := TRUE; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParFaultRetry := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParBinLevel := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParDelayChange := 0; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParDelayTrue := 10; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParDelayFalse := 20; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParTimeoutTrue := 50; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.ParTimeoutFalse := 0; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.OutMonTime := 0; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.OutTransitionTime := 0; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.OutMonTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.OutMonFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.OutFlagFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_BSA13.Par.OutDelayTime := 0; 
   A_2926_MXZ0MA.A_2926_BZS14_15.StCode := 0; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InMonTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InMonFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InStopTrueTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InStopFalseTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InpTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InpFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.CmdRstTrueTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.CmdRstFalseTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.CmdRunTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.CmdFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InLocal := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.spare0305 := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InReport := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.OutTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InHWStop := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.InDPFault := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.OutPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.OutPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.OutFlagPos := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.OutFlagNeg := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.OutpFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.OutTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.StFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.StCtoTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.StTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.StCtoFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.StFault := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.OutAlarmNrLog := 0; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParObjectNo := 26102; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParMsgType := 7135; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParHornCode := 0; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParLogOff := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.spare0401 := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.Par2WorkingCond := TRUE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParFaultRetry := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParBinLevel := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParDelayChange := 0; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParDelayTrue := 10; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParDelayFalse := 50; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParTimeoutTrue := 50; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.ParTimeoutFalse := 0; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.OutMonTime := 0; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.OutTransitionTime := 0; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.OutMonTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.OutMonFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.OutFlagFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS14_15.Par.OutDelayTime := 0; 
   A_2926_MXZ0MA.A_2926_BZS16_17.StCode := 0; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InMonTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InMonFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InStopTrueTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InStopFalseTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InpTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InpFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.CmdRstTrueTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.CmdRstFalseTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.CmdRunTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.CmdFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InLocal := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.spare0305 := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InReport := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.OutTimeoutTime := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InHWStop := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.InDPFault := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.OutPreAlarmTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.OutPreAlarmFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.OutFlagPos := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.OutFlagNeg := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.OutpFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.OutTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.StFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.StCtoTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.StTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.StCtoFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.StFault := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.OutAlarmNrLog := 0; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParObjectNo := 26106; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParMsgType := 7135; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParHornCode := 0; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParLogOff := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.spare0401 := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.Par2WorkingCond := TRUE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParFaultRetry := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParBinLevel := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParDelayChange := 0; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParDelayTrue := 10; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParDelayFalse := 50; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParTimeoutTrue := 50; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.ParTimeoutFalse := 0; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.OutMonTime := 0; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.OutTransitionTime := 0; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.OutMonTrue := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.OutMonFalse := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.OutFlagFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_BZS16_17.Par.OutDelayTime := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.StCode := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.InEnableRev := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InEnableFwd := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InSlow := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InpRunSlow := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InpRunFast := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InpRunRev := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InpRunFwd := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InpFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.CmdOff := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.CmdOn := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.CmdNext := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.CmdFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InLocal := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InManual := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InReport := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InSeqStop := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InHWStop := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InDPFault := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.OutIdling := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.OutpRunSlow := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.OutpRunFast := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.OutpRunRev := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.OutpRunFwd := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.OutpFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.StStopped := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.StStarting := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.StStartedFwd := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.StStopping := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.StFault := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.StStartedRev := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InOutManSlow := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.InOutManRev := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.OutAlarmNrLog := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParObjectNo := 26105; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParMsgType := 7053; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParHornCode := 10; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParLogOff := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParManual := TRUE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParRestartDelay := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.Par2Speed := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParHeavyStartup := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.spare45 := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.spare46 := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.OutEdgeFaultReset := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.OutDelayFault := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.OutFlagFaultDev := FALSE; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParMonTime := 100; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParStartingTime := 100; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParStoppingTime := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParIdlingTime := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.ParDelayTime := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.OutMonTime := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.OutTransitionTime := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.OutDelayTime := 0; 
   A_2926_MXZ0MA.A_2926_MXZ01.Par.InOutManPulseLen := 0; 
   A_3101_KILN0.StCode := 0; 
   A_3101_KILN0.InMonTrue := FALSE; 
   A_3101_KILN0.InMonFalse := FALSE; 
   A_3101_KILN0.InPreAlarmTrue := FALSE; 
   A_3101_KILN0.InPreAlarmFalse := FALSE; 
   A_3101_KILN0.InStopTrueTime := FALSE; 
   A_3101_KILN0.InStopFalseTime := FALSE; 
   A_3101_KILN0.InpTrue := FALSE; 
   A_3101_KILN0.InpFaultDev := FALSE; 
   A_3101_KILN0.CmdRstTrueTime := FALSE; 
   A_3101_KILN0.CmdRstFalseTime := FALSE; 
   A_3101_KILN0.CmdRunTimeoutTime := FALSE; 
   A_3101_KILN0.CmdFaultReset := FALSE; 
   A_3101_KILN0.InLocal := FALSE; 
   A_3101_KILN0.spare0305 := FALSE; 
   A_3101_KILN0.InReport := FALSE; 
   A_3101_KILN0.OutTimeoutTime := FALSE; 
   A_3101_KILN0.InHWStop := FALSE; 
   A_3101_KILN0.InDPFault := FALSE; 
   A_3101_KILN0.OutPreAlarmTrue := FALSE; 
   A_3101_KILN0.OutPreAlarmFalse := FALSE; 
   A_3101_KILN0.OutFlagPos := FALSE; 
   A_3101_KILN0.OutFlagNeg := FALSE; 
   A_3101_KILN0.OutpFaultReset := FALSE; 
   A_3101_KILN0.OutTrue := FALSE; 
   A_3101_KILN0.StFalse := FALSE; 
   A_3101_KILN0.StCtoTrue := FALSE; 
   A_3101_KILN0.StTrue := FALSE; 
   A_3101_KILN0.StCtoFalse := FALSE; 
   A_3101_KILN0.StFault := FALSE; 
   A_3101_KILN0.OutAlarmNrLog := 0; 
   A_3101_KILN0.Par.ParObjectNo := 26108; 
   A_3101_KILN0.Par.ParMsgType := 7154; 
   A_3101_KILN0.Par.ParHornCode := 0; 
   A_3101_KILN0.Par.ParLogOff := FALSE; 
   A_3101_KILN0.Par.spare0401 := FALSE; 
   A_3101_KILN0.Par.Par2WorkingCond := FALSE; 
   A_3101_KILN0.Par.ParFaultRetry := FALSE; 
   A_3101_KILN0.Par.ParBinLevel := FALSE; 
   A_3101_KILN0.Par.ParDelayChange := 20; 
   A_3101_KILN0.Par.ParDelayTrue := 10; 
   A_3101_KILN0.Par.ParDelayFalse := 0; 
   A_3101_KILN0.Par.ParTimeoutTrue := 0; 
   A_3101_KILN0.Par.ParTimeoutFalse := 0; 
   A_3101_KILN0.Par.OutMonTime := 0; 
   A_3101_KILN0.Par.OutTransitionTime := 0; 
   A_3101_KILN0.Par.OutMonTrue := FALSE; 
   A_3101_KILN0.Par.OutMonFalse := FALSE; 
   A_3101_KILN0.Par.OutFlagFaultDev := FALSE; 
   A_3101_KILN0.Par.OutDelayTime := 0; 
//Parameter =A-2926-QXV31 : BALL VALVE SPRAY WATER OPEN
      #A_2926_QXV31.Par.ParObjectNo                             :=26109;
      #A_2926_QXV31.Par.ParMsgType                              :=7081;
      #A_2926_QXV31.Par.ParHornCode                             :=10;
      #A_2926_QXV31.Par.ParMonTime                              :=100;
      #A_2926_QXV31.Par.ParPulseTimeHN                          :=5;
      #A_2926_QXV31.Par.ParPulseTimeLN                          :=5;
      #A_2926_QXV31.Par.ParIdlingTime                           :=0;
      #A_2926_QXV31.Par.ParDelayTime                            :=0;
      #A_2926_QXV31.Par.ParLogOff                               :=False;
      #A_2926_QXV31.Par.ParManual                               :=True;
      #A_2926_QXV31.Par.ParPulseValve                           :=False;
      #A_2926_QXV31.Par.ParContValve                            :=True;
      #A_2926_QXV31.Par.ParManualFlap                           :=False;
//
//
END_DATA_BLOCK

